////
/// @group tooltip
////

@import '@react-md/typography/dist/mixins';
@import '@react-md/transition/dist/mixins';
@import 'functions';
@import 'variables';


@mixin rmd-tooltip-theme($style) {
  #{$style}: rmd-tooltip-theme($style);
}

@mixin rmd-tooltip-base {
  @include rmd-typography-base;
  @include rmd-typography-value(body-1, letter-spacing);
  @include rmd-tooltip-theme(background-color);
  @include rmd-tooltip-theme(color);

  align-items: center;
  border-radius: $rmd-tooltip-border-radius;
  display: flex;
  font-size: $rmd-tooltip-font-size;
  line-height: $rmd-tooltip-line-height;
  min-height: $rmd-tooltip-min-height;
  opacity: 0;
  padding-left: $rmd-tooltip-horizontal-padding;
  padding-right: $rmd-tooltip-horizontal-padding;
  pointer-events: none;
  position: absolute;
  text-transform: none;
  transition-property: opacity, transform;
  user-select: none;
  white-space: nowrap;
  z-index: $rmd-tooltip-z-index;
}

/// Creates the styles for one of the four tooltip positions.
///
/// @example scss - Example SCSS Usage
///   .rmd-tooltip--left {
///     @include rmd-tooltip-position(left, $rmd-tooltip-spacing);
///   }
///
/// @param {String} position - One of the four tooltip positions. (top, right, bottom, or left)
/// @param {Number} spacing - The amount of spacing to use between the tooltip and the container element. This should
///   normally just be `$rmd-tooltip-spacing` or `$rmd-tooltip-dense-spacing`.
@mixin rmd-tooltip-position($position, $spacing) {
  @if not index($rmd-tooltip-position-values, $position) {
    @error 'Invalid position specified! \'#{$position}\' doesn\'t exist. Choose one of #{$valid-positions}.';
  }

  // add a negative spacing since the position will be transformed for centering below
  $inversed-position: rmd-tooltip-inverse-position($position);
  $inversed-property: rmd-tooltip-position-to-property($inversed-position);
  #{$inversed-property}: calc(100% + #{$spacing});

  $horizontal: $position == 'left' or $position == 'right';
  $distance: if(
    $position == 'left' or $position == 'above',
    -$rmd-tooltip-transition-distance,
    $rmd-tooltip-transition-distance
  );

  $inactive-x: if($horizontal, $distance, -50%);
  $inactive-y: if($horizontal, -50%, $distance);

  left: if($horizontal, null, 50%);
  top: if($horizontal, 50%, null);
  transform: translate3d($inactive-x, $inactive-y, 0);

  &.rmd-tooltip--visible {
    $active-x: if($horizontal, 0, -50%);
    $active-y: if($horizontal, -50%, 0);

    transform: translate3d($active-x, $active-y, 0);
  }
}

/// Creates the base styles to allow line-wrapping tooltips.
@mixin rmd-tooltip-line-wrap {
  padding-bottom: $rmd-tooltip-line-wrap-vertical-padding;
  padding-top: $rmd-tooltip-line-wrap-vertical-padding;
  white-space: normal;
}

/// Creates the dense tooltip style overrides.
@mixin rmd-tooltip-dense {
  font-size: $rmd-tooltip-dense-font-size;
  min-height: $rmd-tooltip-dense-min-height;
  padding-left: $rmd-tooltip-dense-horizontal-padding;
  padding-right: $rmd-tooltip-dense-horizontal-padding;


  @each $position in $rmd-tooltip-position-values {
    &.rmd-tooltip--#{$position} {
      $inversed-position: rmd-tooltip-inverse-position($position);
      $inversed-property: rmd-tooltip-position-to-property($inversed-position);
      #{$inversed-property}: calc(100% + #{$rmd-tooltip-dense-spacing});
    }
  }

  &-line-wrap {
    padding-bottom: $rmd-tooltip-dense-line-wrap-vertical-padding;
    padding-top: $rmd-tooltip-dense-line-wrap-vertical-padding;
  }
}

@mixin react-md-tooltip {
  .rmd-tooltip {
    @include rmd-tooltip-base;

    &--line-wrap {
      @include rmd-tooltip-line-wrap;
    }

    &--dense {
      @include rmd-tooltip-dense;
    }

    &--visible {
      opacity: 1;
    }

    &--enter {
      @include rmd-transition(deceleration);

      transition-duration: $rmd-tooltip-enter-duration;
    }

    &--exit {
      @include rmd-transition(acceleration);

      transition-duration: $rmd-tooltip-exit-duration;
    }

    &--exit-active {
      opacity: 0;
    }

    &--left {
      @include rmd-tooltip-position(left, $rmd-tooltip-spacing);
    }

    &--above {
      @include rmd-tooltip-position(above, $rmd-tooltip-spacing);
    }

    &--right {
      @include rmd-tooltip-position(right, $rmd-tooltip-spacing);
    }

    &--below {
      @include rmd-tooltip-position(below, $rmd-tooltip-spacing);
    }

    &--portal {
      // reset everything since it is now handled by inline styles
      bottom: auto;
      left: auto;
      right: auto;
      top: auto;

      &.rmd-tooltip--above {
        transform: translateY(-$rmd-tooltip-transition-distance);
      }

      &.rmd-tooltip--below {
        transform: translateY($rmd-tooltip-transition-distance);
      }

      &.rmd-tooltip--left {
        transform: translateX(-$rmd-tooltip-transition-distance);
      }

      &.rmd-tooltip--right {
        transform: translateX($rmd-tooltip-transition-distance);
      }

      &.rmd-tooltip--visible {
        transform: none;
      }
    }
  }
}
