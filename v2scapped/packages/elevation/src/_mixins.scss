////
/// @group elevation
////

@import '@react-md/theme/dist/variables';
@import 'variables';

/// Create the box shadow based on a z-value.
///
/// @example scss - Example Usage SCSS
/// .my-class {
///   @include rmd-elevation(8);
///
///   background-color: white;
///   position: fixed;
///   z-index: 8;
/// }
///
/// @param {Number} z-value - This should be a number between 0 and 24.
/// @param {Color} color [rmd-elevation-color] - The color to use for the box-shadow.
/// @param {Number} opacity-boost [0] - The amount to boost the default opacity levels for the
///   three box-shadows applied.
@mixin rmd-elevation($z-value, $color: $rmd-elevation-color, $opacity-boost: 0) {
  @if type-of($z-value) != 'number' or not unitless($z-value) {
    @error '$z-value must be a unitless number, but received \'#{$z-value}\'';
  }

  @if $z-value < 0 or $z-value > 24 {
    @error '$z-value must be between 0 and 24, but received \'#{$z-value}\'';
  }

  $color: rmd-theme-prop-value($color);
  $shadow-1-value: map-get($rmd-elevation-shadow-1-map, $z-value);
  $shadow-1-color: rgba($color, $rmd-elevation-shadow-1-opacity + $opacity-boost);

  $shadow-2-value: map-get($rmd-elevation-shadow-2-map, $z-value);
  $shadow-2-color: rgba($color, $rmd-elevation-shadow-2-opacity + $opacity-boost);

  $shadow-3-value: map-get($rmd-elevation-shadow-3-map, $z-value);
  $shadow-3-color: rgba($color, $rmd-elevation-shadow-3-opacity + $opacity-boost);

  box-shadow: #{'#{$shadow-1-value} #{$shadow-1-color}'}, #{'#{$shadow-2-value} #{$shadow-2-color}'}, #{'#{$shadow-3-value} #{$shadow-3-color}'};
}
