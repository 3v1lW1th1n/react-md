////
/// @group app-bar
////

@import '@react-md/elevation/dist/mixins';
@import '@react-md/theme/dist/mixins';
@import '@react-md/utils/dist/mixins';
@import 'variables';


/// Creates the base styles for the `AppBar` component.
///
/// @example scss - Simple Example
///   .app-bar {
///     @include rmd-app-bar-base;
///   }
///
/// @example html - Simple Example
///   <div class="app-bar">
///     An app bar with the base styles.
///   </div>
@mixin rmd-app-bar-base {
  align-items: center;
  display: flex;
}

/// Creates the styles for the `AppBar` component when it is fixed to the top or bottom
/// of the page. This will create four classes:
/// - `&--fixed`
/// - `&--fixed-elevation`
/// - `&--top`
/// - `&--bottom`
///
/// To get the correct styles and positions for a fixed app bar, you will need to apply the `--fixed` class
/// as well as the `--top` or `--bottom` to fix it to the top or bottom of the page. If the app bar should
/// gain elevation, you should also apply the `--fixed-elevation` class. See the examples below for the
/// different use cases.
///
/// @example scss - Simple Example
///   .app-bar {
///     @include rmd-app-bar-fixed;
///   }
///
/// @example html - Simple Example
///   <div class="app-bar app-bar--fixed app-bar--top">
///     An app-bar fixed to the top of the page.
///   </div>
///
///   <div class="app-bar app-bar--fixed app-bar--fixed-elevation app-bar--bottom">
///     An app-bar fixed to the bottom of the page with elevation
///   </div>
///
/// @example scss - Custom Elevation Example
///   .app-bar {
///     @include rmd-app-bar-fixed(8);
///   }
///
/// @param {Number} elevation [$rmd-app-bar-fixed-elevation] - The elevation to use for a fixed app bar. This should
///   be a number between 0 and 24 since it uses the `rmd-elevation` mixin.
@mixin rmd-app-bar-fixed($elevation: $rmd-app-bar-fixed-elevation) {
  &--fixed {
    left: 0;
    position: fixed;
    right: 0;
    z-index: $rmd-app-bar-z-index;
  }

  &--fixed-elevation {
    @include rmd-elevation($elevation);
  }

  &--top {
    top: 0;
  }

  &--bottom {
    bottom: 0;
  }
}

/// Creates the styles for the different app bar sizes.
///
/// @example scss - Simple Example
///   .app-bar {
///     @include rmd-app-bar-sizes;
///   }
///
/// @example html - Simple Example
///   <div class="app-bar">
///     A default sized app bar.
///   </div>
///
///   <div class="app-bar app-bar--dense">
///     A dense sized app bar.
///   </div>
///
///   <div class="app-bar app-bar--prominent">
///     A prominent sized app bar.
///   </div>
///
///   <!-- NOTE: To get correct prominent and dense styles, you will need to apply both the `--prominent` and `--prominent-dense` suffixes. -->
///   <div class="app-bar app-bar--prominent app-bar--prominent-dense">
///     A prominent and sized app bar.
///   </div>
///
/// @param {Number} height [$rmd-app-bar-height] - The default height to use for an AppBar.
/// @param {Number} dense-height [$rmd-app-bar-dense-height] - The height to use for a dense AppBar.
/// @param {Number} prominent-height [$rmd-app-bar-prominent-height] - The height to use for a prominent AppBar.
/// @param {Number} prominent-dense-height [$rmd-app-bar-prominent-dense-height] - The height to use for a prominent and dense AppBar.
@mixin rmd-app-bar-sizes(
  $height: $rmd-app-bar-height,
  $dense-height: $rmd-app-bar-dense-height,
  $prominent-height: $rmd-app-bar-prominent-height,
  $prominent-dense-height: $rmd-app-bar-prominent-dense-height
) {
  height: $height;

  &--dense {
    height: $dense-height;
  }

  &--prominent {
    align-items: flex-start;
    flex-wrap: wrap;
    height: $prominent-height;
  }

  &--prominent-dense {
    height: $prominent-dense-height;
  }
}

/// Creates the styles for different app bar themes. This will create 4 classes:
/// - `--primary`
/// - `--secondary`
/// - `--default`
/// - `--child-inherit`
///
/// The primary and secondary suffixes will use the theme variables for generating the correct theme background color and
/// text color on top of the theme color. The default suffix is used to create a third theme type with any colors that are
/// provided. Finally, the `--child-inherit` suffix will allow child `AppBarNav`, `AppBarTitle`, and `AppBarAction` components
/// to inherit text color instead of using the default color.
///
/// @example scss - Simple Example
///   $rmd-theme-primary: $rmd-blue-500;
///   $rmd-theme-secondary: $rmd-pink-a-200;
///
///   .app-bar {
///     @include rmd-app-bar-themes;
///   }
///
/// @example html - Simple Example
///   <div class="app-bar app-bar--primary">
///     An app bar with the primary theme color as the background color.
///   </div>
///
///   <div class="app-bar app-bar--secondary">
///     An app bar with the secondary theme color as the background color.
///   </div>
///
///   <div class="app-bar app-bar--default">
///     An app bar with the default theme applied.
///   </div>
///
/// @param {Color} default-background-color [$rmd-app-bar-default-background-color] - The background color to use for the "default" theme.
/// @param {Color} default-text-color [$rmd-app-bar-default-text-color] - The text color to use for the "default" theme.
@mixin rmd-app-bar-themes($default-background-color: $rmd-app-bar-default-background-color, $default-text-color: $rmd-app-bar-default-text-color) {
  &--primary {
    @include rmd-theme(background-color, primary);
    @include rmd-theme(color, on-primary);
  }

  &--secondary {
    @include rmd-theme(background-color, secondary);
    @include rmd-theme(color, on-secondary);
  }

  &--default {
    background-color: $default-background-color;
    color: $default-text-color;
  }

  &--child-inherit {
    .rmd-app-bar__nav,
    .rmd-app-bar__title,
    .rmd-app-bar__action {
      color: inherit;
    }
  }
}
/// Creats the styles for the `AppBarNav` component. The base classes for buttons neext to be applied
/// as well.
///
/// @example scss - Simple Example
///   .app-bar__nav {
///     // add the next two lines if not applying the base .rmd-btn classes
///     // @include rmd-btn-base;
///     // @include rmd-btn-text;
///     @include rmd-app-bar-nav;
///   }
///
/// @example html - Simple Example
///   <div class="app-bar app-bar--primary">
///     <button type="button" className="app-bar__nav">Nav Button</button>
///   </div>
///
@mixin rmd-app-bar-nav {
  flex-shrink: 0;
  margin-left: $rmd-app-bar-lr-margin;
  margin-right: $rmd-app-bar-title-nav-margin;

  // sass-lint:disable-block mixins-before-declarations
  @include rmd-utils-rtl {
    margin-left: $rmd-app-bar-title-nav-margin;
    margin-right: $rmd-app-bar-lr-margin;
  }
}

/// Creates the styles for the `AppBarTitle` component.
///
/// @example scss - Example Usage SCSS
///   .rmd-app-bar__title {
///     @include rmd-app-bar-title;
///   }
@mixin rmd-app-bar-title {
  @include rmd-typography(headline-6);

  line-height: $rmd-app-bar-title-line-height;
  margin-bottom: 0;
  margin-left: $rmd-app-bar-keyline;
  margin-top: 0;

  // sass-lint:disable-block mixins-before-declarations
  @include rmd-utils-rtl {
    margin-left: auto;
    margin-right: $rmd-app-bar-keyline;
  }

  .rmd-app-bar__nav ~ & {
    margin-left: 0;

    @include rmd-utils-rtl {
      margin-right: 0;
    }
  }

  &--keyline {
    margin-left: $rmd-app-bar-title-keyline;

    @include rmd-utils-rtl {
      margin-left: auto;
      margin-right: $rmd-app-bar-title-keyline;
    }
  }
}

/// Creates the styles for the `AppBarAction` component.
///
/// @example scss - Example Usage SCSS
///   .rmd-app-bar__action {
///     @include rmd-app-bar-action;
///   }
@mixin rmd-app-bar-action {
  flex-shrink: 0;

  &--first {
    margin-left: auto;

    // sass-lint:disable-block mixins-before-declarations
    @include rmd-utils-rtl {
      margin-left: $rmd-app-bar-lr-margin;
      margin-right: auto;
    }
  }

  &--last {
    margin-left: $rmd-app-bar-lr-margin;
    margin-right: $rmd-app-bar-nav-margin;

    // sass-lint:disable-block mixins-before-declarations
    @include rmd-utils-rtl {
      margin-left: $rmd-app-bar-nav-margin;
      margin-right: $rmd-app-bar-lr-margin;
    }
  }
}

/// Creates the styles for the `AppBarRow` component.
///
/// @example scss - Example Usage SCSS
///   .rmd-app-bar__row {
///     @include rmd-app-bar-row;
///   }
@mixin rmd-app-bar-row {
  align-items: center;
  display: flex;
  height: $rmd-app-bar-height;
  width: 100%;

  &--dense {
    height: $rmd-app-bar-dense-height;
  }
}

/// A simple mixin for updating an element to be offset by the current app bar's height if it is one
/// of the built-in heights for react-md. This is normally just used for fixed top app bars, but you
/// can change the `$style` param to be `padding-bottom` for app bars fixed at the bottom of the viewport.
///
/// @example scss - Example Usage SCSS
///   .main {
///     @include rmd-app-bar-offset;
///
///     &--prominent {
///       @include rmd-app-bar-offset(true, true);
///     }
///
///     &--dense {
///       @include rmd-app-bar-offset(false, true);
///     }
///
///     &--dense-prominent {
///       @include rmd-app-bar-offset(true, true);
///     }
///
///     &--margin {
///       @include rmd-app-bar-offset(false, false, margin-top);
///     }
///   }
///
/// @param {Boolean} prominent [false] - Boolean if the styles should reflect a prominent app bar. If both
///     this and the `dense` params are set to `true`, the styles will reflect a prominent dense app bar.
/// @param {Boolean} dense [false] - Boolean if the styles should reflect a dense app bar. If both this and
///     the `prominent` params are set to `true`, the styles will reflect a prominent dense app bar.
/// @param {String} style [rmd-app-bar-offset-style] - The style to apply the offset to.
@mixin rmd-app-bar-offset($prominent: false, $dense: false, $style: $rmd-app-bar-offset-style) {
  $distance: null;
  @if $prominent {
    $distance: if($dense, $rmd-app-bar-prominent-dense-height, $rmd-app-bar-prominent-height);
  } @else {
    $distance: if($dense, $rmd-app-bar-dense-height, $rmd-app-bar-height);
  }

  #{$style}: $distance;
}

/// Creates all the offset class names applied with the current style.
///
/// @param {String} style [rmd-app-bar-offset-style] - The style to apply the offset to.
/// @param {String} offsets [rmd-app-bar-offsets] - A list of offsets that should be created.
@mixin rmd-app-bar-offsets($style: $rmd-app-bar-offset-style, $offsets: $rmd-app-bar-offsets) {
  @each $offset in $offsets {
    @if not index($rmd-app-bar-valid-offsets, $offset) {
      @error 'Invalid offset: \'#{$offset}\'! Choose one of \'#{$rmd-app-bar-valid-offsets}\'.';
    }

    $dense: $offset == 'dense' or $offset == 'prominent-dense';
    $prominent: $offset == 'prominent' or $offset == 'prominent-dense';
    $selector: '.rmd-app-bar-offset';
    @if $offset != 'base' {
      $selector: $selector + '-#{$offset}';
    }

    #{$selector} {
      @include rmd-app-bar-offset($prominent, $dense, $style);
    }
  }
}

/// Creates all the styles for all the AppBar components.
@mixin react-md-app-bar {
  @include rmd-app-bar-offsets;

  .rmd-app-bar {
    @include rmd-app-bar-base;
    @include rmd-app-bar-sizes;
    @include rmd-app-bar-fixed;
    @include rmd-app-bar-themes;

    &__nav {
      @include rmd-app-bar-nav;
    }

    &__title {
      @include rmd-app-bar-title;
    }

    &__action {
      @include rmd-app-bar-action;
    }

    &__row {
      @include rmd-app-bar-row;
    }
  }
}
