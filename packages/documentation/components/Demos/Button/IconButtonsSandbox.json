{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>Button Example - Icon Buttons</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { StatesConfig } from \"@react-md/states\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <StatesConfig>\n    <Demo />\n  </StatesConfig>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import '@react-md/button/dist/mixins';\n@import '@react-md/icon/dist/mixins';\n@import '@react-md/states/dist/mixins';\n@import '@react-md/theme/dist/mixins';\n@import '@react-md/typography/dist/mixins';\n@import '@react-md/utils/dist/mixins';;\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Button Example - Icon Buttons",
      "description": "Example from https://react-md.dev/packages/button/demos#icon-buttons",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "next",
        "@react-md/icon": "next",
        "@react-md/material-icons": "next",
        "classnames": "latest",
        "react": "latest",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "react-dom": "latest"
      },
      "devDependencies": {
        "react-scripts": "latest",
        "node-sass": "latest",
        "typescript": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "@types/jest": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  ".env": {
    "content": "SASS_PATH=node_modules:src",
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FunctionComponent } from \"react\";\nimport Container from \"./Container\";\nimport { Button } from \"@react-md/button\";\nimport { FontIcon } from \"@react-md/icon\";\nimport { FavoriteSVGIcon, DeleteSVGIcon } from \"@react-md/material-icons\";\n\nconst IconButtons: FunctionComponent = () => (\n  <Container>\n    <Button id=\"icon-button-1\" buttonType=\"icon\">\n      <FontIcon>favorite</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-2\"\n      buttonType=\"icon\"\n      theme=\"secondary\"\n      aria-label=\"Favorite\"\n    >\n      <FavoriteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-3\"\n      buttonType=\"icon\"\n      theme=\"warning\"\n      aria-label=\"Move to Trash\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-4\"\n      buttonType=\"icon\"\n      theme=\"error\"\n      aria-label=\"Permanently Delete\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button id=\"icon-button-5\" buttonType=\"icon\" theme=\"clear\">\n      <FontIcon>add</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-6\"\n      buttonType=\"icon\"\n      disabled\n      aria-label=\"Disabled Add Button\"\n    >\n      <FontIcon>add</FontIcon>\n    </Button>\n    <Button id=\"icon-button-7\" buttonType=\"icon\" themeType=\"outline\">\n      <FontIcon>favorite</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-8\"\n      buttonType=\"icon\"\n      theme=\"secondary\"\n      themeType=\"outline\"\n      aria-label=\"Favorite\"\n    >\n      <FavoriteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-9\"\n      buttonType=\"icon\"\n      theme=\"warning\"\n      themeType=\"contained\"\n      aria-label=\"Move to Trash\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-10\"\n      buttonType=\"icon\"\n      theme=\"error\"\n      themeType=\"contained\"\n      aria-label=\"Permanently Delete\"\n    >\n      <DeleteSVGIcon />\n    </Button>\n    <Button\n      id=\"icon-button-11\"\n      buttonType=\"icon\"\n      theme=\"clear\"\n      themeType=\"outline\"\n    >\n      <FontIcon>add</FontIcon>\n    </Button>\n    <Button\n      id=\"icon-button-12\"\n      buttonType=\"icon\"\n      disabled\n      aria-label=\"Disabled Add Button\"\n      themeType=\"outline\"\n    >\n      <FontIcon>add</FontIcon>\n    </Button>\n  </Container>\n);\n\nexport default IconButtons;\n",
    "isBinary": false
  },
  "src/Container.tsx": {
    "content": "import React, { FunctionComponent, HTMLAttributes } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./container.scss\";\n\nconst Container: FunctionComponent<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <div {...props} className={cn(\"button-container\", className)}>\n    {children}\n  </div>\n);\n\nexport default Container;\n",
    "isBinary": false
  },
  "src/container.scss": {
    "content": ".button-container {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  // justify-content: center;\n\n  .rmd-button {\n    margin: 1rem;\n  }\n}\n",
    "isBinary": false
  }
}
