{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>Button Example - Custom Button Theme</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { StatesConfig } from \"@react-md/states\";\nimport { KeyboardTracker } from \"@react-md/wia-aria\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <StatesConfig preventColorPollution>\n    <KeyboardTracker>\n      <Demo />\n    </StatesConfig>\n  </StatesConfig>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import '@react-md/button/dist/mixins';\n@import '@react-md/icon/dist/mixins';\n@import '@react-md/material-icons/dist/mixins';\n@import '@react-md/states/dist/mixins';\n@import '@react-md/transition/dist/mixins';\n@import '@react-md/utils/dist/mixins';\n@import '@react-md/theme/dist/mixins';\n@import '@react-md/typography/dist/mixins';;\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Button Example - Custom Button Theme",
      "description": "Example from https://react-md.dev/packages/button/demos#custom-button-theme",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "next",
        "@react-md/icon": "next",
        "@react-md/material-icons": "next",
        "@react-md/states": "next",
        "@react-md/transition": "next",
        "@react-md/utils": "next",
        "@react-md/wia-aria": "next",
        "classnames": "latest",
        "react": "latest",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "react-dom": "latest"
      },
      "devDependencies": {
        "react-scripts": "latest",
        "node-sass": "latest",
        "typescript": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "@types/jest": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  ".env": {
    "content": "SASS_PATH=node_modules:src",
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FunctionComponent } from \"react\";\nimport Container from \"./Container\";\nimport { Button } from \"@react-md/button\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport {\n  CloseSVGIcon,\n  DeleteSVGIcon,\n  ChatSVGIcon,\n} from \"@react-md/material-icons\";\n\nimport \"./custom-button-theme.scss\";\n\nconst CustomButtonTheme: FunctionComponent = () => (\n  <Container className=\"custom-button-themes\">\n    <Button id=\"custom-themed-button-1\" themeType=\"outline\" theme=\"secondary\">\n      Custom\n    </Button>\n    <Button\n      id=\"custom-themed-button-2\"\n      buttonType=\"icon\"\n      themeType=\"outline\"\n      theme=\"primary\"\n    >\n      <CloseSVGIcon />\n    </Button>\n    <Button id=\"custom-themed-button-3\" themeType=\"contained\" theme=\"error\">\n      <TextIconSpacing icon={<DeleteSVGIcon />}>Delete Forever</TextIconSpacing>\n    </Button>\n    <Button\n      id=\"custom-themed-button-4\"\n      buttonType=\"icon\"\n      themeType=\"outline\"\n      theme=\"warning\"\n      className=\"custom-button-themes__big-icon\"\n    >\n      <ChatSVGIcon />\n    </Button>\n  </Container>\n);\n\nexport default CustomButtonTheme;\n",
    "isBinary": false
  },
  "src/Container.tsx": {
    "content": "import React, { FunctionComponent, HTMLAttributes } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./container.scss\";\n\nconst Container: FunctionComponent<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <div {...props} className={cn(\"button-container\", className)}>\n    {children}\n  </div>\n);\n\nexport default Container;\n",
    "isBinary": false
  },
  "src/container.scss": {
    "content": ".button-container {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  // justify-content: center;\n\n  .rmd-button {\n    margin: 1rem;\n  }\n}\n",
    "isBinary": false
  },
  "src/custom-button-theme.scss": {
    "content": "@import '@react-md/theme/dist/color-palette';\n@import '@react-md/button/dist/mixins';\n@import '@react-md/icon/dist/mixins';\n@import '@react-md/theme/dist/mixins';\n\n.custom-button-themes {\n  @include rmd-button-theme-update-var(outline-width, 4px);\n  @include rmd-button-theme-update-var(text-height, 4rem);\n  @include rmd-button-theme-update-var(text-min-width, 8rem);\n  @include rmd-button-theme-update-var(text-horizontal-padding, 4rem);\n  @include rmd-button-theme-update-var(text-border-radius, 2rem);\n  @include rmd-button-theme-update-var(icon-border-radius, 1rem);\n\n  &__big-icon {\n    @include rmd-button-theme-update-var(icon-size, $rmd-button-icon-size * 2);\n    @include rmd-icon-theme-update-var(size, $rmd-icon-size * 2);\n  }\n}\n",
    "isBinary": false
  }
}
