{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>Button Example - Contained Buttons</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nrender(<Demo />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import '@react-md/button/dist/mixins';\n@import '@react-md/states/dist/mixins';\n@import '@react-md/transition/dist/mixins';\n@import '@react-md/utils/dist/mixins';\n@import '@react-md/wia-aria/dist/mixins';\n@import 'classnames/dist/mixins';\n@import 'react/dist/mixins';\n@import '@react-md/theme/dist/mixins';\n@import '@react-md/typography/dist/mixins';;\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Button Example - Contained Buttons",
      "description": "Example from https://react-md.dev/packages/button/demos#contained-buttons",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "latest",
        "@react-md/states": "latest",
        "@react-md/transition": "latest",
        "@react-md/utils": "latest",
        "@react-md/wia-aria": "latest",
        "classnames": "latest",
        "react": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "react-scripts": "latest",
        "node-sass": "latest",
        "typescript": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "@types/jest": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FunctionComponent } from \"react\";\nimport Container from \"./Container\";\nimport { Button } from \"@react-md/button\";\n\nconst ContainedButtons: FunctionComponent = () => (\n  <Container>\n    <Button id=\"contained-button-1\" themeType=\"contained\">\n      Contained Button 1\n    </Button>\n    <Button id=\"contained-button-2\" theme=\"secondary\" themeType=\"contained\">\n      Contained Button 2\n    </Button>\n    <Button id=\"contained-button-3\" theme=\"warning\" themeType=\"contained\">\n      Contained Button 3\n    </Button>\n    <Button id=\"contained-button-4\" theme=\"error\" themeType=\"contained\">\n      Contained Button 4\n    </Button>\n    <Button id=\"contained-button-5\" theme=\"clear\" themeType=\"contained\">\n      Contained Button 5\n    </Button>\n    <Button id=\"contained-button-6\" themeType=\"contained\" disabled>\n      Disabled Contained Button\n    </Button>\n  </Container>\n);\n\nexport default ContainedButtons;\n",
    "isBinary": false
  },
  "src/Container.tsx": {
    "content": "import React, { FunctionComponent, HTMLAttributes } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./container.scss\";\n\nconst Container: FunctionComponent<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  children,\n  ...props\n}) => (\n  <div {...props} className={cn(\"button-container\", className)}>\n    {children}\n  </div>\n);\n\nexport default Container;\n",
    "isBinary": false
  },
  "src/container.scss": {
    "content": ".button-container {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  // justify-content: center;\n\n  .rmd-button {\n    margin: 1rem;\n  }\n}\n",
    "isBinary": false
  }
}
