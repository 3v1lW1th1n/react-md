{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>Overlay Example - Custom Theme</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nrender(<Demo />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import '@react-md/button/dist/mixins';\n@import '@react-md/icon/dist/mixins';\n@import '@react-md/list/dist/mixins';\n@import '@react-md/overlay/dist/mixins';\n@import '@react-md/portal/dist/mixins';\n@import '@react-md/states/dist/mixins';\n@import '@react-md/transition/dist/mixins';\n@import '@react-md/utils/dist/mixins';\n@import '@react-md/wia-aria/dist/mixins';\n@import 'react/dist/mixins';\n@import '@react-md/theme/dist/mixins';\n@import '@react-md/typography/dist/mixins';;\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Overlay Example - Custom Theme",
      "description": "Example from https://react-md.dev/packages/overlay/demos#custom-theme",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "latest",
        "@react-md/icon": "latest",
        "@react-md/list": "latest",
        "@react-md/overlay": "latest",
        "@react-md/portal": "latest",
        "@react-md/states": "latest",
        "@react-md/transition": "latest",
        "@react-md/utils": "latest",
        "@react-md/wia-aria": "latest",
        "react": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "react-scripts": "latest",
        "node-sass": "latest",
        "typescript": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "@types/jest": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FunctionComponent, Fragment } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { Overlay } from \"@react-md/overlay\";\n\nimport \"./custom-theme.scss\";\nimport useToggle from \"./useToggle\";\nimport { List, ListItem } from \"@react-md/list\";\n\nconst CustomTheme: FunctionComponent = () => {\n  const { visible, toggle, hide } = useToggle();\n  return (\n    <Fragment>\n      <Button\n        id=\"custom-theme-button\"\n        themeType=\"outline\"\n        theme=\"clear\"\n        onClick={toggle}\n      >\n        Show Overlay\n      </Button>\n      <Overlay\n        id=\"custom-theme-overlay\"\n        onRequestClose={hide}\n        visible={visible}\n        className=\"custom-theme-overlay\"\n      >\n        <List className=\"custom-theme-overlay__list\">\n          {Array.from(new Array(10)).map((_, i) => (\n            <ListItem id={`item-${i}`} key={i}>\n              {`Item ${i + 1}`}\n            </ListItem>\n          ))}\n        </List>\n      </Overlay>\n    </Fragment>\n  );\n};\n\nexport default CustomTheme;\n",
    "isBinary": false
  },
  "src/custom-theme.scss": {
    "content": "@import '@react-md/theme/dist/color-palette';\n@import '@react-md/theme/dist/mixins';\n@import '@react-md/elevation/dist/mixins';\n@import '@react-md/overlay/dist/mixins';\n\n.custom-theme-overlay {\n  @include rmd-overlay-theme-update-var(background-color, rgba($rmd-blue-500, 0.42));\n\n  align-items: center;\n  display: flex;\n  justify-content: center;\n\n  &__list {\n    @include rmd-elevation(8);\n    @include rmd-theme(background-color, surface);\n\n    width: 10rem;\n  }\n}\n",
    "isBinary": false
  },
  "src/useToggle.ts": {
    "content": "import { useState, useRef, useCallback, useEffect } from \"react\";\n\nexport default function useToggle() {\n  const [visible, setVisible] = useState(false);\n  const visibleRef = useRef(visible);\n  useEffect(() => {\n    visibleRef.current = visible;\n  });\n  const show = useCallback(() => {\n    if (!visibleRef.current) {\n      setVisible(true);\n    }\n  }, []);\n  const hide = useCallback(() => {\n    if (visibleRef.current) {\n      setVisible(false);\n    }\n  }, []);\n\n  const toggle = useCallback(() => {\n    setVisible(prevVisible => !prevVisible);\n  }, []);\n\n  return { visible, show, hide, toggle };\n}\n",
    "isBinary": false
  }
}
