{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>List Example - Two Line Examples</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nrender(<Demo />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import '@react-md/avatar/dist/mixins';\n@import '@react-md/icon/dist/mixins';\n@import '@react-md/list/dist/mixins';\n@import '@react-md/material-icons/dist/mixins';\n@import '@react-md/portal/dist/mixins';\n@import '@react-md/states/dist/mixins';\n@import '@react-md/tooltip/dist/mixins';\n@import '@react-md/transition/dist/mixins';\n@import '@react-md/utils/dist/mixins';\n@import '@react-md/wia-aria/dist/mixins';\n@import 'classnames/dist/mixins';\n@import 'react/dist/mixins';\n@import '@react-md/theme/dist/mixins';\n@import '@react-md/typography/dist/mixins';;\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "List Example - Two Line Examples",
      "description": "Example from https://react-md.dev/packages/list/demos#two-line-examples",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/avatar": "latest",
        "@react-md/icon": "latest",
        "@react-md/list": "latest",
        "@react-md/material-icons": "latest",
        "@react-md/portal": "latest",
        "@react-md/states": "latest",
        "@react-md/tooltip": "latest",
        "@react-md/transition": "latest",
        "@react-md/utils": "latest",
        "@react-md/wia-aria": "latest",
        "classnames": "latest",
        "react": "latest",
        "@react-md/theme": "latest",
        "@react-md/typography": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "react-scripts": "latest",
        "node-sass": "latest",
        "typescript": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "@types/jest": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FunctionComponent } from \"react\";\nimport cn from \"classnames\";\nimport { Avatar, AvatarProps } from \"@react-md/avatar\";\nimport { FolderSVGIcon, InfoOutlineSVGIcon } from \"@react-md/material-icons\";\nimport { List, ListItem, ListSubheader } from \"@react-md/list\";\nimport { SVGIconProps } from \"@react-md/icon\";\nimport { Tooltipped } from \"@react-md/tooltip\";\n\nimport people from \"./people\";\n\nimport \"./two-line-examples.scss\";\n\nconst Folder: FunctionComponent<AvatarProps> = props => (\n  <Avatar {...props}>\n    <FolderSVGIcon />\n  </Avatar>\n);\n\nconst lastAccessedPhotos = new Date(2019, 0, 4);\nconst lastAccessedRecipes = new Date();\nlastAccessedRecipes.setDate(lastAccessedRecipes.getDate() - 2);\nconst lastAccessedWork = new Date();\n\nconst format = (d: Date, options: Intl.DateTimeFormatOptions) =>\n  d.toLocaleString(undefined, options);\nconst itemOptions: Intl.DateTimeFormatOptions = {\n  month: \"short\",\n  day: \"2-digit\",\n  year: \"numeric\",\n};\nconst tooltipOptions: Intl.DateTimeFormatOptions = {\n  month: \"long\",\n  weekday: \"short\",\n  day: \"2-digit\",\n  year: \"numeric\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n};\n\nconst InfoIcon: FunctionComponent<\n  SVGIconProps & { id: string; date: Date }\n> = ({ id, className, date, ...props }) => (\n  <Tooltipped\n    id={`${id}-info`}\n    tooltip={`Last Accessed: ${format(date, tooltipOptions)}`}\n    portal\n    lineWrap\n    className=\"two-line-list-example__tooltip\"\n  >\n    {({ tooltip, containerProps }) => (\n      <span\n        {...containerProps}\n        tabIndex={0}\n        className={cn(\"two-line-list-example__icon\", className)}\n      >\n        <InfoOutlineSVGIcon {...props} />\n        {tooltip}\n      </span>\n    )}\n  </Tooltipped>\n);\n\nconst TwoLineExamples: FunctionComponent = () => (\n  <List className=\"two-line-list-example\">\n    <ListSubheader>Folders</ListSubheader>\n    <ListItem\n      id=\"two-line-item-0\"\n      secondaryText={format(lastAccessedPhotos, itemOptions)}\n      leftAvatar={<Folder color=\"blue\" />}\n      rightIcon={<InfoIcon id=\"two-line-item-0\" date={lastAccessedPhotos} />}\n    >\n      Photos\n    </ListItem>\n    <ListItem\n      id=\"two-line-item-1\"\n      secondaryText={format(lastAccessedRecipes, itemOptions)}\n      leftAvatar={<Folder color=\"green\" />}\n      rightIcon={<InfoIcon id=\"two-line-item-1\" date={lastAccessedRecipes} />}\n    >\n      Recipes\n    </ListItem>\n    <ListItem\n      id=\"two-line-item-2\"\n      secondaryText={format(lastAccessedWork, itemOptions)}\n      leftAvatar={<Folder color=\"red\" />}\n      rightIcon={<InfoIcon id=\"two-line-item-2\" date={lastAccessedWork} />}\n    >\n      Work\n    </ListItem>\n  </List>\n);\n\nexport default TwoLineExamples;\n",
    "isBinary": false
  },
  "src/two-line-examples.scss": {
    "content": "@import '@react-md/icon/dist/mixins';\n@import '@react-md/elevation/dist/mixins';\n@import '@react-md/utils/dist/mixins';\n\n$start-shadow: none;\n$end-shadow: 0 0 2px $rmd-blue-300;\n\n.two-line-list-example {\n  @include rmd-elevation(4);\n\n  margin: 1rem auto;\n  max-width: 20rem;\n  width: 100%;\n\n  &__icon {\n    @include rmd-elevation-shadow-transition(none, $end-shadow, '&:focus');\n    @include rmd-icon-theme(height, size);\n    @include rmd-utils-hide-focus-outline;\n\n    align-self: flex-start;\n  }\n\n  &__tooltip {\n    max-width: 15rem;\n  }\n}\n",
    "isBinary": false
  },
  "src/people.ts": {
    "content": "const people: ReadonlyArray<string> = [\n  \"Jasmine Robinson\",\n  \"Devonte Craig\",\n  \"Dean Reid\",\n  \"Shaquille Bauer\",\n  \"Vivian Bishop\",\n  \"Braden Mullins\",\n  \"Katlyn Mcdonald\",\n  \"Isabella Marshall\",\n  \"Lee Christensen\",\n  \"Tommy Hogan\",\n  \"Timothy Harvey\",\n  \"Preston Phillips\",\n  \"Marco Sherman\",\n  \"Haley Coleman\",\n  \"Mario Swanson\",\n  \"Xavier Solis\",\n  \"Keaton Cannon\",\n  \"Cassandra Austin\",\n  \"Irene Holland\",\n  \"Gustavo Love\",\n  \"Meghan Stewart\",\n  \"Renee Townsend\",\n  \"Bobby Newman\",\n  \"Keaton Ortiz\",\n  \"Dustin Wells\",\n  \"Jerry Mcgee\",\n  \"Carl Howard\",\n  \"Sabrina Lang\",\n  \"Reed Baker\",\n  \"Kristen Fields\",\n  \"Gavin Carrillo\",\n  \"Claudia Neal\",\n  \"Leonard Schneider\",\n  \"Dominick Boyd\",\n  \"Mary Hampton\",\n  \"Mark Ayala\",\n  \"Kristina Warner\",\n  \"Antonio Walton\",\n  \"Tyson Scott\",\n  \"Harley Moss\",\n];\nexport default people;\n",
    "isBinary": false
  }
}
