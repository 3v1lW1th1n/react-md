{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>Sheet Example - Position Examples</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nrender(<Demo />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import '@react-md/button/dist/mixins';\n@import '@react-md/icon/dist/mixins';\n@import '@react-md/list/dist/mixins';\n@import '@react-md/portal/dist/mixins';\n@import '@react-md/sheet/dist/mixins';\n@import '@react-md/states/dist/mixins';\n@import '@react-md/transition/dist/mixins';\n@import '@react-md/utils/dist/mixins';\n@import '@react-md/theme/dist/mixins';\n@import '@react-md/typography/dist/mixins';;\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Sheet Example - Position Examples",
      "description": "Example from https://react-md.dev/packages/sheet/demos#position-examples",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "next",
        "@react-md/icon": "next",
        "@react-md/list": "next",
        "@react-md/portal": "next",
        "@react-md/sheet": "next",
        "@react-md/states": "next",
        "@react-md/transition": "next",
        "@react-md/utils": "next",
        "@react-md/wia-aria": "next",
        "react": "latest",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "react-dom": "latest"
      },
      "devDependencies": {
        "react-scripts": "latest",
        "node-sass": "latest",
        "typescript": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "@types/jest": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  ".env": {
    "content": "SASS_PATH=node_modules:src",
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, {\n  FunctionComponent,\n  useState,\n  Fragment,\n  useCallback,\n} from \"react\";\nimport { Sheet, SheetPosition } from \"@react-md/sheet\";\nimport { Button } from \"@react-md/button\";\nimport { List, ListItem } from \"@react-md/list\";\nimport { useVisibility } from \"@react-md/utils\";\n\nconst PositionExamples: FunctionComponent = () => {\n  const [position, setPosition] = useState<SheetPosition>(\"bottom\");\n  const { visible, hide, toggle } = useVisibility();\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPosition(event.currentTarget.value as SheetPosition);\n    },\n    []\n  );\n\n  return (\n    <Fragment>\n      <Button\n        id=\"sheet-position-example-toggle\"\n        onClick={toggle}\n        theme=\"clear\"\n        themeType=\"outline\"\n      >\n        Show Sheet\n      </Button>\n      {[\"top\", \"right\", \"bottom\", \"left\"].map(pos => (\n        <div key={pos}>\n          <label htmlFor={`sheet-position-${pos}`}>{pos}</label>\n          <input\n            id={`sheet-position-${pos}-input`}\n            name=\"sheet-positions\"\n            type=\"radio\"\n            value={pos}\n            checked={pos === position}\n            onChange={handleChange}\n          />\n        </div>\n      ))}\n      <Sheet\n        id=\"sheet-position-example\"\n        visible={visible}\n        position={position || \"bottom\"}\n        onRequestClose={hide}\n      >\n        <List>\n          <ListItem id=\"sheet-item-1\">Item 1</ListItem>\n          <ListItem id=\"sheet-item-2\">Item 2</ListItem>\n          <ListItem id=\"sheet-item-3\">Item 3</ListItem>\n          <ListItem id=\"sheet-item-4\">Item 4</ListItem>\n          <ListItem id=\"sheet-item-5\">Item 5</ListItem>\n          <ListItem id=\"sheet-item-6\">Item 6</ListItem>\n        </List>\n      </Sheet>\n    </Fragment>\n  );\n};\n\nexport default PositionExamples;\n",
    "isBinary": false
  }
}
