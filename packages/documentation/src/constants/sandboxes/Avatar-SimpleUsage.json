{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>Avatar Example - Simple Usage</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { StatesConfig, InteractionModeListener } from \"@react-md/states\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <InteractionModeListener>\n    <StatesConfig>\n      <Demo />\n    </StatesConfig>\n  </InteractionModeListener>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/avatar/dist/mixins';\n@import '~@react-md/icon/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Avatar Example - Simple Usage",
      "description": "Example from https://react-md.dev/packages/avatar/demos#simple-usage",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/avatar": "next",
        "@react-md/icon": "next",
        "@react-md/material-icons": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  ".env": {
    "content": "SASS_PATH=node_modules:src\n",
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport { Avatar } from \"@react-md/avatar\";\nimport { FontIcon } from \"@react-md/icon\";\nimport { NoteSVGIcon } from \"@react-md/material-icons\";\n\nimport Container from \"./Container\";\n\nconst Demo: FC = () => (\n  <Container>\n    <Avatar\n      src=\"https://picsum.photos/40/40?image=153\"\n      alt=\"An image from https://picsum.photos\"\n    />\n    <Avatar\n      src=\"https://picsum.photos/40/40?image=103\"\n      alt=\"An image from https://picsum.photos\"\n      color=\"blue\"\n    />\n    <Avatar>A</Avatar>\n    <Avatar color=\"orange\">PL</Avatar>\n    <Avatar color=\"red\">\n      <FontIcon>favorite</FontIcon>\n    </Avatar>\n    <Avatar color=\"teal\">\n      <NoteSVGIcon />\n    </Avatar>\n  </Container>\n);\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/Container.scss": {
    "content": ".avatar-container {\n  .rmd-avatar {\n    margin: 1rem;\n    vertical-align: top;\n  }\n}\n",
    "isBinary": false
  },
  "src/Container.tsx": {
    "content": "import React, { FC, HTMLAttributes } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./Container.scss\";\n\nconst Container: FC<HTMLAttributes<HTMLDivElement>> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={cn(\"avatar-container\", className)} {...props}>\n    {children}\n  </div>\n);\n\nexport default Container;\n",
    "isBinary": false
  }
}
