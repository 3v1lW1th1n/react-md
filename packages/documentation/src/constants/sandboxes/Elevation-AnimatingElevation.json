{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/react-md@next/dist/css/react-md.teal-pink-200-light.min.css\"\n    />\n    <title>Elevation Example - Animating Elevation</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/button/dist/mixins';\n@import '~@react-md/elevation/dist/mixins';\n@import '~@react-md/layout/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/transition/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Elevation Example - Animating Elevation",
      "description": "Example from https://react-md.dev/packages/elevation/demos#animating-elevation",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "next",
        "@react-md/elevation": "next",
        "@react-md/layout": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/transition": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport styles from \"./AnimatingElevation.module.scss\";\n\nconst Demo: FC = () => (\n  <>\n    <button\n      id=\"animating-elevation-1\"\n      type=\"button\"\n      className={cn(styles.example, styles.simple)}\n    >\n      This button will animate elevation when the button is hovered or focused.\n    </button>\n    <button\n      id=\"animating-elevation-2\"\n      type=\"button\"\n      className={cn(styles.example, styles.merging)}\n    >\n      This button will animate elevation when hovered, as well as a custom focus\n      effect that merges box shadows.\n    </button>\n  </>\n);\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/AnimatingElevation.module.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/elevation/dist/mixins';\n@import '~@react-md/transition/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/button/dist/mixins';\n\n.example {\n  @include rmd-theme(color, on-surface);\n  @include rmd-button-unstyled;\n  @include rmd-typography(body-1);\n\n  margin: 2rem;\n  padding: 2rem 4rem;\n\n  &:hover {\n    cursor: pointer;\n  }\n}\n\n.simple {\n  @include rmd-elevation-transition(4, 16, ('&:focus' '&:hover'));\n}\n\n.merging {\n  $focus-box-shadow: inset 0 0 0 1px $rmd-blue-500;\n  $start-shadow: none;\n  $end-shadow: rmd-elevation(8), $focus-box-shadow;\n\n  // create a shadow using the :;before pseudo element for the focus effect\n  @include rmd-transition-shadow-transition($start-shadow, $end-shadow, '&:focus');\n\n  // create a shadow using the ::after pseudo element for the hover effect. They can't\n  // be done on the same one as the hover effect has a different box shadow value\n  // than the focus effect and would override the focus shadow.\n  @include rmd-elevation-transition(none, 8, '&:not(:focus):hover', false, 0.5s);\n}\n",
    "isBinary": false
  }
}
