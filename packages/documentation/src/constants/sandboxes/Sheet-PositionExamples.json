{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <title>Sheet Example - Position Examples</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { StatesConfig, InteractionModeListener } from \"@react-md/states\";\n\nimport \"./styles.scss\";\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <InteractionModeListener>\n    <StatesConfig>\n      <Demo />\n    </StatesConfig>\n  </InteractionModeListener>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/button/dist/mixins';\n@import '~@react-md/form/dist/mixins';\n@import '~@react-md/list/dist/mixins';\n@import '~@react-md/sheet/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Sheet Example - Position Examples",
      "description": "Example from https://react-md.dev/packages/sheet/demos#position-examples",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "next",
        "@react-md/form": "next",
        "@react-md/list": "next",
        "@react-md/material-icons": "next",
        "@react-md/sheet": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  ".env": {
    "content": "SASS_PATH=node_modules:src\n",
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, Fragment } from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { Fieldset, useChoice } from \"@react-md/form\";\nimport { List, ListItem } from \"@react-md/list\";\nimport { Sheet, SheetPosition } from \"@react-md/sheet\";\nimport { useToggle } from \"@react-md/utils\";\n\nimport Radio from \"components/Radio\";\n\nconst positions: SheetPosition[] = [\"top\", \"right\", \"bottom\", \"left\"];\n\nconst Demo: FC = () => {\n  const [position, handlePositionChange] = useChoice<SheetPosition>(\"left\");\n  const [visible, show, hide] = useToggle(false);\n\n  return (\n    <Fragment>\n      <Fieldset legend=\"Sheet positions\">\n        {positions.map(pos => (\n          <Radio\n            key={pos}\n            id={`sheet-position-${pos}`}\n            value={pos}\n            name=\"positions\"\n            label={pos}\n            checked={pos === position}\n            onChange={handlePositionChange}\n          />\n        ))}\n      </Fieldset>\n      <Button\n        id=\"show-sheet-position\"\n        onClick={show}\n        theme=\"secondary\"\n        themeType=\"contained\"\n      >\n        Show\n      </Button>\n      <Sheet\n        id=\"example-sheet-1\"\n        aria-label=\"Example Sheet\"\n        visible={visible}\n        onRequestClose={hide}\n        position={position}\n      >\n        <List onClick={hide}>\n          <ListItem id=\"example-sheet-item-1\">Item 1</ListItem>\n          <ListItem id=\"example-sheet-item-2\">Item 2</ListItem>\n          <ListItem id=\"example-sheet-item-3\">Item 3</ListItem>\n          <ListItem id=\"example-sheet-item-4\">Item 4</ListItem>\n          <ListItem id=\"example-sheet-item-5\">Item 5</ListItem>\n        </List>\n      </Sheet>\n    </Fragment>\n  );\n};\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/Radio.tsx": {
    "content": "import React, { FC, forwardRef } from \"react\";\nimport { Radio as RadioMD, RadioProps } from \"@react-md/form\";\nimport { RadioButtonCheckedSVGIcon } from \"@react-md/material-icons\";\nimport { WithForwardedRef } from \"@react-md/utils\";\n\nconst Radio: FC<RadioProps & WithForwardedRef<HTMLInputElement>> = ({\n  forwardedRef,\n  ...props\n}) => <RadioMD {...props} ref={forwardedRef} />;\n\nRadio.defaultProps = {\n  icon: <RadioButtonCheckedSVGIcon />,\n};\n\nexport default forwardRef<HTMLInputElement, RadioProps>((props, ref) => (\n  <Radio {...props} forwardedRef={ref} />\n));\n",
    "isBinary": false
  }
}
