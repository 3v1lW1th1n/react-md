{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/react-md@next/dist/css/react-md.teal-pink-200-light.min.css\"\n    />\n    <title>Transition Example - UseCSS Transition</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/button/dist/mixins';\n@import '~@react-md/layout/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/transition/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Transition Example - UseCSS Transition",
      "description": "Example from https://react-md.dev/packages/transition/demos#usecss-transition",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/button": "next",
        "@react-md/layout": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/transition": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, useState, Fragment } from \"react\";\n\nimport \"./UseCSSTransition.scss\";\nimport { useCSSTransition } from \"@react-md/transition\";\nimport { Button } from \"@react-md/button\";\nimport Page1 from \"./Page1\";\n\nconst Demo: FC = () => {\n  const [transitionIn, setTransitionIn] = useState(false);\n  const [rendered, transitionProps] = useCSSTransition({\n    // changing this value causes the transition behavior to change\n    transitionIn,\n\n    // 5 seconds just for demo purposes... can also be an object\n    timeout: 5000,\n\n    // gets BEM-ified -- can also be a custom object\n    classNames: \"use-css-transition\",\n\n    // can also trigger the css transition on initial mount\n    // appear: false,\n\n    // changes the `rendered` value to be false while not transitioning and\n    // `transitionIn` is false\n    temporary: true,\n\n    // an optional className to merge with the transition classNames\n    // className: \"\",\n  });\n\n  return (\n    <Fragment>\n      <Button onClick={() => setTransitionIn(!transitionIn)}>Toggle</Button>\n      {rendered && <Page1 {...transitionProps} />}\n    </Fragment>\n  );\n};\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/Page1.tsx": {
    "content": "import React, { forwardRef, HTMLAttributes } from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\n  (props, ref) => (\n    <div {...props} ref={ref}>\n      <Text type=\"headline-4\">Page 1</Text>\n      <Text>\n        Nunc dapibus nec neque vitae aliquam. Phasellus eu luctus tortor. Morbi\n        et massa lectus. Nam nec posuere urna, nec tincidunt ligula. Vestibulum\n        in urna dapibus, rutrum nisi eu, convallis leo. Morbi maximus ultricies\n        metus at venenatis. Nulla tincidunt in enim ac semper. Maecenas at felis\n        eget dui malesuada placerat eu a dui. Vestibulum vel quam egestas turpis\n        commodo euismod ac quis purus.\n      </Text>\n    </div>\n  )\n);\n",
    "isBinary": false
  },
  "src/UseCSSTransition.scss": {
    "content": "@import '~@react-md/transition/dist/mixins';\n\n// just to make it really visible...\n$duration: 5s;\n\n.use-css-transition {\n  &--enter {\n    opacity: 0;\n  }\n\n  &--enter-active {\n    opacity: 1;\n    transition: opacity $duration;\n  }\n\n  &--exit {\n    opacity: 1;\n  }\n\n  &--exit-active {\n    @include rmd-transition(standard);\n\n    opacity: 0;\n    transition: opacity $duration;\n  }\n}\n",
    "isBinary": false
  }
}
