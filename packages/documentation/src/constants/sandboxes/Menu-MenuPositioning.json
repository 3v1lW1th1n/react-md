{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/react-md@next/dist/css/react-md.teal-pink-200-light.min.css\"\n    />\n    <title>Menu Example - Menu Positioning</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/icon/dist/mixins';\n@import '~@react-md/layout/dist/mixins';\n@import '~@react-md/menu/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Menu Example - Menu Positioning",
      "description": "Example from https://react-md.dev/packages/menu/demos#menu-positioning",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/icon": "next",
        "@react-md/layout": "next",
        "@react-md/material-icons": "next",
        "@react-md/menu": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "classnames": "latest",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, Fragment } from \"react\";\nimport { ArrowDropDownSVGIcon } from \"@react-md/material-icons\";\nimport { DropdownMenu } from \"@react-md/menu\";\nimport { Text } from \"@react-md/typography\";\nimport { HorizontalPosition, VerticalPosition } from \"@react-md/utils\";\n\n\n\nimport styles from \"./MenuPositioning.module.scss\";\n\nconst items = [\"Item 1\", \"Item 2\", \"Item 3\"];\n\nconst verticalPositions: VerticalPosition[] = [\n  \"above\",\n  \"below\",\n  \"center\",\n  \"top\",\n  \"bottom\",\n];\nconst horizontalPositions: HorizontalPosition[] = [\n  \"inner-left\",\n  \"inner-right\",\n  \"center\",\n  \"left\",\n  \"right\",\n];\n\nconst Demo: FC = () => (\n  <>\n    {horizontalPositions.map((x, i) => (\n      <Fragment key={x}>\n        <Text type=\"headline-6\" margin={i === 0 ? \"none\" : \"top\"}>\n          Horizontal Position: <code>{x}<code>\n        </Text>\n        <div className={styles.container}>\n          <div className={styles.group}>\n            {verticalPositions.map((y) => (\n              <DropdownMenu\n                id={`position-${x}-${y}`}\n                key={y}\n                anchor={{ x, y }}\n                items={items}\n                menuLabel=\"Menu\"\n                themeType=\"outline\"\n                dropdownIcon={<ArrowDropDownSVGIcon className={styles.icon} />}\n                className={styles.button}\n              >\n                <span className={styles.text}>{y}</span>\n              </DropdownMenu>\n            ))}\n          </div>\n        </div>\n      </Fragment>\n    ))}\n  </>\n);\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/MenuPositioning.module.scss": {
    "content": "@import '~@react-md/icon/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n.container {\n  display: flex;\n  justify-content: center;\n}\n\n.group {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n}\n\n.button {\n  // make equal width buttons that are centered\n  flex: 1 0 auto;\n  margin: 1rem auto;\n  width: 100%;\n}\n\n.text {\n  // since the icon is aligned to the end with margin, the default icon spacing can't\n  // be applied as it relies on margin as well. If you apply padding to an icon, the sizing\n  // gets messed up so it's easier to apply it to the text element here. now we have the same\n  // text spacing as before for the largest button.\n  @include rmd-icon-text-spacing($property: padding-right);\n}\n\n.icon {\n  // align the icon to the end since equal width buttons look bad with centered text/icons\n  @include rmd-utils-rtl-auto(margin-left, auto);\n}\n",
    "isBinary": false
  }
}
