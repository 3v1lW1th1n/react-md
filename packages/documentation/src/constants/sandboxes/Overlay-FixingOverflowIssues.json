{
  "public/index.html": {
    "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://fonts.googleapis.com/css?family=Material+Icons|Roboto:400,500,700|Source+Code+Pro\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/react-md@next/dist/css/react-md.teal-pink-200-light.min.css\"\n    />\n    <title>Overlay Example - Fixing Overflow Issues</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n  </body>\n</html>\n",
    "isBinary": false
  },
  "src/index.tsx": {
    "content": "import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Configuration } from \"@react-md/layout\";\n\nimport Demo from \"./Demo\";\n\nconst App = () => (\n  <Configuration>\n    <Demo />\n  </Configuration>\n);\n\nrender(<App />, document.getElementById(\"root\"));\n",
    "isBinary": false
  },
  "src/styles.scss": {
    "content": "@import 'variables';\n@import '~@react-md/app-bar/dist/mixins';\n@import '~@react-md/button/dist/mixins';\n@import '~@react-md/form/dist/mixins';\n@import '~@react-md/layout/dist/mixins';\n@import '~@react-md/overlay/dist/mixins';\n@import '~@react-md/states/dist/mixins';\n@import '~@react-md/theme/dist/mixins';\n@import '~@react-md/typography/dist/mixins';\n@import '~@react-md/utils/dist/mixins';\n\n@include react-md-utils;\n",
    "isBinary": false
  },
  "src/_variables.scss": {
    "content": "@import '~@react-md/theme/dist/color-palette';\n\n$rmd-theme-light: true;\n$rmd-theme-primary: $rmd-teal-500;\n$rmd-theme-secondary: $rmd-pink-a-200;\n",
    "isBinary": false
  },
  "package.json": {
    "content": {
      "title": "Overlay Example - Fixing Overflow Issues",
      "description": "Example from https://react-md.dev/packages/overlay/demos#fixing-overflow-issues",
      "main": "src/index.tsx",
      "dependencies": {
        "@react-md/app-bar": "next",
        "@react-md/button": "next",
        "@react-md/form": "next",
        "@react-md/layout": "next",
        "@react-md/material-icons": "next",
        "@react-md/overlay": "next",
        "@react-md/states": "next",
        "@react-md/theme": "next",
        "@react-md/typography": "next",
        "@react-md/utils": "next",
        "react": "latest",
        "react-dom": "latest"
      },
      "devDependencies": {
        "@types/jest": "latest",
        "@types/node": "latest",
        "@types/react": "latest",
        "@types/react-dom": "latest",
        "node-sass": "latest",
        "react-scripts": "latest",
        "typescript": "latest"
      },
      "scripts": {
        "start": "react-scripts start"
      }
    },
    "isBinary": false
  },
  "src/Demo.tsx": {
    "content": "import React, { FC, Fragment } from \"react\";\nimport { AppBar } from \"@react-md/app-bar\";\nimport { Button } from \"@react-md/button\";\nimport { useCheckboxState } from \"@react-md/form\";\nimport { Overlay } from \"@react-md/overlay\";\nimport { Text } from \"@react-md/typography\";\nimport { useToggle } from \"@react-md/utils\";\n\nimport Checkbox from \"./Checkbox\";\n\nimport \"./FixingOverflowIssues.scss\";\n\nconst Demo: FC = () => {\n  const [visible, , disable, toggle] = useToggle(false);\n  const [portal, handlePortalChange] = useCheckboxState(false);\n  return (\n    <Fragment>\n      <AppBar theme=\"default\">\n        <Checkbox\n          id=\"enable-portal\"\n          name=\"portalOptions\"\n          checked={portal}\n          onChange={handlePortalChange}\n          label=\"Enable Portal\"\n        />\n      </AppBar>\n      <div className=\"overlay-overflow-container\">\n        <Text>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur et\n          eros in augue fermentum tempus. Aliquam ullamcorper ullamcorper\n          bibendum. Etiam finibus, ante a mattis semper, quam orci porttitor\n          ante, quis imperdiet felis urna quis ipsum. Curabitur fringilla\n          iaculis tellus eu pharetra. Donec fringilla nisl eu metus tempus\n          viverra. Morbi commodo lobortis magna. Vivamus dictum commodo\n          condimentum. Nullam molestie urna est, in fermentum ipsum tincidunt\n          at. Etiam lectus nunc, lacinia in mollis non, cursus eget lacus. Donec\n          cursus, neque eget auctor pretium, felis nisi semper mi, elementum\n          vehicula libero lectus et felis. Cras magna orci, pellentesque non\n          lectus at, luctus rhoncus lorem. Nam varius eleifend eros non mollis.\n        </Text>\n        <Button\n          id=\"fixing-overflow-button\"\n          theme=\"secondary\"\n          themeType=\"outline\"\n          onClick={toggle}\n        >\n          Show Overlay\n        </Button>\n        <div className=\"fixing-overflow-fixed-container\">\n          <Overlay\n            id=\"fixing-overflow-overlay\"\n            visible={visible}\n            onRequestClose={disable}\n            portal={portal}\n          />\n        </div>\n        <Text>\n          Vestibulum at feugiat eros. Maecenas commodo sapien quis dignissim\n          elementum. Duis id magna sit amet purus tempus luctus eleifend eget\n          risus. Duis efficitur orci ut est luctus, eu molestie velit sagittis.\n          Duis faucibus varius fringilla. Vestibulum congue tempor felis\n          placerat gravida. Cras id est purus.\n        </Text>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Demo;\n",
    "isBinary": false
  },
  "src/Checkbox.tsx": {
    "content": "import React, { FC, forwardRef } from \"react\";\nimport { Checkbox as CheckboxMD, CheckboxProps } from \"@react-md/form\";\nimport { CheckBoxSVGIcon } from \"@react-md/material-icons\";\nimport { WithForwardedRef } from \"@react-md/utils\";\n\nconst Checkbox: FC<CheckboxProps & WithForwardedRef<HTMLInputElement>> = ({\n  forwardedRef,\n  ...props\n}) => <CheckboxMD {...props} ref={forwardedRef} />;\n\nCheckbox.defaultProps = {\n  icon: <CheckBoxSVGIcon />,\n};\n\nexport default forwardRef<HTMLInputElement, CheckboxProps>((props, ref) => (\n  <Checkbox {...props} forwardedRef={ref} />\n));\n",
    "isBinary": false
  },
  "src/FixingOverflowIssues.scss": {
    "content": "@import '~@react-md/utils/dist/mixins';\n\n.overlay-overflow-container {\n  @include rmd-utils-scroll;\n\n  max-height: 15rem;\n}\n\n.fixing-overflow-fixed-container {\n  bottom: 25%;\n  left: 25%;\n  pointer-events: none;\n  position: fixed;\n  right: 25%;\n  top: 25%;\n}\n",
    "isBinary": false
  }
}
