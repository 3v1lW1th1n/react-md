{"functions":[],"mixins":[{"name":"rmd-utils-rtl","description":"A simple mixin that allows you to update styles when the [dir=\"rtl\"] is present\nfor languages that read right to light. This is mostly used to update spacing with\nmargins or padding and a more \"verbose\" method of declaring rtl styles.\n\n","file":"utils/src/_mixins.scss","group":"utils","links":[],"see":[],"usedBy":[],"requires":[],"code":"@mixin rmd-utils-rtl {\n  [dir='rtl'] & {\n    @content;\n  }\n}","throws":[],"examples":[{"type":"scss","code":".my-class {\n  margin-right: 1rem;\n\n  @include rmd-utils-rtl {\n    margin-left: 1rem;\n    margin-right: auto;\n  }\n}","description":"Example Usage SCSS"}],"parameters":[]},{"name":"rmd-utils-scroll","description":"An extremely simple util that is used to add scrolling to an element with a \"patch\" for adding scroll\nmomentum to iOS.\n\n","file":"utils/src/_mixins.scss","group":"utils","links":[],"see":[],"usedBy":[{"name":"rmd-sheet-base","type":"mixin","description":"Creates the base styles for a sheet.\n","group":"sheet"}],"requires":[],"code":"@mixin rmd-utils-scroll(position: null, type: auto, enable-momentum: $rmd-utils-ios-scroll-momentum) {\n  $style: overflow;\n  @if $position == 'x' or $position == 'y' {\n    $style: #{$style}-#{$position};\n  }\n\n  #{$style}: $type;\n\n  @if $enable-momentum {\n    // sass-lint:disable no-vendor-prefixes\n    -webkit-overflow-scrolling: touch;\n  }\n}","throws":[],"examples":[],"parameters":[{"type":"String","name":"position","default":"null","description":"This should either be \"x\", \"y\", or null. This will just change the style\n    between overflow, overflow-x, and overflow-y."},{"type":"String","name":"type","default":"auto","description":"The scroll type to apply. It is recommended to use the default of `auto` in\n    most cases, but it can be set to something else."},{"type":"Boolean","name":"enable-momentum","default":"$rmd-utils-ios-scroll-momentum","description":"Boolean if iOS scroll momentum should be \"patched\"."}]},{"name":"rmd-utils-hide-focus-outline","description":"A helper mixin that will hide the outline style when a user focuses any element / on the page. All this really does\nis create an `outline-style: none` when the element is focused.\n\n","file":"utils/src/_mixins.scss","group":"utils","links":[],"see":[],"usedBy":[{"name":"rmd-btn-unstyled","type":"mixin","description":"A simple mixin to create an unstyled button.\n\nNOTE: An unstyled button removed the `outline-style` so you *must* add a custom focus behavior with\neither ripples or something else for keyboard users.\n\n","group":"button"},{"name":"rmd-list-item-base","type":"mixin","description":"Creates the base list item styles.\n","group":"list"},{"name":"rmd-tree-item","type":"mixin","description":"Creates the styles for a tree item. This really requires the `@react-md/list` styles to be created\nbeforehand since these styles just prevent the outline when focused to work with the `@react-md/states`\npackage.\n\n","group":"tree-view"}],"requires":[],"code":"@mixin rmd-utils-hide-focus-outline(fix-moz-focus: true) {\n  &:focus {\n    outline-style: none;\n  }\n\n  @if $fix-moz-focus {\n    &::-moz-focus-inner {\n      border: 0;\n    }\n  }\n}","throws":[],"examples":[],"parameters":[{"type":"Boolean","name":"fix-moz-focus","default":"true","description":"Boolean if the Firefox focus inner styles should also\n    be removed."}]}],"variables":[{"name":"rmd-utils-ios-scroll-momentum","type":"Boolean","description":"Boolean if scroll momentum should be added by default for iOS. This _can_ probably\nbe removed one day when iOS natively supports scroll momentum on anything except\nthe main document.\n","file":"utils/src/_variables.scss","group":"utils","links":[],"see":[],"usedBy":[],"requires":[],"code":"$rmd-utils-ios-scroll-momentum: true !default;"}]}
