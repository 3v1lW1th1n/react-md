////
/// @group media
////

@import '~@react-md/theme/dist/mixins';
@import '~@react-md/utils/dist/functions';
@import './variables';

/// Creates the styles for a media container that should enforce a specific
/// aspect ratio.
@mixin rmd-media-aspect-ratio-container {
  display: block;
  height: 0;
  overflow: hidden;
  padding: 0;
}

/// Creates the styles for a responsive media item that should have a specific
/// aspect ratio.
@mixin rmd-media-forced-aspect-ratio {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  width: 100%;
}

/// Creates the styles for a responsive media item that will update its height
/// and width based on the parent element.
@mixin rmd-media {
  height: auto;
  width: 100%;
}

/// Creates the base positioning styles for the media overlay element.
/// @param {String} position - One of the `rmd-media-overlay-positions` values
@mixin rmd-media-overlay-position($position) {
  $position: rmd-utils-validate(
    $rmd-media-overlay-positions,
    $position,
    'rmd-media-overlay-positions'
  );

  @if $position == left or $position == right or $position == center {
    bottom: 0;
    top: 0;
    width: $rmd-media-overlay-horizontal-width;

    @if $position == left {
      left: 0;
    } @else if $position == right {
      right: 0;
    } @else if $position == center {
      left: 50%;
      transform: translateX(-50%);
    }
  } @else if $position == top or $position == bottom or $position == middle {
    left: 0;
    right: 0;

    @if $position == top {
      top: 0;
    } @else if $position == bottom {
      bottom: 0;
    } @else if $position == middle {
      top: 50%;
      transform: translateY(-50%);
    }
  } @else if $position == absolute-center {
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
  }
}

/// Creates the media overlay styles. All this really does is update the theme
/// background and text colors based on the provided background color for the
/// overlay element.
///
/// @param {Color} background-color [rmd-media-overlay-background-color] - The
/// background color for the media overlay.
/// @param {Color} color [null] - An optional color to use for the overlay. If
/// this is `null`, it will determine the contrast tone of the background color
/// and use either the light or dark theme variables instead.
@mixin rmd-media-overlay($background-color: $rmd-media-overlay-background-color, $color: null) {
  @if $color == null {
    $light: rmd-theme-tone($background-color) == 'light';
    $color: rmd-theme-var(if($light, text-primary-on-light, text-primary-on-dark));
    $secondary-color: rmd-theme-var(if($light, text-secondary-on-light, text-secondary-on-dark));

    @include rmd-theme-update-var(text-secondary-on-background, $secondary-color);
  }

  @include rmd-theme-update-var(background, $background-color);
  @include rmd-theme-update-var(text-primary-on-background, $color);
  @include rmd-theme(background-color, background);
  @include rmd-theme(color, text-primary-on-background);

  padding: $rmd-media-overlay-padding;
  position: absolute;
  z-index: 1;

  @if $rmd-media-overlay-positions != null {
    @each $position in $rmd-media-overlay-positions {
      &--#{$position} {
        @include rmd-media-overlay-position($position);
      }
    }
  }
}

/// Creates all the styles for the media package.
@mixin react-md-media {
  .rmd-media-container {
    display: inline-block;
    position: relative;

    @each $selector in $rmd-media-selectors {
      &--auto #{$selector} {
        @include rmd-media;
      }

      &--aspect-ratio #{$selector} {
        @include rmd-media-forced-aspect-ratio;
      }
    }

    &--aspect-ratio {
      @include rmd-media-aspect-ratio-container;
    }

    @each $key, $value in $rmd-media-default-aspect-ratios {
      &--#{$key} {
        $width: nth($value, 1);
        $height: nth($value, 2);

        padding-bottom: percentage($height / $width);
      }
    }

    &--full-width {
      display: block;
      width: 100%;
    }
  }

  .rmd-media {
    @include rmd-media;
  }

  .rmd-media-overlay {
    @include rmd-media-overlay;
  }
}
