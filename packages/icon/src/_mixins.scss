////
/// @group icon
////

@import '@react-md/theme/dist/mixins';
@import '@react-md/typography/dist/variables';
@import '@react-md/utils/dist/mixins';
@import 'variables';

/// Creates the base styles for icons. This should be combined with the `rmd-icon-font` or
/// `rmd-icon-svg` mixins to get the full styles.
@mixin rmd-icon-base {
  user-select: none;
}

/// Creates the base styles for a font icon.
///
/// @example scss - Example SCSS Usage
///   .font-icon {
///     @include rmd-icon-base;
///     @include rmd-icon-font;
///   }
@mixin rmd-icon-font {
  @include rmd-theme(color, text-icon-on-background);

  font-size: $rmd-icon-size;
  text-align: center;
}

/// Creates the styles for updating a font icon to use the dense spec. This requires the
/// base font icon styles to already be applied.
///
/// @example scss - Example SCSS Usage
///   .font-icon {
///     @include rmd-icon-base;
///     @include rmd-icon-font;
///   }
///
///   @media (min-width: 1200px) {
///     .font-icon {
///       @include rmd-icon-font-dense;
///     }
///   }
@mixin rmd-icon-font-dense {
  font-size: $rmd-icon-dense-size;
}

/// Creates the base styles for an svg icon.
///
/// @example scss - Example SCSS Usage
///   .svg-icon {
///     @include rmd-icon-base;
///     @include rmd-icon-svg;
///   }
@mixin rmd-icon-svg {
  @include rmd-theme(fill, text-icon-on-background);

  height: $rmd-icon-size;
  width: $rmd-icon-size;
}

/// Creates the styles for updating an svg icon to use the dense spec. This requires the
/// base svg icon styles to already be applied.
///
/// @example scss - Example SCSS Usage
///   .svg-icon {
///     @include rmd-icon-base;
///     @include rmd-icon-svg;
///   }
///
///   @media (min-width: 1200px) {
///     .svg-icon {
///       @include rmd-icon-svg-dense;
///     }
///   }
@mixin rmd-icon-svg-dense {
  height: $rmd-icon-dense-size;
  width: $rmd-icon-dense-size;
}

/// Creates the styles that should be applied to an icon that is placed before text.
///
/// @param {Number} spacing [rmd-icon-spacing-with-text] - The amount of spacing to apply.
@mixin rmd-icon-spacing-before-text($spacing: $rmd-icon-spacing-with-text) {
  margin-right: $spacing;

  // sass-lint:disable-block mixins-before-declarations
  @include rmd-utils-rtl {
    margin-left: $spacing;
    margin-right: 0;
  }
}


/// Creates the styles that should be applied to an icon that is placed after text.
///
/// @param {Number} spacing [rmd-icon-spacing-with-text] - The amount of spacing to apply.
@mixin rmd-icon-spacing-after-text($spacing: $rmd-icon-spacing-with-text) {
  margin-left: $spacing;

  // sass-lint:disable-block mixins-before-declarations
  @include rmd-utils-rtl {
    margin-left: 0;
    margin-right: $spacing;
  }
}

/// A mixin to create the styles to space an icon before or after text with the provided selectors and
/// spacing.
///
/// @example scss - Updating Selectors
///   // create a component so that it uses the :first-child and :last-child css
///   // selectors instead of class names that must be applied.
///   .my-wrapper {
///     @include rmd-icon-spaced-with-text('&:first-child', '&:last-child');
///   }
///
/// @param {String} before-selector ['&--before'] - The selector to use for determining if an icon is placed
///   before or after the text. If this is set to `null`, no before styles will be created.
/// @param {String} after-selector ['&--after'] - The selector to use for determining if an icon is placed
///   before or after the text. If this is set to `null`, no after styles will be created.
/// @param {Number} spacing [rmd-icon-spacing-with-text] - The amount of spacing to apply.
@mixin rmd-icon-spaced-with-text($before-selector: '&--before', $after-selector: '&--after', $spacing: $rmd-icon-spacing-with-text) {
  @if $before-selector != null {
    #{$before-selector} {
      margin-right: $spacing;
    }
  }

  @if $after-selector != null {
    #{$after-selector} {
      margin-left: $spacing;
    }
  }
}

/// A simple mixin to create the icon rotator's rotation values.
///
/// @example scss - Internal Example
///   .rmd-icon-rotator {
///     // generates .rmd-icon-rotator--rotated-0
///     @include rmd-icon-rotator-rotated(0);
///
///     // generates .rmd-icon-rotator--rotated-180
///     @include rmd-icon-rotator-rotated(180);
///   }
///
/// @example scss - Providing a selector
///   // generates .rmd-icon-rotator--rotated-45
///   @include rmd-icon-rotator(45, '.rmd-icon-rotator')
///
/// @param {Number} degrees - The amount of degrees to rotate
/// @param {String} selector ['&'] - the selector to use to create the class.
@mixin rmd-icon-rotator-rotated($degrees, $selector: '&') {
  #{$selector}--rotated-#{$degrees} {
    transform: rotate(#{$degrees}deg);
  }
}

/// Creates the styles for the `IconRotator` component. These styles are extremely simple and basically
/// apply different rotate transforms based on a class name.
@mixin rmd-icon-rotator {
  .rmd-icon-rotator {
    &--animate {
      transition: transform $rmd-icon-rotator-transition-time linear;
    }

    @each $degree in $rmd-icon-rotator-rotation-degrees {
      @include rmd-icon-rotator-rotated($degree);
    }
  }
}

/// Creates the styles for icons within react-md. This requires either the `rmd-icon-use-font-icons` or `rmd-icon-use-svg-icons` variables
/// to be enabled to generate any styles.
@mixin react-md-icon {
  @if not $rmd-icon-use-font-icons and not $rmd-icon-use-svg-icons {
    @error 'Either svg or font icons must be used for this package but both were set to false. Please enable one of them to include icons.';
  }

  .rmd-icon {
    @include rmd-icon-base;

    @if $rmd-icon-use-font-icons {
      &--font {
        @include rmd-icon-font;
      }

      @if $rmd-icon-include-dense {
        &--font-dense {
          @include rmd-icon-font-dense;
        }
      }
    }

    @if $rmd-icon-use-svg-icons {
      &--svg {
        @include rmd-icon-svg;

        * {
          // make sit so that paths and other things won't be event targets which makes things easier
          // to determine if something is an icon or not
          pointer-events: none;
        }
      }

      @if $rmd-icon-include-dense {
        &--svg-dense {
          @include rmd-icon-svg-dense;
        }
      }
    }

    @include rmd-icon-spaced-with-text;
  }

  // when wrapped in a span, want to force vertical center alignment to make things look
  // nicer
  .rmd-text-icon-spacing {
    align-items: center;
    display: inline-flex;
  }

  @include rmd-icon-rotator;
}

/// Creates the font face for material icons. This takes either a font url prefix string or a map of urls for each required
/// font file. If you are using create-react-app, you **must** use the Map version so the fonts can be
/// correctly included by the build process.
///
/// @example scss - create-react-app Example Usage
///   // This is going to assume you have downloaded the material-icons zip with all the icon font files and copied it into
///   // `src/fonts/material-icons` and you are including the fonts in `src/index.scss`
///   @include rmd-icon-material-icons-font-face((
///     woff2: url(./fonts/material-icons/MaterialIcons-Regular.woff2),
///     woff: url(./fonts/material-icons/MaterialIcons-Regular.woff),
///     truetype: url(./fonts/material-icons/MaterialIcons-Regular.ttf)
///   ));
///
/// @example scss - Example Usage SCSS
///   $local-font-url: '/fonts/material-icons';
///   @include rmd-icon-material-icons-font-face($local-font-url);
///
/// @param {String | Map} font-url-or-map ['/fonts/material-icons'] - This is either a font url prefix for the folder
///   that is "hosting" the material icons or a Map of direct urls for the eot, woff2, woff, and truetype material icon fonts.
/// @param {Boolean} old-ie-support [false] - Boolean if there should be a fallback for IE6-8 by including a url to
///   the eot font. If this is set to true and using the Map version of `$font-url-or-map`, you must also include a url
///   to the eot font.
@mixin rmd-icon-material-icons-font-face($font-url-or-map: '/fonts/material-icons', $old-ie-support: false) {
  $font-family: 'Material Icons';
  $font-name: 'MaterialIcons-Regular';

  $font-url: '';
  $font-map: null;
  @if type-of($font-url-or-map) == 'string' {
    $font-url: if(char-at($font-url) != '/', $font-url + '/', $font-url) + $font-name;
  } @else {
    $font-map: $font-url-or-map;
    $required-keys: woff2 woff truetype;
    @if $old-ie-support {
      $required-keys: #{$required-keys} eot;
    }

    @each $key in $required-keys {
      @if not map-has-key($font-map, $key) {
        @error 'It is required to include all of \'#{$required-keys}\' in your font url map, but one or more was missing! Privded keys: #{$map-keys($font-map)}.';
      }
    }
  }

  @font-face {
    font-family: $font-family;
    font-style: normal;
    font-weight: map-get($rmd-typography-font-weights, normal);

    @if $old-ie-support {
      @if $font-map == null {
        src: url($font-url + '.eot');
      } @else {
        src: #{map-get($font-map, eot)};
      }
    }

    @if $font-map == null {
      src: local($font-family),
      local($font-name),
      url($font-url + '.woff2') format('woff2'),
      url($font-url + '.woff') format('woff')
      url($font-url + '.ttf') format('truetype');
    } @else {
      $woff2: map-get($font-url-or-map, woff2);
      $woff: map-get($font-url-or-map, woff);
      $truetype: map-get($font-url-or-map, truetype);

      $src: local($font-family), local($font-name);
      $src: 'local(#{$font-family}), local(#{$font-name}), #{$woff2} format(\'woff2\'), #{$woff} format(\'woff\'), #{$truetype} format(\'truetype\')';

      src: #{$src};
    }
  }
}

/// Creates the material-icons css class if hosting material icons locally instead of using the
/// Google fonts service. By default, this will not include the font-size size you _should_ be using
/// the `FontIcon` component from react-md which adds the correct font-size.
///
/// @param {Boolean} include-font-size [false] - Boolean if the material icons class name should include
///   the default icon font size.
@mixin rmd-icon-material-icons-class($include-font-size: false) {
  .material-icons {
    // sass-lint:disable-block property-sort-order,no-vendor-prefixes
    @if $include-font-size {
      font-size: $md-font-icon-size;
    }

    direction: ltr;
    display: inline-block;
    font-family: 'Material Icons';
    // Support for IE.
    font-feature-settings: 'liga';
    // Support for Firefox.
    -moz-osx-font-smoothing: grayscale;
    // Support for all WebKit browsers.
    -webkit-font-smoothing: antialiased;
    font-style: normal;
    font-weight: normal;
    letter-spacing: normal;
    line-height: 1;
    // Support for Safari and Chrome.
    text-rendering: optimizeLegibility;
    text-transform: none;
    white-space: nowrap;
    word-wrap: normal;
  }
}

/// Creates both the font face and css class for material icons when hosting the fonts locally instead of using
/// the Google fonts service.  This takes either a font url prefix string or a map of urls for each required
/// font file. If you are using create-react-app, you **must** use the Map version so the fonts can be
/// correctly included by the build process.
///
/// @example scss - create-react-app Example Usage
///   // This is going to assume you have downloaded the material-icons zip with all the icon font files and copied it into
///   // `src/fonts/material-icons` and you are including the fonts in `src/index.scss`
///   @include rmd-icon-material-icons-font-face((
///     woff2: url(./fonts/material-icons/MaterialIcons-Regular.woff2),
///     woff: url(./fonts/material-icons/MaterialIcons-Regular.woff),
///     truetype: url(./fonts/material-icons/MaterialIcons-Regular.ttf)
///   ));
///
/// @example scss - Example Usage SCSS
///   $local-font-url: '/fonts/material-icons';
///   @include rmd-icon-material-icons-font-face($local-font-url);
///
/// @param {String | Map} font-url-or-map ['/fonts/material-icons'] - This is either a font url prefix for the folder
///   that is "hosting" the material icons or a Map of direct urls for the eot, woff2, woff, and truetype material icon fonts.
/// @param {Boolean} include-font-size [false] - Boolean if the material icons class name should include
///   the default icon font size.
/// @param {Boolean} old-ie-support [false] - Boolean if there should be a fallback for IE6-8 by including a url to
///   the eot font. If this is set to true and using the Map version of `$font-url-or-map`, you must also include a url
///   to the eot font.
@mixin rmd-icon-host-material-icons($font-url-or-map: '/fonts/material-icons', $include-font-size: false, $old-ie-support: false) {
  @include rmd-icon-material-icons-font-face($font-url-or-map, $old-ie-support);
  @include rmd-icon-material-icons-class($include-font-size);
}
