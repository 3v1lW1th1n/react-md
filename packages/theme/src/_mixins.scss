////
/// @group theme
////

@import 'variables';
@import 'functions';
@import 'helpers';

/// This is really for internal use with the `react-md-theme` mixin, but you might be able to use it for some other stuff.
///
/// @param {String} property - This is normally `color` or `background-color`, but any valid CSS property that accepts
///   color values can be used.
/// @param {String} theme-style - The type of theme style to use. This should be one of the `$rmd-theme-values` or a literal
///   color value.
/// @param {Boolean} no-css-variables-fallback [rmd-theme-no-css-variables-fallback] - Boolean if the theme should also be applied
///   without the use of `var(--rmd-theme-NAME)`.
@mixin rmd-theme($property, $theme-style) {
  @include rmd-theme-apply-rmd-var($property, $theme-style, $rmd-theme-values, theme);
}

/// This is an extremely simple mixin that will allow you to quickly set or update the value of a theme css variable
/// with the new provided value.
///
/// @example scss - Example Usage SCSS
///   $rmd-theme-primary: $rmd-blue-500;
///   $rmd-theme-secondary: $rmd-pink-a-200;
///
///   .some-class-with-different-themes {
///     // no idea if these colors go together...
///     @include rmd-theme-update-var(primary, $rmd-orange-500);
///     @include rmd-theme-update-var(secondary, $rmd-brown-700);
///   }
///
/// @param {String} theme-style - The react-md theme style to update. This should be one of the keys of
///     `$rmd-theme-values` map.
/// @param {Color} value - The updated color value to apply.
@mixin rmd-theme-update-var($theme-style, $value) {
  @include rmd-theme-update-rmd-var($value, $theme-style, $rmd-theme-values, theme);
}

/// Creates all the styles for a theme in react-md. This will start by creating CSS Variables
/// for each theme variable and then create class names for each variable.
///
/// @example scss - Normal SCSS Usage
///   // declare your theme variables
///   $rmd-theme-primary: $rmd-teal-500;
///   $rmd-theme-secondary: $rmd-pink-a-400;
///
///   @include react-md-theme;
///
/// @example scss - Alternative SCSS Usage
///   // if you want to create a theme without using the `$rmd-theme-primary` and `$rmd-theme-secondary` variables
///   @include react-md-theme($rmd-teal-500, $rmd-pink-a-400);
@mixin react-md-theme {
  @include rmd-theme-create-root-theme($rmd-theme-values, theme);
}
