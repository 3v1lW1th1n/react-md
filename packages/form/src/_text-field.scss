////
/// @group form-text-field
////

@import '@react-md/theme/dist/mixins';
@import '@react-md/utils/dist/mixins';
@import 'theme';

/// Creates the styles for a floating label. This also requries the base styles from
/// the `rmd-label` mixin.
/// @access private
@mixin rmd-floating-label {
  // @include rmd-form-theme(top, label-floating-top);
  // @include rmd-utils-rtl {
  //   left: auto;
  //   right: 0;
  //   transform: translate(rmd-utils-negate-var(rmd-form-theme-var(offset)), -50%);
  // }

  // $transitions: background-color, color, font-size, transform, top;

  // left: 0;
  // position: absolute;
  // transform: translate(rmd-form-theme-var(offset), -50%);
  // transition-property: $transitions;
  // will-change: $transitions;

  // &--active {
  //   @include rmd-utils-rtl {
  //     transform: translate(rmd-utils-negate-var(rmd-form-theme-var(offset)), 0);
  //   }

  //   font-size: $rmd-label-floating-font-size;
  //   top: 0;
  //   transform: translate(rmd-form-theme-var(offset), 0);
  //   z-index: 1;
  // }

  // &--covering {
  //   @include rmd-utils-rtl-auto(right, rmd-form-theme-var(offset), 0);
  // }

  // &--inactive {
  //   @include rmd-theme(color, text-secondary-on-background);
  // }

  // &--outline-active {
  //   @include rmd-theme(background-color, background);
  //   @include rmd-utils-rtl {
  //     transform: translate(rmd-utils-negate-var(rmd-form-theme-var(offset)), -50%);
  //   }

  //   left: -$rmd-label-padding;
  //   padding: 0 $rmd-label-padding;
  //   transform: translate(rmd-form-theme-var(offset), -50%);
  // }
}

/// A simple mixin that applies placeholder styles to an input/textarea
/// element.
@mixin rmd-form-placeholder {
  &:placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }

  &::-webkit-input-placeholder {
    @content;
  }
}

/// @access private
@mixin rmd-text-field-container {
  // @include rmd-transition(standard);
  // @include rmd-form-theme-update-var(offset, rmd-form-theme-var(horizontal-padding));

  // align-items: center;
  // display: flex;
  // position: relative;
  // transition: border-color $rmd-transition-standard-time, height $rmd-transition-standard-time;

  // &::after {
  //   // don't want pointer events since it'll make resizing textareas
  //   // harder
  //   pointer-events: none;
  //   position: absolute;
  // }

  // &--inline {
  //   display: inline-flex;
  // }

  // &--filled {
  //   @include rmd-states-surface;
  //   @include rmd-form-theme(background-color, filled-color);
  // }

  // &--outline {
  //   @include rmd-form-theme(border-color);
  //   @include rmd-form-theme(border-radius);
  //   @include rmd-form-theme(border-width);
  //   @include rmd-form-theme-update-var(horizontal-padding, $rmd-form-outline-horizontal-padding);
  //   @include rmd-form-theme-update-var(vertical-padding, $rmd-form-outline-vertical-padding);

  //   border-style: solid;

  //   &:hover {
  //     @include rmd-form-theme(border-color, border-hover-color);
  //   }

  //   &:disabled {
  //     @include rmd-form-theme(bordered-color, disabled-color);
  //   }

  //   &::after {
  //     @include rmd-transition(standard);
  //     @include rmd-utils-pseudo-element;

  //     box-shadow: 0 0 0 rmd-form-theme-var(border-width-active) rmd-form-theme-var(active-color);
  //     opacity: 0;
  //     transition: opacity $rmd-transition-standard-time;
  //   }
  // }

  // &--outline-active::after {
  //   opacity: 1;
  // }

  // &--underline {
  //   @include rmd-transition(standard);
  //   @include rmd-form-theme(border-top-left-radius, border-radius);
  //   @include rmd-form-theme(border-top-right-radius, border-radius);
  //   @include rmd-form-theme(border-bottom-width, border-width);
  //   @include rmd-form-theme(border-bottom-color, border-color);
  //   @include rmd-form-theme-update-var(horizontal-padding, $rmd-form-underline-horizontal-padding);
  //   @include rmd-form-theme-update-var(vertical-padding, $rmd-form-underline-vertical-padding);

  //   border-bottom-style: solid;
  //   padding-top: 1em;

  //   &:hover {
  //     @include rmd-form-theme(border-bottom-color, border-hover-color);
  //   }

  //   &::after {
  //     @include rmd-transition(standard);
  //     @include rmd-form-theme(background-color, active-color);
  //     @include rmd-form-theme(height, border-width-active);

  //     content: '';
  //     max-width: 0;
  //     top: 100%;
  //     transition: max-width $rmd-transition-standard-time;
  //     width: 100%;
  //     z-index: 1;
  //   }
  // }

  // &--underline-left::after {
  //   @include rmd-utils-rtl {
  //     left: auto;
  //     margin-left: auto;
  //     margin-right: 0;
  //     right: 0;
  //   }

  //   left: 0;
  //   margin-right: auto;
  // }

  // &--underline-right::after {
  //   margin-left: auto;
  //   right: 0;
  // }

  // &--underline-active::after {
  //   max-width: 100%;
  // }

  // &--error {
  //   $error-color: rmd-form-theme-var(error-color);

  //   @include rmd-form-theme-update-var(active-color, $error-color);
  //   @include rmd-form-theme-update-var(border-color, $error-color);
  //   @include rmd-form-theme-update-var(border-hover-color, rmd-form-theme-var(error-hover-color));
  //   @include rmd-icon-theme-update-var(color, $error-color);
  // }

  // &--offset-left {
  //   $offset: calc(
  //     #{rmd-form-theme-var(underline-horizontal-padding)} + #{rmd-icon-theme-var(size)} + #{rmd-icon-theme-var(
  //         text-spacing
  //       )}
  //   );
  //   @include rmd-form-theme-update-var(horizontal-padding, $offset);
  // }
}

/// @access private
@mixin rmd-text-field {
  // @include rmd-transition(standard);
  // @include rmd-typography(body-1, font-size);
  // @include rmd-utils-hide-focus-outline;
  // @include rmd-form-placeholder {
  //   @include rmd-transition(standard);
  //   @include rmd-theme(color, text-secondary-on-background);

  //   // want to gain the same font styles as the input/textarea itself,
  //   // just apply different colors as needed instead
  //   font: inherit;
  // }
  // background-color: transparent;
  // border-width: 0;
  // color: inherit;
  // flex-grow: 1;
  // flex-shrink: 1;
  // font-size: 1em;
  // padding: rmd-form-theme-var(vertical-padding) rmd-form-theme-var(horizontal-padding);
  // transition-duration: $rmd-transition-standard-time;
  // transition-property: border-color;

  // &[disabled] {
  //   @include rmd-theme(color, text-disabled-on-background);

  //   @include rmd-form-placeholder {
  //     @include rmd-theme(color, text-disabled-on-background);
  //   }
  // }

  // &--secondary {
  //   @include rmd-theme(color, text-secondary-on-background);
  // }

  // &--no-v-padding {
  //   @include rmd-form-theme-update-var(vertical-padding, 0);
  // }

  // &--unresizable {
  //   height: calc(100% - #{rmd-form-theme-var(textarea-margin-top)});
  //   resize: none;
  //   width: 100%;
  // }

  // &--resize-h {
  //   resize: horizontal;
  // }

  // &--resize-v {
  //   resize: vertical;
  // }

  // &--mask {
  //   height: auto;
  //   left: 0;
  //   opacity: 0;
  //   pointer-events: none;
  //   position: absolute;
  //   right: 0;
  //   top: 0;
  //   z-index: -1;
  // }

  // &--area {
  //   @include rmd-form-theme(min-height, textarea-min-height);
  //   @include rmd-form-theme(margin-top, textarea-margin-top);

  //   // only show the scrollbars when needed
  //   overflow: auto;
  // }

  // &--area-underline {
  //   @include rmd-form-theme-update-var(
  //     textarea-margin-top,
  //     $rmd-form-textarea-underline-margin-top
  //   );

  //   padding-top: 0;
  // }

  // &--floating {
  //   @include rmd-form-placeholder {
  //     color: transparent;
  //     transition: color $rmd-transition-standard-time;
  //   }

  //   &:focus {
  //     @include rmd-form-placeholder {
  //       @include rmd-theme(color, text-secondary-on-background);
  //     }
  //   }
  // }
}
