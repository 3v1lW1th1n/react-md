////
/// @group tooltip
////

@import '@react-md/theme/dist/helpers';
@import '@react-md/typography/dist/mixins';
@import '@react-md/transition/dist/mixins';
@import '@react-md/utils/dist/functions';
@import '@react-md/utils/dist/mixins';
@import 'functions';
@import 'variables';

/// Creates the styles for one of the tooltip's theme values. This is mostly
/// going to be an internal helper mixin util.
///
/// @param {String} property - The property to set a `rmd-tooltip-theme-values` value to.
/// @param {String} theme-style - One of the keys of `rmd-tooltip-theme-values` to extract a value from.
/// @param {String|Color|Number} fallback [null] - A fallback value to use if the css variable
///   isn't set somehow. This will default to automatically retrieving the default value
///   from the `rmd-tooltip-theme-values` map when `null`.
@mixin rmd-tooltip-theme($property, $theme-style: $property, $fallback: null) {
  @include rmd-theme-apply-rmd-var($property, $theme-style, $rmd-tooltip-theme-values, tooltip);
}

/// Updates one of the tooltip's theme variables with the new value for the section
/// of your app.
///
/// @param {String} theme-style - The tooltip theme style type to update. This should be one
///   of the `$rmd-tooltip-theme-values` keys.
/// @param {String|Number|Color} value - The new value to use.
@mixin rmd-tooltip-theme-update-var($theme-style, $value) {
  @include rmd-theme-update-rmd-var($value, $theme-style, $rmd-tooltip-theme-values, tooltip);
}

@mixin rmd-tooltip-base {
  @include rmd-typography-base;
  @include rmd-typography-value(body-1, letter-spacing);
  @include rmd-tooltip-theme(background-color);
  @include rmd-tooltip-theme(color);
  @include rmd-tooltip-theme(font-size);
  @include rmd-tooltip-theme(min-height);
  @include rmd-tooltip-theme(padding-left, horizontal-padding);
  @include rmd-tooltip-theme(padding-right, horizontal-padding);
  @include rmd-tooltip-theme(z-index);

  align-items: center;
  border-radius: $rmd-tooltip-border-radius;
  display: flex;
  line-height: $rmd-tooltip-line-height;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  text-transform: none;
  user-select: none;
  white-space: nowrap;
}

/// Creates the styles for one of the four tooltip positions.
///
/// @example scss - Example SCSS Usage
///   .rmd-tooltip--left {
///     @include rmd-tooltip-position(left, $rmd-tooltip-spacing);
///   }
///
/// @param {String} position - One of the four tooltip positions. (top, right, bottom, or left)
@mixin rmd-tooltip-position($position) {
  $position: rmd-utils-validate($rmd-tooltip-position-values, $position, 'tooltip position');

  // add a negative spacing since the position will be transformed for centering below
  $inversed-position: rmd-tooltip-inverse-position($position);
  $inversed-property: rmd-tooltip-position-to-property($inversed-position);
  // top: calc(100% + #{rmd-tooltip-theme-var(spacing)});
  #{$inversed-property}: calc(100% + #{rmd-tooltip-theme-var(spacing)});

  $horizontal: $position == 'left' or $position == 'right';
  $distance: if(
    $position == 'left' or $position == 'above',
    rmd-tooltip-theme-var(transition-distance),
    calc(-1 * #{rmd-tooltip-theme-var(transition-distance)})
  );

  $inactive-x: if($horizontal, $distance, -50%);
  $inactive-y: if($horizontal, -50%, $distance);

  left: if($horizontal, null, 50%);
  top: if($horizontal, 50%, null);
  transform: translate3d($inactive-x, $inactive-y, 0);

  &.rmd-tooltip--visible {
    $active-x: if($horizontal, 0, -50%);
    $active-y: if($horizontal, -50%, 0);

    transform: translate3d($active-x, $active-y, 0);
  }
}

/// Creates the base styles to allow line-wrapping tooltips.
@mixin rmd-tooltip-line-wrap {
  @include rmd-tooltip-theme(padding-bottom, vertical-padding);
  @include rmd-tooltip-theme(padding-top, vertical-padding);

  white-space: normal;
}

/// Creates the dense tooltip style overrides.
@mixin rmd-tooltip-dense {
  @include rmd-tooltip-theme(font-size, dense-font-size);
  @include rmd-tooltip-theme(min-height, dense-min-height);
  @include rmd-tooltip-theme(padding-left, dense-horizontal-padding);
  @include rmd-tooltip-theme(padding-right, dense-horizontal-padding);

  @each $position in $rmd-tooltip-position-values {
    &.rmd-tooltip--#{$position} {
      $inversed-position: rmd-tooltip-inverse-position($position);
      $inversed-property: rmd-tooltip-position-to-property($inversed-position);
      #{$inversed-property}: calc(100% + #{rmd-tooltip-theme-var(dense-spacing)});
    }
  }

  &-line-wrap {
    @include rmd-tooltip-theme(padding-bottom, dense-vertical-padding);
    @include rmd-tooltip-theme(padding-top, dense-vertical-padding);
  }
}

@mixin react-md-tooltip {
  @include rmd-theme-create-root-theme($rmd-tooltip-theme-values, tooltip);

  .rmd-tooltip {
    @include rmd-tooltip-base;

    &--line-wrap {
      @include rmd-tooltip-line-wrap;
    }

    &--dense {
      @include rmd-tooltip-dense;
    }

    &--visible {
      opacity: 1;
    }

    &--enter {
      @include rmd-transition(deceleration);

      transition: opacity $rmd-tooltip-enter-duration, transform $rmd-tooltip-enter-duration * 2;
    }

    &--exit {
      @include rmd-transition(acceleration);

      transition-duration: $rmd-tooltip-exit-duration;
    }

    &--exit-active {
      opacity: 0;
    }

    &--left {
      @include rmd-tooltip-position(left);
    }

    &--above {
      @include rmd-tooltip-position(above);
    }

    &--right {
      @include rmd-tooltip-position(right);
    }

    &--below {
      @include rmd-tooltip-position(below);
    }

    &--portal {
      // reset everything since it is now handled by inline styles
      bottom: auto;
      left: auto;
      right: auto;
      top: auto;

      $distance: rmd-tooltip-theme-var(transition-distance);
      // have to use calc to negate the value of a css variable
      $negative-distance: calc(-1 * #{$distance});

      &.rmd-tooltip--above {
        transform: translateY($negative-distance);
      }

      &.rmd-tooltip--below {
        transform: translateY($distance);
      }

      &.rmd-tooltip--left {
        transform: translateX($distance);
      }

      &.rmd-tooltip--right {
        transform: translateX($negative-distance);
      }

      &.rmd-tooltip--visible {
        transform: none;
      }
    }
  }
}
