(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{"./src/components/packages/Link/LinkSassDoc.tsx":function(e,n,i){"use strict";i.r(n),function(e){var t,r=i("../../node_modules/react/index.js"),l=i("./src/components/PackageSassDoc/index.ts");(t=i("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var o=i("./src/components/packages/Link/sassdoc.json"),s=function(){return r.createElement(l.a,{name:"Link",sassdoc:o})};const a=s;var m,d;n.default=a,m=i("../../node_modules/react-hot-loader/index.js").default,d=i("../../node_modules/react-hot-loader/index.js").leaveModule,m&&(m.register(s,"LinkSassDoc","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Link/LinkSassDoc.tsx"),m.register(a,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Link/LinkSassDoc.tsx"),d(e))}.call(this,i("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Link/sassdoc.json":function(e){e.exports={functions:[{name:"rmd-link-theme",type:"function",description:"This function is used to quickly get one of the link's theme values. This is really\njust for the `rmd-link-theme` mixin to provide some validation that a correct style\nkey is used, but might be useful in other cases\n\n",file:"link/src/_functions.scss",group:"link",links:[],see:[],usedBy:[],requires:[{name:"rmd-link-theme",type:"variable",description:"",group:"link"}],code:"@function rmd-link-theme($style) {\n  @if not map-has-key($rmd-link-theme, $style) {\n    @error 'Invalid style: \\'#{$style}\\'. Choose one of: #{map-keys($rmd-link-theme)}';\n  }\n\n  @return map-get($rmd-link-theme, $style);\n}",throws:["Invalid style: \\"],examples:[{type:"scss",code:".custom-link {\n  color: rmd-link-theme(color);\n\n  &:hover {\n    color: rmd-link-theme(hover-color);\n  }\n}",description:"Simple Usage",compiledCode:".custom-link {\n  color: var(--rmd-theme-primary);\n}\n\n.custom-link:hover {\n  color: #bc37d3;\n}\n"}],parameters:[{type:"String",name:"style",description:"One of the `$rmd-link-theme` map keys to get a value for."}],returns:{type:"Color",description:"one of the link's theme colors."}},{name:"rmd-link-theme-var",type:"function",description:"This function is used to get one of the link's theme variables as a CSS Variable\nto be applied as a `color` attribute. By default, the CSS Variable will have a fallback\nof the current `$rmd-link-theme`\n\nThis function is used to create a CSS Variable declaration with an optional fallback value\nif the CSS Variable has not been declared somehow.\n\n",file:"link/src/_functions.scss",group:"link",links:[],see:[],usedBy:[{name:"rmd-link-theme",type:"mixin",description:"This is a simple mixin that will apply the link theme color to an element (normally a Link component).\n\nNOTE: Unlike the `rmd-theme` mixin, only the color property can be updated.\n",group:"link"}],requires:[{name:"rmd-link-theme",type:"variable",description:"",group:"link"}],code:"@function rmd-link-theme-var($style, $fallback-color: null) {\n  @if not map-has-key($rmd-link-theme, $style) {\n    @error 'Invalid style: \\'#{$style}\\'. Choose one of: #{map-keys($rmd-link-theme)}';\n  }\n\n  @if $fallback-color == null {\n    @return var(--rmd-link-#{$style});\n  }\n\n  @return var(--rmd-link-#{$style}, $fallback-color);\n}",throws:["Invalid style: \\"],examples:[],parameters:[{type:"String",name:"style",description:"One of the `$rmd-link-theme` map keys to set a value for."},{type:"Color",name:"fallback-color",default:"null",description:"An optional fallback color to apply. This is set to `null` by\ndefault and not used since the link's theme variables should always exist."}]}],mixins:[{name:"rmd-link-theme",type:"mixin",description:"This is a simple mixin that will apply the link theme color to an element (normally a Link component).\n\nNOTE: Unlike the `rmd-theme` mixin, only the color property can be updated.\n",file:"link/src/_mixins.scss",group:"link",links:[],see:[],usedBy:[{name:"react-md-link",type:"mixin",description:"Creates the styles for links within react-md.\n",group:"link"}],requires:[{name:"rmd-link-theme-var",type:"function",description:"",group:"link"}],code:"@mixin rmd-link-theme($style) {\n  color: rmd-link-theme-var($style);\n}",throws:[],examples:[],parameters:[{type:"String",name:"style",description:"One of the `rmd-link-theme` map keys to get a value for."}]},{name:"rmd-link-set-var",type:"mixin",description:"This is a simple mixin that will update a react-md link CSS Variable value to be the provided color\ninstead.\n\n",file:"link/src/_mixins.scss",group:"link",links:[],see:[],usedBy:[{name:"react-md-link",type:"mixin",description:"Creates the styles for links within react-md.\n",group:"link"}],requires:[{name:"rmd-link-theme",type:"variable",description:"",group:"link"}],code:"@mixin rmd-link-set-var($style, $value) {\n  @if not map-has-key($rmd-link-theme, $style) {\n    @error 'Invalid link theme style: \\'#{$style}\\'. Choose one of #{map-keys($rmd-link-theme)}';\n  }\n\n  #{--rmd-link-#{$style}}: $value;\n}",throws:["Invalid link theme style: \\"],examples:[],parameters:[{type:"String",name:"style",description:"One of the `rmd-link-theme` map keys to get a value for."},{type:"Color",name:"value",description:"The color to update the link theme to."}]},{name:"react-md-link",type:"mixin",description:"Creates the styles for links within react-md.\n",file:"link/src/_mixins.scss",group:"link",links:[],see:[],usedBy:[],requires:[{name:"rmd-link-set-var",type:"mixin",description:"",group:"link"},{name:"rmd-link-theme",type:"mixin",description:"",group:"link"},{name:"rmd-link-transition-time",type:"variable",description:"",group:"link"}],code:"@mixin react-md-link {\n  :root {\n    @each $style, $value in $rmd-link-theme {\n      @include rmd-link-set-var($style, $value);\n    }\n  }\n\n  .rmd-link {\n    @include rmd-link-theme(color);\n\n    text-decoration: none;\n    transition: color $rmd-link-transition-time;\n\n    &--flex-centered {\n      align-items: center;\n      display: inline-flex;\n    }\n\n    &:visited {\n      @include rmd-link-theme(visited-color);\n    }\n\n    &:hover {\n      @include rmd-link-theme(hover-color);\n\n      text-decoration: underline;\n    }\n  }\n}",throws:[],examples:[],parameters:[]}],variables:[{name:"rmd-link-transition-time",type:"Number",description:"The transition time for links to change color.\n",file:"link/src/_variables.scss",group:"link",links:[],see:[],usedBy:[{name:"react-md-link",type:"mixin",description:"Creates the styles for links within react-md.\n",group:"link"}],requires:[],code:"$rmd-link-transition-time: .15s !default;",value:".15s",resolvedValue:"$rmd-link-transition-time: .15s !default;"},{name:"rmd-link-color",type:"Color",description:"The default color to use for links.\n",file:"link/src/_variables.scss",group:"link",links:[],see:[],usedBy:[],requires:[],code:"$rmd-link-color: rmd-theme-var(primary) !default;",value:"",resolvedValue:"$rmd-link-color: var(--rmd-theme-primary) !default;"},{name:"rmd-link-visited-color",type:"Color",description:"The color to use for links that have been visited.\n",file:"link/src/_variables.scss",group:"link",links:[],see:[],usedBy:[],requires:[],code:"$rmd-link-visited-color: darken($rmd-theme-primary, 10%) !default;",value:"",resolvedValue:"$rmd-link-visited-color: #771e86 !default;"},{name:"rmd-link-hover-color",type:"Color",description:"The color to use for links that are being hovered.\n",file:"link/src/_variables.scss",group:"link",links:[],see:[],usedBy:[],requires:[],code:"$rmd-link-hover-color: lighten($rmd-theme-primary, 10%) !default;",value:"",resolvedValue:"$rmd-link-hover-color: #bc37d3 !default;"},{name:"rmd-link-theme",type:"Map",description:"A Map of all the link theme variables. Each key in this map will be used to generate the link's theme CSS Variables\nby prefixing each key with `--rmd-`.\n",file:"link/src/_variables.scss",group:"link",links:[],see:[],usedBy:[{name:"rmd-link-theme",type:"function",description:"This function is used to quickly get one of the link's theme values. This is really\njust for the `rmd-link-theme` mixin to provide some validation that a correct style\nkey is used, but might be useful in other cases\n\n",group:"link"},{name:"rmd-link-theme-var",type:"function",description:"This function is used to get one of the link's theme variables as a CSS Variable\nto be applied as a `color` attribute. By default, the CSS Variable will have a fallback\nof the current `$rmd-link-theme`\n\nThis function is used to create a CSS Variable declaration with an optional fallback value\nif the CSS Variable has not been declared somehow.\n\n",group:"link"},{name:"rmd-link-set-var",type:"mixin",description:"This is a simple mixin that will update a react-md link CSS Variable value to be the provided color\ninstead.\n\n",group:"link"},{name:"react-md-link",type:"mixin",description:"Creates the styles for links within react-md.\n",group:"link"}],requires:[],code:"$rmd-link-theme: (\n  color: $rmd-link-color,\n  hover-color: $rmd-link-hover-color,\n  visited-color: $rmd-link-visited-color,\n) !default;",value:"",resolvedValue:"$rmd-link-theme: (\n  color: var(--rmd-theme-primary),\n  hover-color: #bc37d3,\n  visited-color: #771e86,\n) !default;"}]}}}]);
//# sourceMappingURL=69.5ec1cefd.chunk.min.js.map