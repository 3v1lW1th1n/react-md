(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"./src/components/Changelog.tsx":function(e,n,t){"use strict";(function(e){var o,s=t("./node_modules/react/index.js"),a=t("./src/components/Markdown/index.ts");(o=t("./node_modules/react-hot-loader/index.js").enterModule)&&o(e);var r=function(e){var n=e.changelog,t="# Changelog";return n.split(/\r?\n/).length<=3?t+="\n\n#### This package is completely new starting with v2 and has not had any changes yet.\n":t=t+"\n\n"+n,s.createElement(a.b,{markdown:t})};const d=r;var i,c;n.a=d,i=t("./node_modules/react-hot-loader/index.js").default,c=t("./node_modules/react-hot-loader/index.js").leaveModule,i&&(i.register(r,"Changelog","/Users/mlaursen/code/react-md/packages/documentation/src/components/Changelog.tsx"),i.register(d,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/Changelog.tsx"),c(e))}).call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Markdown/Markdown.tsx":function(e,n,t){"use strict";(function(e){var o,s=t("./node_modules/tslib/tslib.es6.js"),a=t("./node_modules/react/index.js"),r=t("./node_modules/classnames/index.js"),d=t.n(r),i=t("./node_modules/react-router/es/withRouter.js"),c=t("./src/utils/markdown/index.ts");t("./src/components/Markdown/markdown.scss");(o=t("./node_modules/react-hot-loader/index.js").enterModule)&&o(e);var l=function(e){function n(n){var t=e.call(this,n)||this;return t.updateLinks=function(){var e=t.props.history;if(t.container.current)for(var n=function(n){/^https?:\/\/(localhost|react-md|mlaursen\.github\.io\/react-md\/)/.test(n.href)&&(n.onclick=function(t){t.preventDefault(),e.push(n.href.replace(window.location.origin,""))})},o=0,s=Array.from(t.container.current.querySelectorAll(".rmd-link"));o<s.length;o++){n(s[o])}},t.state={html:{__html:Object(c.a)(n.markdown)},prevMarkdown:n.markdown},t.container=a.createRef(),t}return s.b(n,e),n.getDerivedStateFromProps=function(e,n){var t=e.markdown;return n.prevMarkdown!==t?{html:{__html:Object(c.a)(e.markdown)},prevMarkdown:t}:null},n.prototype.componentDidMount=function(){this.updateLinks()},n.prototype.componentDidUpdate=function(e,n){this.state.html!==n.html&&this.updateLinks()},n.prototype.render=function(){var e=this.props,n=e.style,t=e.className,o=e.markdown,s=this.state.html;return s.__html&&o?a.createElement("div",{ref:this.container,style:n,className:d()("markdown-container",t),dangerouslySetInnerHTML:s}):null},n}(a.Component);const u=Object(i.a)(l);var m,p;n.a=u,m=t("./node_modules/react-hot-loader/index.js").default,p=t("./node_modules/react-hot-loader/index.js").leaveModule,m&&(m.register(l,"Markdown","/Users/mlaursen/code/react-md/packages/documentation/src/components/Markdown/Markdown.tsx"),m.register(u,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/Markdown/Markdown.tsx"),p(e))}).call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Markdown/MarkdownPage.tsx":function(e,n,t){"use strict";(function(e){var o,s=t("./node_modules/tslib/tslib.es6.js"),a=t("./node_modules/react/index.js"),r=t("./node_modules/classnames/index.js"),d=t.n(r),i=t("./src/components/Markdown/Markdown.tsx");(o=t("./node_modules/react-hot-loader/index.js").enterModule)&&o(e);var c=function(e){var n=e.className,t=s.c(e,["className"]);return a.createElement(i.a,s.a({},t,{className:d()("markdown-page rmd-text-container",n)}))};const l=c;var u,m;n.a=l,u=t("./node_modules/react-hot-loader/index.js").default,m=t("./node_modules/react-hot-loader/index.js").leaveModule,u&&(u.register(c,"MarkdownPage","/Users/mlaursen/code/react-md/packages/documentation/src/components/Markdown/MarkdownPage.tsx"),u.register(l,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/Markdown/MarkdownPage.tsx"),m(e))}).call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Markdown/index.ts":function(e,n,t){"use strict";(function(e){var o=t("./src/components/Markdown/Markdown.tsx");t.d(n,"a",function(){return o.a});var s,a=t("./src/components/Markdown/MarkdownPage.tsx");t.d(n,"b",function(){return a.a}),(s=t("./node_modules/react-hot-loader/index.js").enterModule)&&s(e);const r=o.a;var d,i;n.c=r,d=t("./node_modules/react-hot-loader/index.js").default,i=t("./node_modules/react-hot-loader/index.js").leaveModule,d&&(d.register(r,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/Markdown/index.ts"),i(e))}).call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Button/Changelog/CHANGELOG.md":function(e,n){e.exports='## Table of Contents\n- [v2.0.0-alpha-1](#v200-alpha-1)\n    + [Breaking Changes](#breaking-changes)\n    + [Styling Changes](#styling-changes)\n    + [New Features](#new-features)\n    + [Removed Props](#removed-props)\n\n# v2.0.0-alpha-1\nThe `Button` component was re-written from the ground up in typescript as well as adapting to the "newer"\nmaterial design specs for theming. This means that no additional props are required to render a button with\nbasic styles.\n\nQuick example:\n```diff\n-<Button flat primary>Flat Button</Button>\n+<Button>Flat Button</Button>\n```\n\n```diff\n-<Button raised secondary>Raised Button</Button>\n+<Button theme="secondary" themeType="contained">Raised Button</Button>\n```\n\n```diff\n-<Button icon><FontIcon>home</FontIcon></Button>\n+<Button theme="clear" btnType="icon"><FontIcon>home</FontIcon></Button>\n```\n\n```diff\n-<Button floating primary><FontIcon>add</FontIcon></Button>\n+<Button theme="primary" btnType="icon" themeType="contained"><FontIcon>add</FontIcon></Button>\n```\n\n### Breaking Changes\nButtons no longer have any of the `primary`, `secondary`, `flat`, `raised`, `floating`, or `icon` props; instead\nthe new styling props are `btnType`, `theme`, and `themeType`. In addition, buttons will now have a default state\nof being rendered as text buttons so additional props are not required to get a styled button rendered.\n\nButtons no longer support rendering as links using the `href` prop. Instead, you should install\n[@react-md/link](https://github.com/mlaursen/react-md/tree/next/packages/link) and use the new `Button.theme` function\nto apply buttons styles to a link.\n\n```tsx\nimport * as React from "react";\nimport { Buttom } from "@react-md/button";\nimport { Link, ILinkProps } from "@react-md/link";\n\nconst LinkButton: React.SFC<ILinkProps> = props => <Link {...props} className={Button.theme(props)} />;\nexport default LinkButton;\n```\n\nButtons no longer use media queries to dynamically update the size for dense layouts. If you want to update your app to\nbe automatically "dense" on desktop, you should either use the `dense` prop on the component\n\nButtons no longer use the `injectInk` and `injectTooltip` higher order components. So if you were using refs before, you\nwon\'t need to do `ref.getComposedComponent().getComposedComponent()`.\n\n### Styling Changes\nButtons were changed to be `display: inline-flex` instead of `display: inline-block`. This allows for easier positioning\nby just using `align-items: center` and not require positioning with padding calculations. Because of this change, buttons\ndo not have top and bottom padding anymore.\n\nText buttons are now `36px` tall instead of `48px` because the min-width and height is accesible enough for touch devices\nwithout the need for additional height.\n\n### New Features\nButtons now can be rendered with an [outline spec](https://material.io/design/components/buttons.html#outlined-button)\nas well as a new prop that will allow the button to be rendered as a `<div>` instead of a `<button>` when you need to\ncreate more complex buttons that have `<div>`s in the children (this previously required the `AccessibleFakeButton` component).\n\nThe button now has four build in themes: "clear", "primary", "secondary", and "default" where only **one** can be enabled.\nIf you were using react-md in the past, "clear" is the equivalent of not enabling the `primary` and `secondary` props\nwhile "primary" is equivalent to enabling the `primary` prop and "secondary" to enabling the `secondary` prop.\n\nTo help apply the button theme to other components (like links), the button how has a static `theme` function that accepts\nthe button props and returns the correct `className` to apply to an element.\n\n### Removed Props\nThe `iconClassName`, `iconChildren`, `iconEl`, `forceIconSize`, `forceIconFontSize` and `svg` were removed. If you want to include\nicons within the button, you should either set the `btnType="icon"` and use the `FontIcon`/`SVGIcon` component as a child or set\nthe `btnType="text"` and provide the `FontIcon`/`SVGIcon` as the `icon` prop to render an icon before or after the text.\n\nThe `iconBefore` prop was changed to be `iconAfter`. This will have the same default value of having the icon display before the\ntext.\n\nThe `component` prop was removed. If you want to render an element with button styles, you should use the `Button.theme` function on\nyour custom component instead.\n\nThe `swapTheming` was removed. The use case for this prop has been removed now that there is an outline spec and the new theming\nprops.\n\nThe `tooltipLabel`, `tooltipDelay`, and `tooltipPosition` were removed. Instead you should use [@react-md/tooltip](https://github.com/mlaursen/react-md/tree/next/packages/tooltip)\nand manually include the `<Tooltip>` component yourself. This is because of the new support for "magic" tooltips that should only be\nopt-in.\n\nThe `fixed` and `fixedPosition` props were removed for right now. Will be added back before v2 release.\n\nThe `mini` prop was removed for now. This will eventually be changed to be `dense` to match the naming scheme for other components.\n\n'},"./src/components/packages/Button/Changelog/Changelog.tsx":function(e,n,t){"use strict";(function(e){var o,s=t("./node_modules/react/index.js"),a=t("./src/components/Changelog.tsx");(o=t("./node_modules/react-hot-loader/index.js").enterModule)&&o(e);var r=t("./src/components/packages/Button/Changelog/CHANGELOG.md");const d=function(){return s.createElement(a.a,{changelog:r})};var i,c;n.a=d,i=t("./node_modules/react-hot-loader/index.js").default,c=t("./node_modules/react-hot-loader/index.js").leaveModule,i&&(i.register(d,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/packages/Button/Changelog/Changelog.tsx"),c(e))}).call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Button/Changelog/index.ts":function(e,n,t){"use strict";t.r(n),function(e){var o,s=t("./src/components/packages/Button/Changelog/Changelog.tsx");(o=t("./node_modules/react-hot-loader/index.js").enterModule)&&o(e);const a=s.a;var r,d;n.default=a,r=t("./node_modules/react-hot-loader/index.js").default,d=t("./node_modules/react-hot-loader/index.js").leaveModule,r&&(r.register(a,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/packages/Button/Changelog/index.ts"),d(e))}.call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/utils/markdown/index.ts":function(e,n,t){"use strict";(function(e){t.d(n,"a",function(){return m});var o,s=t("./node_modules/marked/lib/marked.js"),a=t("./node_modules/prismjs/prism.js");t("./node_modules/prismjs/components/prism-bash.js"),t("./node_modules/prismjs/components/prism-css-extras.js"),t("./node_modules/prismjs/components/prism-scss.js"),t("./node_modules/prismjs/components/prism-jsx.js"),t("./node_modules/prismjs/components/prism-typescript.js"),t("./node_modules/prismjs/components/prism-git.js");function r(e){return e?"tsx"===e?"typescript":"sh"===e?"bash":"diff"===e?"git":e:"markup"}(o=t("./node_modules/react-hot-loader/index.js").enterModule)&&o(e),s.setOptions({renderer:new s.Renderer,highlight:function(e,n){return a.highlight(e,a.languages[r(n)])},gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1});var d,i,c=[],l=[function(e){return e.replace(/<a href/g,'<a class="rmd-link" href')},function(e){return e.replace(/(<h2 id="table-of-contents")(>Table of Contents<\/h2>\r?\n<ul)/,function(e,n,t){return n+' class="markdown-toc"'+t+' class="markdown-toc__list"'})},function(e){return e.replace(/yarn add/g,'<span class="token function">yarn</span> <span class="token function">add</span>')}];function u(e,n,t){return n.reduce(function(e,n){return n(e,t)},e)}function m(e,n){return u(s.parse(u(e,c,n)),l,n)}d=t("./node_modules/react-hot-loader/index.js").default,i=t("./node_modules/react-hot-loader/index.js").leaveModule,d&&(d.register(r,"getLanguage","/Users/mlaursen/code/react-md/packages/documentation/src/utils/markdown/index.ts"),d.register(c,"preTransforms","/Users/mlaursen/code/react-md/packages/documentation/src/utils/markdown/index.ts"),d.register(l,"postTransforms","/Users/mlaursen/code/react-md/packages/documentation/src/utils/markdown/index.ts"),d.register(u,"transform","/Users/mlaursen/code/react-md/packages/documentation/src/utils/markdown/index.ts"),d.register(m,"markdownToHTML","/Users/mlaursen/code/react-md/packages/documentation/src/utils/markdown/index.ts"),i(e))}).call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))}}]);
//# sourceMappingURL=19.5a094bd8.chunk.min.js.map