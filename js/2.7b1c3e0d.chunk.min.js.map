{"version":3,"sources":["../../link/node_modules/classnames/index.js","../../link/node_modules/prop-types/factoryWithThrowingShims.js","../../link/node_modules/prop-types/index.js","../../link/node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/fuse.js/dist/fuse.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","ReactPropTypesSecret","__webpack_require__","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","factory","modules","installedModules","moduleId","l","m","c","value","d","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","property","prototype","p","s","obj","toString","_createClass","defineProperties","target","descriptor","writable","Constructor","protoProps","staticProps","bitapRegexSearch","bitapSearch","patternAlphabet","Bitap","pattern","_ref","_ref$location","_ref$distance","distance","_ref$threshold","threshold","_ref$maxPatternLength","maxPatternLength","_ref$isCaseSensitive","isCaseSensitive","_ref$tokenSeparator","tokenSeparator","_ref$findAllMatches","findAllMatches","_ref$minMatchCharLeng","minMatchCharLength","instance","TypeError","_classCallCheck","this","options","toLowerCase","text","isMatch","score","matchedIndices","_options","_options2","path","deepValue","list","dotIndex","indexOf","firstSegment","remaining","slice","len","matchmask","start","end","match","mask","charAt","_i","SPECIAL_CHARS_REGEX","regex","RegExp","replace","matches","matchesLen","_ref$errors","errors","_ref$currentLocation","currentLocation","_ref$expectedLocation","expectedLocation","accuracy","proximity","Math","abs","bitapScore","textLen","currentThreshold","bestLocation","patternLen","matchMask","min","lastIndexOf","_score","lastBitArr","finalScore","binMax","binMin","binMid","floor","max","finish","bitArr","j","charMatch","Fuse","_ref$caseSensitive","caseSensitive","_ref$id","id","_ref$keys","keys","_ref$shouldSort","shouldSort","_ref$getFn","getFn","_ref$sortFn","sortFn","a","b","_ref$tokenize","tokenize","_ref$matchAllTokens","matchAllTokens","_ref$includeMatches","includeMatches","_ref$includeScore","includeScore","_ref$verbose","verbose","setCollection","_log","_prepareSearchers2","_prepareSearchers","tokenSearchers","fullSearcher","_search2","_search","weights","results","_computeScore","_sort","_format","tokens","split","resultMap","_analyze","record","index","_len","item","keysLen","weight","_ref2","_ref3","_ref2$arrayIndex","arrayIndex","_ref3$tokenSearchers","_ref3$fullSearcher","_ref3$resultMap","_ref3$results","exists","averageScore","numTextMatches","mainSearchResult","search","words","scores","tokenSearcher","hasMatchInText","word","tokenSearchResult","scoresLen","_i2","checkTextMatches","existingResult","output","_i3","scoreLen","currScore","bestScore","nScore","sort","finalOutput","JSON","stringify","transformers","result","data","indices","_len2","_console","console","log"],"mappings":"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","file":"js/2.7b1c3e0d.chunk.min.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/*!\n * Fuse.js v3.2.1 - Lightweight fuzzy-search (http://fusejs.io)\n * \n * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fuse\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fuse\"] = factory();\n\telse\n\t\troot[\"Fuse\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (obj) {\n  return !Array.isArray ? Object.prototype.toString.call(obj) === '[object Array]' : Array.isArray(obj);\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bitapRegexSearch = __webpack_require__(5);\nvar bitapSearch = __webpack_require__(7);\nvar patternAlphabet = __webpack_require__(4);\n\nvar Bitap = function () {\n  function Bitap(pattern, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === undefined ? false : _ref$isCaseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n    _classCallCheck(this, Bitap);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: isCaseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength\n    };\n\n    this.pattern = this.options.isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    if (this.pattern.length <= maxPatternLength) {\n      this.patternAlphabet = patternAlphabet(this.pattern);\n    }\n  }\n\n  _createClass(Bitap, [{\n    key: 'search',\n    value: function search(text) {\n      if (!this.options.isCaseSensitive) {\n        text = text.toLowerCase();\n      }\n\n      // Exact match\n      if (this.pattern === text) {\n        return {\n          isMatch: true,\n          score: 0,\n          matchedIndices: [[0, text.length - 1]]\n        };\n      }\n\n      // When pattern length is greater than the machine word length, just do a a regex comparison\n      var _options = this.options,\n          maxPatternLength = _options.maxPatternLength,\n          tokenSeparator = _options.tokenSeparator;\n\n      if (this.pattern.length > maxPatternLength) {\n        return bitapRegexSearch(text, this.pattern, tokenSeparator);\n      }\n\n      // Otherwise, use Bitap algorithm\n      var _options2 = this.options,\n          location = _options2.location,\n          distance = _options2.distance,\n          threshold = _options2.threshold,\n          findAllMatches = _options2.findAllMatches,\n          minMatchCharLength = _options2.minMatchCharLength;\n\n      return bitapSearch(text, this.pattern, this.patternAlphabet, {\n        location: location,\n        distance: distance,\n        threshold: threshold,\n        findAllMatches: findAllMatches,\n        minMatchCharLength: minMatchCharLength\n      });\n    }\n  }]);\n\n  return Bitap;\n}();\n\n// let x = new Bitap(\"od mn war\", {})\n// let result = x.search(\"Old Man's War\")\n// console.log(result)\n\nmodule.exports = Bitap;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isArray = __webpack_require__(0);\n\nvar deepValue = function deepValue(obj, path, list) {\n  if (!path) {\n    // If there's no path left, we've gotten to the object we care about.\n    list.push(obj);\n  } else {\n    var dotIndex = path.indexOf('.');\n    var firstSegment = path;\n    var remaining = null;\n\n    if (dotIndex !== -1) {\n      firstSegment = path.slice(0, dotIndex);\n      remaining = path.slice(dotIndex + 1);\n    }\n\n    var value = obj[firstSegment];\n\n    if (value !== null && value !== undefined) {\n      if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n        list.push(value.toString());\n      } else if (isArray(value)) {\n        // Search each item in the array.\n        for (var i = 0, len = value.length; i < len; i += 1) {\n          deepValue(value[i], remaining, list);\n        }\n      } else if (remaining) {\n        // An object. Recurse further.\n        deepValue(value, remaining, list);\n      }\n    }\n  }\n\n  return list;\n};\n\nmodule.exports = function (obj, path) {\n  return deepValue(obj, path, []);\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function () {\n  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var matchedIndices = [];\n  var start = -1;\n  var end = -1;\n  var i = 0;\n\n  for (var len = matchmask.length; i < len; i += 1) {\n    var match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        matchedIndices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    matchedIndices.push([start, i - 1]);\n  }\n\n  return matchedIndices;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern) {\n  var mask = {};\n  var len = pattern.length;\n\n  for (var i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] = 0;\n  }\n\n  for (var _i = 0; _i < len; _i += 1) {\n    mask[pattern.charAt(_i)] |= 1 << len - _i - 1;\n  }\n\n  return mask;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar SPECIAL_CHARS_REGEX = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\nmodule.exports = function (text, pattern) {\n  var tokenSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : / +/g;\n\n  var regex = new RegExp(pattern.replace(SPECIAL_CHARS_REGEX, '\\\\$&').replace(tokenSeparator, '|'));\n  var matches = text.match(regex);\n  var isMatch = !!matches;\n  var matchedIndices = [];\n\n  if (isMatch) {\n    for (var i = 0, matchesLen = matches.length; i < matchesLen; i += 1) {\n      var match = matches[i];\n      matchedIndices.push([text.indexOf(match), match.length - 1]);\n    }\n  }\n\n  return {\n    // TODO: revisit this score\n    score: isMatch ? 0.5 : 1,\n    isMatch: isMatch,\n    matchedIndices: matchedIndices\n  };\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern, _ref) {\n  var _ref$errors = _ref.errors,\n      errors = _ref$errors === undefined ? 0 : _ref$errors,\n      _ref$currentLocation = _ref.currentLocation,\n      currentLocation = _ref$currentLocation === undefined ? 0 : _ref$currentLocation,\n      _ref$expectedLocation = _ref.expectedLocation,\n      expectedLocation = _ref$expectedLocation === undefined ? 0 : _ref$expectedLocation,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance;\n\n  var accuracy = errors / pattern.length;\n  var proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy;\n  }\n\n  return accuracy + proximity / distance;\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bitapScore = __webpack_require__(6);\nvar matchedIndices = __webpack_require__(3);\n\nmodule.exports = function (text, pattern, patternAlphabet, _ref) {\n  var _ref$location = _ref.location,\n      location = _ref$location === undefined ? 0 : _ref$location,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n      _ref$findAllMatches = _ref.findAllMatches,\n      findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n      _ref$minMatchCharLeng = _ref.minMatchCharLength,\n      minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n  var expectedLocation = location;\n  // Set starting location at beginning text and initialize the alphabet.\n  var textLen = text.length;\n  // Highest score beyond which we give up.\n  var currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  var bestLocation = text.indexOf(pattern, expectedLocation);\n\n  var patternLen = pattern.length;\n\n  // a mask of the matches\n  var matchMask = [];\n  for (var i = 0; i < textLen; i += 1) {\n    matchMask[i] = 0;\n  }\n\n  if (bestLocation !== -1) {\n    var score = bitapScore(pattern, {\n      errors: 0,\n      currentLocation: bestLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n    currentThreshold = Math.min(score, currentThreshold);\n\n    // What about in the other direction? (speed up)\n    bestLocation = text.lastIndexOf(pattern, expectedLocation + patternLen);\n\n    if (bestLocation !== -1) {\n      var _score = bitapScore(pattern, {\n        errors: 0,\n        currentLocation: bestLocation,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n      currentThreshold = Math.min(_score, currentThreshold);\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  var lastBitArr = [];\n  var finalScore = 1;\n  var binMax = patternLen + textLen;\n\n  var mask = 1 << patternLen - 1;\n\n  for (var _i = 0; _i < patternLen; _i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    var binMin = 0;\n    var binMid = binMax;\n\n    while (binMin < binMid) {\n      var _score3 = bitapScore(pattern, {\n        errors: _i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n\n      if (_score3 <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    var start = Math.max(1, expectedLocation - binMid + 1);\n    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    var bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << _i) - 1;\n\n    for (var j = finish; j >= start; j -= 1) {\n      var currentLocation = j - 1;\n      var charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (charMatch) {\n        matchMask[currentLocation] = 1;\n      }\n\n      // First pass: exact match\n      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (_i !== 0) {\n        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = bitapScore(pattern, {\n          errors: _i,\n          currentLocation: currentLocation,\n          expectedLocation: expectedLocation,\n          distance: distance\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break;\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    var _score2 = bitapScore(pattern, {\n      errors: _i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n\n    // console.log('score', score, finalScore)\n\n    if (_score2 > currentThreshold) {\n      break;\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  // console.log('FINAL SCORE', finalScore)\n\n  // Count exact matches (those with a score of 0) to be \"almost\" exact\n  return {\n    isMatch: bestLocation >= 0,\n    score: finalScore === 0 ? 0.001 : finalScore,\n    matchedIndices: matchedIndices(matchMask, minMatchCharLength)\n  };\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bitap = __webpack_require__(1);\nvar deepValue = __webpack_require__(2);\nvar isArray = __webpack_require__(0);\n\nvar Fuse = function () {\n  function Fuse(list, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$caseSensitive = _ref.caseSensitive,\n        caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng,\n        _ref$id = _ref.id,\n        id = _ref$id === undefined ? null : _ref$id,\n        _ref$keys = _ref.keys,\n        keys = _ref$keys === undefined ? [] : _ref$keys,\n        _ref$shouldSort = _ref.shouldSort,\n        shouldSort = _ref$shouldSort === undefined ? true : _ref$shouldSort,\n        _ref$getFn = _ref.getFn,\n        getFn = _ref$getFn === undefined ? deepValue : _ref$getFn,\n        _ref$sortFn = _ref.sortFn,\n        sortFn = _ref$sortFn === undefined ? function (a, b) {\n      return a.score - b.score;\n    } : _ref$sortFn,\n        _ref$tokenize = _ref.tokenize,\n        tokenize = _ref$tokenize === undefined ? false : _ref$tokenize,\n        _ref$matchAllTokens = _ref.matchAllTokens,\n        matchAllTokens = _ref$matchAllTokens === undefined ? false : _ref$matchAllTokens,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === undefined ? false : _ref$includeMatches,\n        _ref$includeScore = _ref.includeScore,\n        includeScore = _ref$includeScore === undefined ? false : _ref$includeScore,\n        _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose;\n\n    _classCallCheck(this, Fuse);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: caseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      id: id,\n      keys: keys,\n      includeMatches: includeMatches,\n      includeScore: includeScore,\n      shouldSort: shouldSort,\n      getFn: getFn,\n      sortFn: sortFn,\n      verbose: verbose,\n      tokenize: tokenize,\n      matchAllTokens: matchAllTokens\n    };\n\n    this.setCollection(list);\n  }\n\n  _createClass(Fuse, [{\n    key: 'setCollection',\n    value: function setCollection(list) {\n      this.list = list;\n      return list;\n    }\n  }, {\n    key: 'search',\n    value: function search(pattern) {\n      this._log('---------\\nSearch pattern: \"' + pattern + '\"');\n\n      var _prepareSearchers2 = this._prepareSearchers(pattern),\n          tokenSearchers = _prepareSearchers2.tokenSearchers,\n          fullSearcher = _prepareSearchers2.fullSearcher;\n\n      var _search2 = this._search(tokenSearchers, fullSearcher),\n          weights = _search2.weights,\n          results = _search2.results;\n\n      this._computeScore(weights, results);\n\n      if (this.options.shouldSort) {\n        this._sort(results);\n      }\n\n      return this._format(results);\n    }\n  }, {\n    key: '_prepareSearchers',\n    value: function _prepareSearchers() {\n      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var tokenSearchers = [];\n\n      if (this.options.tokenize) {\n        // Tokenize on the separator\n        var tokens = pattern.split(this.options.tokenSeparator);\n        for (var i = 0, len = tokens.length; i < len; i += 1) {\n          tokenSearchers.push(new Bitap(tokens[i], this.options));\n        }\n      }\n\n      var fullSearcher = new Bitap(pattern, this.options);\n\n      return { tokenSearchers: tokenSearchers, fullSearcher: fullSearcher };\n    }\n  }, {\n    key: '_search',\n    value: function _search() {\n      var tokenSearchers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var fullSearcher = arguments[1];\n\n      var list = this.list;\n      var resultMap = {};\n      var results = [];\n\n      // Check the first item in the list, if it's a string, then we assume\n      // that every item in the list is also a string, and thus it's a flattened array.\n      if (typeof list[0] === 'string') {\n        // Iterate over every item\n        for (var i = 0, len = list.length; i < len; i += 1) {\n          this._analyze({\n            key: '',\n            value: list[i],\n            record: i,\n            index: i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n\n        return { weights: null, results: results };\n      }\n\n      // Otherwise, the first item is an Object (hopefully), and thus the searching\n      // is done on the values of the keys of each item.\n      var weights = {};\n      for (var _i = 0, _len = list.length; _i < _len; _i += 1) {\n        var item = list[_i];\n        // Iterate over every key\n        for (var j = 0, keysLen = this.options.keys.length; j < keysLen; j += 1) {\n          var key = this.options.keys[j];\n          if (typeof key !== 'string') {\n            weights[key.name] = {\n              weight: 1 - key.weight || 1\n            };\n            if (key.weight <= 0 || key.weight > 1) {\n              throw new Error('Key weight has to be > 0 and <= 1');\n            }\n            key = key.name;\n          } else {\n            weights[key] = {\n              weight: 1\n            };\n          }\n\n          this._analyze({\n            key: key,\n            value: this.options.getFn(item, key),\n            record: item,\n            index: _i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n\n      return { weights: weights, results: results };\n    }\n  }, {\n    key: '_analyze',\n    value: function _analyze(_ref2, _ref3) {\n      var key = _ref2.key,\n          _ref2$arrayIndex = _ref2.arrayIndex,\n          arrayIndex = _ref2$arrayIndex === undefined ? -1 : _ref2$arrayIndex,\n          value = _ref2.value,\n          record = _ref2.record,\n          index = _ref2.index;\n      var _ref3$tokenSearchers = _ref3.tokenSearchers,\n          tokenSearchers = _ref3$tokenSearchers === undefined ? [] : _ref3$tokenSearchers,\n          _ref3$fullSearcher = _ref3.fullSearcher,\n          fullSearcher = _ref3$fullSearcher === undefined ? [] : _ref3$fullSearcher,\n          _ref3$resultMap = _ref3.resultMap,\n          resultMap = _ref3$resultMap === undefined ? {} : _ref3$resultMap,\n          _ref3$results = _ref3.results,\n          results = _ref3$results === undefined ? [] : _ref3$results;\n\n      // Check if the texvaluet can be searched\n      if (value === undefined || value === null) {\n        return;\n      }\n\n      var exists = false;\n      var averageScore = -1;\n      var numTextMatches = 0;\n\n      if (typeof value === 'string') {\n        this._log('\\nKey: ' + (key === '' ? '-' : key));\n\n        var mainSearchResult = fullSearcher.search(value);\n        this._log('Full text: \"' + value + '\", score: ' + mainSearchResult.score);\n\n        if (this.options.tokenize) {\n          var words = value.split(this.options.tokenSeparator);\n          var scores = [];\n\n          for (var i = 0; i < tokenSearchers.length; i += 1) {\n            var tokenSearcher = tokenSearchers[i];\n\n            this._log('\\nPattern: \"' + tokenSearcher.pattern + '\"');\n\n            // let tokenScores = []\n            var hasMatchInText = false;\n\n            for (var j = 0; j < words.length; j += 1) {\n              var word = words[j];\n              var tokenSearchResult = tokenSearcher.search(word);\n              var obj = {};\n              if (tokenSearchResult.isMatch) {\n                obj[word] = tokenSearchResult.score;\n                exists = true;\n                hasMatchInText = true;\n                scores.push(tokenSearchResult.score);\n              } else {\n                obj[word] = 1;\n                if (!this.options.matchAllTokens) {\n                  scores.push(1);\n                }\n              }\n              this._log('Token: \"' + word + '\", score: ' + obj[word]);\n              // tokenScores.push(obj)\n            }\n\n            if (hasMatchInText) {\n              numTextMatches += 1;\n            }\n          }\n\n          averageScore = scores[0];\n          var scoresLen = scores.length;\n          for (var _i2 = 1; _i2 < scoresLen; _i2 += 1) {\n            averageScore += scores[_i2];\n          }\n          averageScore = averageScore / scoresLen;\n\n          this._log('Token score average:', averageScore);\n        }\n\n        var finalScore = mainSearchResult.score;\n        if (averageScore > -1) {\n          finalScore = (finalScore + averageScore) / 2;\n        }\n\n        this._log('Score average:', finalScore);\n\n        var checkTextMatches = this.options.tokenize && this.options.matchAllTokens ? numTextMatches >= tokenSearchers.length : true;\n\n        this._log('\\nCheck Matches: ' + checkTextMatches);\n\n        // If a match is found, add the item to <rawResults>, including its score\n        if ((exists || mainSearchResult.isMatch) && checkTextMatches) {\n          // Check if the item already exists in our results\n          var existingResult = resultMap[index];\n          if (existingResult) {\n            // Use the lowest score\n            // existingResult.score, bitapResult.score\n            existingResult.output.push({\n              key: key,\n              arrayIndex: arrayIndex,\n              value: value,\n              score: finalScore,\n              matchedIndices: mainSearchResult.matchedIndices\n            });\n          } else {\n            // Add it to the raw result list\n            resultMap[index] = {\n              item: record,\n              output: [{\n                key: key,\n                arrayIndex: arrayIndex,\n                value: value,\n                score: finalScore,\n                matchedIndices: mainSearchResult.matchedIndices\n              }]\n            };\n\n            results.push(resultMap[index]);\n          }\n        }\n      } else if (isArray(value)) {\n        for (var _i3 = 0, len = value.length; _i3 < len; _i3 += 1) {\n          this._analyze({\n            key: key,\n            arrayIndex: _i3,\n            value: value[_i3],\n            record: record,\n            index: index\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n    }\n  }, {\n    key: '_computeScore',\n    value: function _computeScore(weights, results) {\n      this._log('\\n\\nComputing score:\\n');\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var output = results[i].output;\n        var scoreLen = output.length;\n\n        var currScore = 1;\n        var bestScore = 1;\n\n        for (var j = 0; j < scoreLen; j += 1) {\n          var weight = weights ? weights[output[j].key].weight : 1;\n          var score = weight === 1 ? output[j].score : output[j].score || 0.001;\n          var nScore = score * weight;\n\n          if (weight !== 1) {\n            bestScore = Math.min(bestScore, nScore);\n          } else {\n            output[j].nScore = nScore;\n            currScore *= nScore;\n          }\n        }\n\n        results[i].score = bestScore === 1 ? currScore : bestScore;\n\n        this._log(results[i]);\n      }\n    }\n  }, {\n    key: '_sort',\n    value: function _sort(results) {\n      this._log('\\n\\nSorting....');\n      results.sort(this.options.sortFn);\n    }\n  }, {\n    key: '_format',\n    value: function _format(results) {\n      var finalOutput = [];\n\n      if (this.options.verbose) {\n        this._log('\\n\\nOutput:\\n\\n', JSON.stringify(results));\n      }\n\n      var transformers = [];\n\n      if (this.options.includeMatches) {\n        transformers.push(function (result, data) {\n          var output = result.output;\n          data.matches = [];\n\n          for (var i = 0, len = output.length; i < len; i += 1) {\n            var item = output[i];\n\n            if (item.matchedIndices.length === 0) {\n              continue;\n            }\n\n            var obj = {\n              indices: item.matchedIndices,\n              value: item.value\n            };\n            if (item.key) {\n              obj.key = item.key;\n            }\n            if (item.hasOwnProperty('arrayIndex') && item.arrayIndex > -1) {\n              obj.arrayIndex = item.arrayIndex;\n            }\n            data.matches.push(obj);\n          }\n        });\n      }\n\n      if (this.options.includeScore) {\n        transformers.push(function (result, data) {\n          data.score = result.score;\n        });\n      }\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var result = results[i];\n\n        if (this.options.id) {\n          result.item = this.options.getFn(result.item, this.options.id)[0];\n        }\n\n        if (!transformers.length) {\n          finalOutput.push(result.item);\n          continue;\n        }\n\n        var data = {\n          item: result.item\n        };\n\n        for (var j = 0, _len2 = transformers.length; j < _len2; j += 1) {\n          transformers[j](result, data);\n        }\n\n        finalOutput.push(data);\n      }\n\n      return finalOutput;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      if (this.options.verbose) {\n        var _console;\n\n        (_console = console).log.apply(_console, arguments);\n      }\n    }\n  }]);\n\n  return Fuse;\n}();\n\nmodule.exports = Fuse;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=fuse.js.map"],"sourceRoot":""}