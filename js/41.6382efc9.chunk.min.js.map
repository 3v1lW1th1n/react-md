{"version":3,"sources":["components/ExamplesPage/Example.tsx","components/ExamplesPage/ExampleTitle.tsx","components/ExamplesPage/ExamplesPage.tsx","components/ExamplesPage/index.ts","components/Markdown/Markdown.tsx","components/Markdown/MarkdownPage.tsx","components/Markdown/index.ts","components/packages/Tooltip/Examples/Examples.tsx","components/packages/Tooltip/Examples/FixingOverflowIssues/Cell.tsx","components/packages/Tooltip/Examples/FixingOverflowIssues/FixingOverflowIssues.tsx","components/packages/Tooltip/Examples/FixingOverflowIssues/index.ts","components/packages/Tooltip/Examples/MagicTooltips.tsx","components/packages/Tooltip/Examples/RelativeTooltips.tsx","components/packages/Tooltip/Examples/index.ts","utils/markdown/index.ts"],"names":["Example","_a","title","children","className","contentClassName","description","exampleGroup","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_react_md_typography__WEBPACK_IMPORTED_MODULE_2__","type","components_Markdown__WEBPACK_IMPORTED_MODULE_3__","markdown","example-group","defaultProps","__webpack_exports__","ExampleTitle","_react_md_typography__WEBPACK_IMPORTED_MODULE_1__","ExamplesPage","examples","react__WEBPACK_IMPORTED_MODULE_1__","map","example","key","_Example__WEBPACK_IMPORTED_MODULE_5__","tslib__WEBPACK_IMPORTED_MODULE_0__","_ExamplesPage__WEBPACK_IMPORTED_MODULE_0__","Markdown","_super","props","_this","call","this","updateInnerHTML","html","Object","utils_markdown__WEBPACK_IMPORTED_MODULE_3__","state","__html","setState","prevMarkdown","getDerivedStateFromProps","nextProps","prevState","prototype","render","style","classnames__WEBPACK_IMPORTED_MODULE_2___default","dangerouslySetInnerHTML","MarkdownPage","_Markdown__WEBPACK_IMPORTED_MODULE_3__","_Markdown__WEBPACK_IMPORTED_MODULE_0__","_RelativeTooltips__WEBPACK_IMPORTED_MODULE_2__","_MagicTooltips__WEBPACK_IMPORTED_MODULE_3__","_FixingOverflowIssues__WEBPACK_IMPORTED_MODULE_4__","Examples","components_ExamplesPage__WEBPACK_IMPORTED_MODULE_1__","Cell","columnIndex","rowIndex","id","tooltipId","role","aria-colcount","aria-rowcount","aria-colindex","aria-rowindex","aria-describedby","tabIndex","tagName","_react_md_tooltip__WEBPACK_IMPORTED_MODULE_2__","ROW_COUNT","COLUMN_COUNT","FixingOverflowIssues","handlePortalChange","event","checked","currentTarget","portal","cellRenderer","_Cell__WEBPACK_IMPORTED_MODULE_5__","getPosition","target","row","parseInt","getAttribute","col","handleKeyDown","handleArrowKeys","handleJumpTo","incrementX","isX","incrementY","isY","scrollToRow","scrollToColumn","preventDefault","isHome","ctrlKey","handleKeyUp","focus","column","window","requestAnimationFrame","el","document","getElementById","componentDidUpdate","prevProps","_react_md_tooltip__WEBPACK_IMPORTED_MODULE_3__","portalIntoId","undefined","onKeyDown","onKeyUp","react_virtualized__WEBPACK_IMPORTED_MODULE_2__","disableHeight","width","height","rowHeight","rowCount","columnCount","columnWidth","htmlFor","onChange","aria-hidden","_FixingOverflowIssues__WEBPACK_IMPORTED_MODULE_0__","MagicTooltips","dense","delay","hoverMode","hoverModeDelay","keyboardFocusDelay","maxHeight","maxWidth","margin","_react_md_button__WEBPACK_IMPORTED_MODULE_2__","LongTooltip","ButtonWithTooltip","tooltip","lineWrap","position","tooltipStyle","RelativeTooltips","components_ExamplesPage__WEBPACK_IMPORTED_MODULE_4__","TOP","RIGHT","BOTTOM","LEFT","_Examples__WEBPACK_IMPORTED_MODULE_0__","getLanguage","s","marked__WEBPACK_IMPORTED_MODULE_0__","renderer","highlight","code","lang","prismjs__WEBPACK_IMPORTED_MODULE_1__","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","preTransforms","postTransforms","replace","_","s1","s2","transform","transforms","options","reduce","t","markdownToHTML"],"mappings":"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","file":"js/41.6382efc9.chunk.min.js","sourcesContent":["import * as React from \"react\";\nimport cn from \"classnames\";\nimport { Text } from \"@react-md/typography\";\n\nimport Markdown from \"components/Markdown\";\n\nexport interface IExampleProps {\n  exampleGroup?: boolean;\n  title: string;\n  children?: React.ReactNode;\n  className?: string;\n  description?: string;\n  contentClassName?: string;\n}\n\nconst Example: React.SFC<IExampleProps> = ({\n  title,\n  children,\n  className,\n  contentClassName,\n  description,\n  exampleGroup,\n}) => (\n  <section className={cn(\"examples-page__example\", className)}>\n    <Text type=\"headline-4\" className=\"examples-page__example-title\">\n      {title}\n    </Text>\n    {description && <Markdown markdown={description} />}\n    <div className={cn(\"examples-page__example-content\", { \"example-group\": exampleGroup }, contentClassName)}>\n      {children}\n    </div>\n  </section>\n);\n\nExample.defaultProps = {\n  exampleGroup: true,\n};\n\nexport default Example;\n","import * as React from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nexport interface IExampleTitleProps {\n  children: React.ReactNode;\n}\n\nconst ExampleTitle: React.SFC<IExampleTitleProps> = ({ children }) => <Text type=\"headline-6\">{children}</Text>;\n\nexport default ExampleTitle;\n","import * as React from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nimport Markdown from \"components/Markdown\";\n\nimport \"./examples-page.scss\";\nimport { default as Example, IExampleProps } from \"./Example\";\n\nexport type ExampleList = IExampleProps[];\n\nexport interface IExamplesPageProps {\n  title: string;\n  description?: string;\n  examples: ExampleList;\n}\n\nconst ExamplesPage: React.SFC<IExamplesPageProps> = ({ title, description, examples }) => (\n  <section className=\"examples-page\">\n    <header className=\"rmd-text-container\">\n      <Text type=\"headline-2\" className=\"examples-page__title\">\n        {title}\n      </Text>\n      {description && <Markdown className=\"rmd-text-container\" markdown={description} />}\n    </header>\n    {examples.map((example, key) => <Example key={key} {...example} />)}\n  </section>\n);\n\nexport default ExamplesPage;\n","import ExamplesPage from \"./ExamplesPage\";\n\nexport default ExamplesPage;\n\nexport { default as ExamplesPage } from \"./ExamplesPage\"\nexport * from \"./ExamplesPage\"\nexport { default as ExampleTitle } from \"./ExampleTitle\";\n","import * as React from \"react\";\nimport cn from \"classnames\";\n\nimport { markdownToHTML } from \"utils/markdown\";\n\nimport \"./markdown.scss\";\n\nexport interface IMarkdownProps {\n  style?: React.CSSProperties;\n  className?: string;\n  markdown: string;\n}\n\ninterface IInnerHTML {\n  __html: string;\n}\n\nexport interface IMarkdownState {\n  html: IInnerHTML;\n  prevMarkdown: string;\n}\n\nexport default class Markdown extends React.Component<IMarkdownProps, IMarkdownState> {\n  public static getDerivedStateFromProps(nextProps: IMarkdownProps, prevState: IMarkdownState) {\n    const { markdown } = nextProps;\n    if (prevState.prevMarkdown !== markdown) {\n      return {\n        html: { __html: markdownToHTML(nextProps.markdown) },\n        prevMarkdown: markdown,\n      }\n    }\n\n    return null;\n  };\n\n  constructor(props: IMarkdownProps) {\n    super(props);\n\n    this.state = {\n      html: { __html: markdownToHTML(props.markdown) },\n      prevMarkdown: props.markdown,\n    };\n  }\n\n  public render() {\n    const { style, className, markdown } = this.props;\n    const { html } = this.state;\n    if (!html.__html || !markdown) {\n      return null;\n    }\n\n    return <div style={style} className={cn(\"markdown-container\", className)} dangerouslySetInnerHTML={html} />;\n  }\n\n  private updateInnerHTML = () => {\n    const { markdown } = this.props;\n    if (!markdown) {\n      return;\n    }\n\n    const html = markdownToHTML(markdown);\n    if (this.state.html.__html !== html) {\n      this.setState({ html: { __html: html } });\n    }\n  };\n}\n","import * as React from \"react\";\nimport cn from \"classnames\";\n\nimport Markdown from \"./Markdown\";\n\nexport interface IMarkdownPageProps {\n  style?: React.CSSProperties;\n  className?: string;\n  markdown: string;\n}\n\nconst MarkdownPage: React.SFC<IMarkdownPageProps> = ({ className, ...props }) => (\n  <Markdown {...props} className={cn(\"markdown-page rmd-text-container\", className)} />\n);\n\nexport default MarkdownPage;\n","import Markdown from \"./Markdown\";\n\nexport default Markdown;\nexport { Markdown };\n\nexport { default as MarkdownPage } from \"./MarkdownPage\";\n","import * as React from \"react\";\n\nimport { default as ExamplesPage, ExampleList } from \"components/ExamplesPage\";\n\nimport RelativeTooltips from \"./RelativeTooltips\";\nimport MagicTooltips from \"./MagicTooltips\";\nimport FixingOverflowIssues from \"./FixingOverflowIssues\";\n\nconst examples: ExampleList = [\n  {\n    title: \"Relative Tooltips\",\n    children: <RelativeTooltips />,\n  },\n  {\n    title: \"Magic Tooltips rendering within viewport\",\n    description: `\nThe \\`MagicTooltip\\` component is used to help solve three main problems:\n- \"automagically\" determining the best position on the page to render the tooltip so it will always\nbe rendered within the viewport.\n- needing to display a tooltip without requiring \\`position: relative\\` on its container element\n- needing to display a tooltip when a parent node has overflow set which _might_ cause the tooltip\nto not appear if it is near the edges of the parent node.\n  `,\n    children: <MagicTooltips />,\n  },\n  {\n    title: \"Magic Tooltips fixing overflow issues\",\n    children: <FixingOverflowIssues />,\n  },\n  {\n    title: \"Magic Tooltips hover mode\",\n    description: `\nAnother feature of the \\`MagicTooltip\\` is that it will enable a \"hover mode\" by default. Since tooltips\nnormally require hovering \\`0.5s\\` before being visible, this delay will have to be repeated for each\ndifferent tooltip the user attempts to view. The \"hover mode\" feature will remove this required delay\nonce a tooltip has become visible until the user no longer is hovering over a tooltip area for \\`1s\\`.\n    `,\n    children: null,\n  }\n];\n\nconst Examples = () => <ExamplesPage title=\"Tooltip\" examples={examples} />;\n\nexport default Examples;\n","import * as React from \"react\";\nimport cn from \"classnames\";\nimport { GridCellProps } from \"react-virtualized\";\nimport { Text } from \"@react-md/typography\";\nimport { MagicTooltip } from \"@react-md/tooltip\";\n\nconst Cell: React.SFC<GridCellProps> = ({ style, columnIndex, rowIndex }) => {\n  const id = `cell-${rowIndex}-${columnIndex}`;\n  const tooltipId = `cell-tooltip-${rowIndex}-${columnIndex}`;\n  const children = `Cell ${rowIndex}-${columnIndex}`;\n  return (\n    <div\n      id={id}\n      style={style}\n      role=\"gridcell\"\n      aria-colcount={100}\n      aria-rowcount={100}\n      aria-colindex={columnIndex + 1}\n      aria-rowindex={rowIndex + 1}\n      aria-describedby={tooltipId}\n      className=\"tooltip-overflow-example__cell\"\n      tabIndex={-1}\n    >\n      <Text type=\"body-2\" aria-describedby={tooltipId} tagName=\"div\">\n        {children}\n      </Text>\n      <MagicTooltip id={tooltipId} key={tooltipId}>{`Tooltip for ${children}`}</MagicTooltip>\n    </div>\n  );\n};\n\nexport default Cell;\n","import * as React from \"react\";\nimport { Grid, GridCellProps, AutoSizer } from \"react-virtualized\";\nimport { MagicTooltipProvider } from \"@react-md/tooltip\";\n\nimport \"./fixing-overflow-issues.scss\";\nimport Cell from \"./Cell\";\n\nexport interface IFixingOverflowIssuesProps {}\n\nexport interface IFixingOverflowIssuesState {\n  portal: boolean;\n  scrollToRow: number;\n  scrollToColumn: number;\n}\n\nconst ROW_COUNT = 100;\nconst COLUMN_COUNT = 100;\n\nexport default class FixingOverflowIssues extends React.Component<\n  IFixingOverflowIssuesProps,\n  IFixingOverflowIssuesState\n> {\n  constructor(props: IFixingOverflowIssuesProps) {\n    super(props);\n\n    this.state = { portal: false, scrollToRow: 0, scrollToColumn: 0 };\n  }\n\n  public componentDidUpdate(prevProps: IFixingOverflowIssuesProps, prevState: IFixingOverflowIssuesState) {\n    const { scrollToRow, scrollToColumn } = this.state;\n    if (scrollToRow !== prevState.scrollToRow || scrollToColumn !== prevState.scrollToColumn) {\n      this.focus(scrollToRow, scrollToColumn);\n    }\n  }\n\n  public render() {\n    const { portal, scrollToRow, scrollToColumn } = this.state;\n    return (\n      <React.Fragment>\n        <MagicTooltipProvider portalIntoId={portal ? \"tooltip-overflow-portal\" : undefined}>\n          <div className=\"tooltip-overflow-example\" onKeyDown={this.handleKeyDown} onKeyUp={this.handleKeyUp}>\n            <AutoSizer disableHeight>\n              {({ width }) => (\n                <Grid\n                  height={300}\n                  width={width}\n                  rowHeight={48}\n                  rowCount={ROW_COUNT}\n                  columnCount={COLUMN_COUNT}\n                  columnWidth={100}\n                  cellRenderer={this.cellRenderer}\n                  scrollToRow={scrollToRow}\n                  scrollToColumn={scrollToColumn}\n                />\n              )}\n            </AutoSizer>\n          </div>\n        </MagicTooltipProvider>\n        <div style={{ width: \"100%\" }}>\n          <label htmlFor=\"tooltip-overflow-portal-enable\">Enable portal fix?</label>\n          <input\n            id=\"tooltip-overflow-portal-enable\"\n            type=\"checkbox\"\n            checked={portal}\n            onChange={this.handlePortalChange}\n          />\n        </div>\n        <span id=\"tooltip-overflow-portal\" aria-hidden=\"true\" />\n      </React.Fragment>\n    );\n  }\n\n  private handlePortalChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = event.currentTarget;\n    if (this.state.portal !== checked) {\n      this.setState({ portal: checked });\n    }\n  };\n\n  private cellRenderer = (props: GridCellProps) => <Cell {...props} />;\n\n  private getPosition = (target: HTMLDivElement) => {\n    const row = parseInt(target.getAttribute(\"aria-rowindex\") || \"0\", 10) - 1;\n    const col = parseInt(target.getAttribute(\"aria-colindex\") || \"0\", 10) - 1;\n    return { row, col };\n  };\n\n  private handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    switch (event.key) {\n      case \"ArrowDown\":\n      case \"ArrowUp\":\n      case \"ArrowLeft\":\n      case \"ArrowRight\":\n        this.handleArrowKeys(event);\n        break;\n      case \"Home\":\n      case \"End\":\n        this.handleJumpTo(event);\n        break;\n      default:\n    }\n  };\n\n  private handleArrowKeys = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const { key } = event;\n    const incrementX = key === \"ArrowRight\";\n    const isX = incrementX || key === \"ArrowLeft\";\n    const incrementY = key === \"ArrowDown\";\n    const isY = incrementY || key === \"ArrowUp\";\n\n    let { row, col } = this.getPosition(event.target as HTMLDivElement);\n    if (isX) {\n      col += incrementX ? 1 : -1;\n    } else if (isY) {\n      row += incrementY ? 1 : -1;\n    }\n\n    if (row < 0 || col < 0 || row >= ROW_COUNT || col >= COLUMN_COUNT) {\n      return;\n    }\n\n    this.setState({ scrollToRow: row, scrollToColumn: col });\n  };\n\n  private handleJumpTo = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    const isHome = event.key === \"Home\";\n    if (event.ctrlKey) {\n      this.setState({\n        scrollToRow: isHome ? 0 : ROW_COUNT - 1,\n        scrollToColumn: isHome ? 0 : COLUMN_COUNT - 1,\n      });\n    } else {\n      this.setState({\n        scrollToColumn: isHome ? 0 : COLUMN_COUNT - 1,\n      });\n    }\n  };\n\n  private handleKeyUp = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === \"Tab\") {\n      this.focus(this.state.scrollToRow, this.state.scrollToColumn);\n    }\n  };\n\n  private focus = (row: number, column: number) => {\n    window.requestAnimationFrame(() => {\n      const el = document.getElementById(`cell-${row}-${column}`) as HTMLDivElement | null;\n      if (el) {\n        el.focus();\n      }\n    });\n  };\n}\n","import FixingOverflowIssues from \"./FixingOverflowIssues\";\n\nexport default FixingOverflowIssues;\n","import * as React from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { MagicTooltipProvider, MagicTooltip } from \"@react-md/tooltip\";\n\nexport interface IMagicTooltipsProps {}\n\nexport interface IMagicTooltipsState {\n  dense: boolean;\n  delay: number;\n  hoverMode: boolean;\n  hoverModeDelay: number;\n  keyboardFocusDelay: number;\n}\n\nexport default class MagicTooltips extends React.Component<IMagicTooltipsProps, IMagicTooltipsState> {\n  constructor(props: IMagicTooltipsProps) {\n    super(props);\n\n    this.state = {\n      dense: false,\n      delay: 300,\n      hoverMode: true,\n      hoverModeDelay: 1000,\n      keyboardFocusDelay: 300,\n    };\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <div id=\"magic-tooltip-example-portal\" />\n        <MagicTooltipProvider {...this.state}>\n          <div style={{ maxHeight: 400, maxWidth: 400, width: \"100%\", margin: \"1rem auto\" }}>\n            <Button\n              id=\"magic-tooltip-button-1\"\n              aria-describedby=\"magic-tooltip-button-1-tooltip\"\n              className=\"example-group__example\"\n            >\n              Button\n              <MagicTooltip id=\"magic-tooltip-button-1-tooltip\">This is a magic tooltip!</MagicTooltip>\n            </Button>\n          </div>\n        </MagicTooltipProvider>\n      </React.Fragment>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Button, IButtonProps } from \"@react-md/button\";\nimport { RelativeTooltip, ITooltipOptions, TooltipPosition } from \"@react-md/tooltip\";\n\nimport { ExampleTitle } from \"components/ExamplesPage\";\n\ninterface IButtonWithTooltipProps extends IButtonProps, ITooltipOptions {\n  id: string;\n  tooltip: React.ReactNode;\n  tooltipStyle?: React.CSSProperties;\n}\n\nconst LongTooltip: React.SFC<{}> = () => (\n  <span>\n    This is going to be a long tooltip that will eventually line-wrap. To get this to work, you should also apply a\n    manual <code>width</code> to the tooltip, otherwise it will start line-wrapping based on the width of its container\n    element.\n  </span>\n);\n\nconst ButtonWithTooltip: React.SFC<IButtonWithTooltipProps> = ({\n  id,\n  tooltip,\n  children,\n  dense,\n  lineWrap,\n  position,\n  tooltipStyle,\n  ...props\n}) => {\n  const tooltipId = `${id}-tooltip`;\n\n  return (\n    <Button id={id} aria-describedby={tooltipId} {...props}>\n      {children}\n      <RelativeTooltip id={tooltipId} dense={dense} lineWrap={lineWrap} position={position} style={tooltipStyle}>\n        {tooltip}\n      </RelativeTooltip>\n    </Button>\n  );\n};\n\nconst RelativeTooltips = () => (\n  <React.Fragment>\n    <ExampleTitle>Tooltip Positions</ExampleTitle>\n    <ButtonWithTooltip\n      id=\"button-1\"\n      tooltip=\"Tooltip Top\"\n      position={TooltipPosition.TOP}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ButtonWithTooltip\n      id=\"button-2\"\n      tooltip=\"Tooltip Right\"\n      position={TooltipPosition.RIGHT}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ButtonWithTooltip\n      id=\"button-3\"\n      tooltip=\"Tooltip Bottom\"\n      position={TooltipPosition.BOTTOM}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ButtonWithTooltip\n      id=\"button-4\"\n      tooltip=\"Tooltip Left\"\n      position={TooltipPosition.LEFT}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ExampleTitle>Tooltip dense</ExampleTitle>\n    <ButtonWithTooltip\n      id=\"button-5\"\n      tooltip=\"Tooltip Top\"\n      position={TooltipPosition.TOP}\n      dense={true}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ButtonWithTooltip\n      id=\"button-6\"\n      tooltip=\"Tooltip Right\"\n      position={TooltipPosition.RIGHT}\n      dense={true}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ButtonWithTooltip\n      id=\"button-7\"\n      tooltip=\"Tooltip Bottom\"\n      position={TooltipPosition.BOTTOM}\n      dense={true}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ButtonWithTooltip\n      id=\"button-8\"\n      tooltip=\"Tooltip Left\"\n      position={TooltipPosition.LEFT}\n      dense={true}\n      className=\"example-group__example\"\n    >\n      Button\n    </ButtonWithTooltip>\n    <ExampleTitle>Tooltip with line wrapping</ExampleTitle>\n    <ButtonWithTooltip\n      id=\"button-9\"\n      tooltip={<LongTooltip />}\n      dense={true}\n      lineWrap={true}\n      className=\"example-group__example\"\n    >\n      No Additional Styles\n    </ButtonWithTooltip>\n    <ButtonWithTooltip\n      id=\"button-10\"\n      tooltip={<LongTooltip />}\n      dense={true}\n      lineWrap={true}\n      className=\"example-group__example\"\n      tooltipStyle={{ width: 400 }}\n    >\n      With Additional Styles\n    </ButtonWithTooltip>\n  </React.Fragment>\n);\n\nexport default RelativeTooltips;\n","import Examples from \"./Examples\";\n\nexport default Examples;\n","import * as marked from \"marked\";\nimport * as Prism from \"prismjs\";\n\nimport \"prismjs/components/prism-bash\";\nimport \"prismjs/components/prism-css-extras\";\nimport \"prismjs/components/prism-scss\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-git\";\n\nexport function getLanguage(s: string) {\n  if (!s) {\n    return \"markup\";\n  } else if (s === \"tsx\") {\n    return \"typescript\";\n  } else if (s === \"sh\") {\n    return \"bash\";\n  } else if (s === \"diff\") {\n    return \"git\";\n  }\n\n  return s;\n}\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  highlight: (code, lang) => Prism.highlight(code, Prism.languages[getLanguage(lang)]),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n});\n\nexport interface IMarkdownOptions {\n  showToolbar?: boolean;\n  showLineNumbers?: boolean;\n}\n\nexport type MarkdownTransformation = (markdown: string, options?: IMarkdownOptions) => string;\nexport type MarkdownTransformationList = MarkdownTransformation[];\n\nconst preTransforms: MarkdownTransformationList = [];\nconst postTransforms: MarkdownTransformationList = [\n  markdown => markdown.replace(/<a href/g, '<a class=\"rmd-link\" href'),\n  markdown =>\n    markdown.replace(\n      /(<h2 id=\"table-of-contents\")(>Table of Contents<\\/h2>\\r?\\n<ul)/,\n      (_, s1, s2) => `${s1} class=\"markdown-toc\"${s2} class=\"markdown-toc__list\"`\n    ),\n  markdown =>\n    markdown.replace(/yarn add/g, '<span class=\"token function\">yarn</span> <span class=\"token function\">add</span>'),\n];\n\nexport function transform(markdown: string, transforms: MarkdownTransformation[], options?: IMarkdownOptions) {\n  return transforms.reduce((s, t) => t(s, options), markdown);\n}\n\nexport function markdownToHTML(markdown: string, options?: IMarkdownOptions) {\n  return transform(marked.parse(transform(markdown, preTransforms, options)), postTransforms, options);\n}\n"],"sourceRoot":""}