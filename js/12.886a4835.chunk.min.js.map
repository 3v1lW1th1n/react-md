{"version":3,"sources":["../../link/es/Link.js","../../link/es/index.js","components/ExamplesPage/Example.tsx","components/ExamplesPage/ExampleTitle.tsx","components/ExamplesPage/ExamplesPage.tsx","components/ExamplesPage/index.ts","components/Markdown/Markdown.tsx","components/Markdown/MarkdownPage.tsx","components/Markdown/index.ts","components/packages/Link/Examples/Examples.tsx","components/packages/Link/Examples/LinkTarget.tsx","components/packages/Link/Examples/SimpleLinks.tsx","components/packages/Link/Examples/index.ts","utils/markdown/index.ts"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","Link_Link","react","[object Object]","_a","this","props","className","propClassName","component","href","propHref","children","rel","propRel","flexCentered","preventMaliciousTarget","target","undefined","classnames_default","rmd-link--flex-centered","assign","propTypes","prop_types","defaultProps","__webpack_require__","d","__webpack_exports__","Example","title","contentClassName","description","exampleGroup","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_react_md_typography__WEBPACK_IMPORTED_MODULE_2__","type","components_Markdown__WEBPACK_IMPORTED_MODULE_3__","markdown","example-group","ExampleTitle","_react_md_typography__WEBPACK_IMPORTED_MODULE_1__","ExamplesPage","examples","react__WEBPACK_IMPORTED_MODULE_1__","map","example","key","_Example__WEBPACK_IMPORTED_MODULE_5__","tslib__WEBPACK_IMPORTED_MODULE_0__","_ExamplesPage__WEBPACK_IMPORTED_MODULE_0__","Markdown","_super","_this","updateLinks","history","container","current","link","test","onclick","event","preventDefault","push","replace","window","location","origin","_i","links_1","Array","from","querySelectorAll","state","html","__html","utils_markdown__WEBPACK_IMPORTED_MODULE_4__","prevMarkdown","getDerivedStateFromProps","nextProps","prevState","componentDidMount","componentDidUpdate","prevProps","render","style","ref","classnames__WEBPACK_IMPORTED_MODULE_2___default","dangerouslySetInnerHTML","react_router__WEBPACK_IMPORTED_MODULE_3__","MarkdownPage","_Markdown__WEBPACK_IMPORTED_MODULE_3__","_Markdown__WEBPACK_IMPORTED_MODULE_0__","_SimpleLinks__WEBPACK_IMPORTED_MODULE_2__","_LinkTarget__WEBPACK_IMPORTED_MODULE_3__","Examples","components_ExamplesPage__WEBPACK_IMPORTED_MODULE_1__","LinkTarget","_react_md_link__WEBPACK_IMPORTED_MODULE_2__","TwitterIcon","_react_md_icon__WEBPACK_IMPORTED_MODULE_3__","fill","viewBox","role","SimpleLinks","icon","iconClassName","_Examples__WEBPACK_IMPORTED_MODULE_0__","getLanguage","marked__WEBPACK_IMPORTED_MODULE_0__","renderer","highlight","code","lang","prismjs__WEBPACK_IMPORTED_MODULE_1__","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","headerIds","preTransforms","postTransforms","_","s1","s2","transform","transforms","options","reduce","markdownToHTML"],"mappings":"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","file":"js/12.886a4835.chunk.min.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n};\r\nimport * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport cn from \"classnames\";\r\n/**\r\n * The `Link` component is used to render links within your app with a basic styles applied and\r\n * some additional \"security\" built-in if using the `rel=\"_blank\"`. This can be used with a browser\r\n * routing library like `react-router` or `reach-router` by providing the `Link` as the `linkComponent`\r\n * prop.\r\n */\r\nexport default class Link extends React.Component {\r\n    render() {\r\n        const _a = this.props, { className: propClassName, component, href: propHref, children, rel: propRel, flexCentered, preventMaliciousTarget } = _a, props = __rest(_a, [\"className\", \"component\", \"href\", \"children\", \"rel\", \"flexCentered\", \"preventMaliciousTarget\"]);\r\n        const { target } = props;\r\n        const href = propHref === \"\" ? undefined : propHref;\r\n        const className = cn(\"rmd-link\", {\r\n            \"rmd-link--flex-centered\": flexCentered,\r\n        }, propClassName);\r\n        let rel = propRel;\r\n        if (typeof rel !== \"string\" && target === \"_blank\") {\r\n            rel = \"noopener noreferrer\";\r\n        }\r\n        if (component) {\r\n            return React.createElement(component, Object.assign({}, props, { rel, href, className }), children);\r\n        }\r\n        return (React.createElement(\"a\", Object.assign({ className: className }, props, { href: href, rel: rel }), children));\r\n    }\r\n}\r\nLink.propTypes = {\r\n    className: PropTypes.string,\r\n    href: PropTypes.string,\r\n    component: PropTypes.func,\r\n    target: PropTypes.string,\r\n    rel: PropTypes.string,\r\n    preventMaliciousTarget: PropTypes.bool,\r\n    flexCentered: PropTypes.bool,\r\n};\r\nLink.defaultProps = {\r\n    preventMaliciousTarget: true,\r\n    flexCentered: false,\r\n};\r\n//# sourceMappingURL=Link.js.map","export { default as Link } from \"./Link\";\r\nexport * from \"./Link\";\r\n//# sourceMappingURL=index.js.map","import * as React from \"react\";\r\nimport cn from \"classnames\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport Markdown from \"components/Markdown\";\r\n\r\nexport interface IExampleProps {\r\n  exampleGroup?: boolean;\r\n  title: string;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  description?: string;\r\n  contentClassName?: string;\r\n}\r\n\r\nconst Example: React.SFC<IExampleProps> = ({\r\n  title,\r\n  children,\r\n  className,\r\n  contentClassName,\r\n  description,\r\n  exampleGroup,\r\n}) => (\r\n  <section className={cn(\"examples-page__example\", className)}>\r\n    <Text type=\"headline-4\" className=\"examples-page__example-title\">\r\n      {title}\r\n    </Text>\r\n    {description && <Markdown markdown={description} />}\r\n    <div\r\n      className={cn(\r\n        \"examples-page__example-content\",\r\n        { \"example-group\": exampleGroup },\r\n        contentClassName\r\n      )}\r\n    >\r\n      {children}\r\n    </div>\r\n  </section>\r\n);\r\n\r\nExample.defaultProps = {\r\n  exampleGroup: true,\r\n};\r\n\r\nexport default Example;\r\n","import * as React from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport interface IExampleTitleProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ExampleTitle: React.SFC<IExampleTitleProps> = ({ children }) => (\r\n  <Text type=\"headline-6\">{children}</Text>\r\n);\r\n\r\nexport default ExampleTitle;\r\n","import * as React from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport Markdown from \"components/Markdown\";\r\n\r\nimport \"./examples-page.scss\";\r\nimport { default as Example, IExampleProps } from \"./Example\";\r\n\r\nexport type ExampleList = IExampleProps[];\r\n\r\nexport interface IExamplesPageProps {\r\n  title: string;\r\n  description?: string;\r\n  examples: ExampleList;\r\n}\r\n\r\nconst ExamplesPage: React.SFC<IExamplesPageProps> = ({ title, description, examples }) => (\r\n  <section className=\"examples-page\">\r\n    <header className=\"rmd-text-container\">\r\n      <Text type=\"headline-2\" className=\"examples-page__title\">\r\n        {title}\r\n      </Text>\r\n    </header>\r\n    {description && <Markdown markdown={description} className=\"rmd-text-container\" />}\r\n    {examples.map((example, key) => (\r\n      <Example key={key} {...example} />\r\n    ))}\r\n  </section>\r\n);\r\n\r\nexport default ExamplesPage;\r\n","import ExamplesPage from \"./ExamplesPage\";\r\n\r\nexport default ExamplesPage;\r\n\r\nexport { default as ExamplesPage } from \"./ExamplesPage\";\r\nexport * from \"./ExamplesPage\";\r\nexport { default as ExampleTitle } from \"./ExampleTitle\";\r\n","import * as React from \"react\";\r\nimport cn from \"classnames\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\n\r\nimport { markdownToHTML } from \"utils/markdown\";\r\n\r\nimport \"./markdown.scss\";\r\n\r\nexport interface IMarkdownProps extends RouteComponentProps<any> {\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  markdown: string;\r\n}\r\n\r\ninterface IInnerHTML {\r\n  __html: string;\r\n}\r\n\r\nexport interface IMarkdownState {\r\n  html: IInnerHTML;\r\n  prevMarkdown: string;\r\n}\r\n\r\nclass Markdown extends React.Component<IMarkdownProps, IMarkdownState> {\r\n  public static getDerivedStateFromProps(nextProps: IMarkdownProps, prevState: IMarkdownState) {\r\n    const { markdown } = nextProps;\r\n    if (prevState.prevMarkdown !== markdown) {\r\n      return {\r\n        html: { __html: markdownToHTML(nextProps.markdown) },\r\n        prevMarkdown: markdown,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private container: React.RefObject<HTMLDivElement>;\r\n  constructor(props: IMarkdownProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      html: { __html: markdownToHTML(props.markdown) },\r\n      prevMarkdown: props.markdown,\r\n    };\r\n\r\n    this.container = React.createRef();\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.updateLinks();\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IMarkdownProps, prevState: IMarkdownState) {\r\n    if (this.state.html !== prevState.html) {\r\n      this.updateLinks();\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { style, className, markdown } = this.props;\r\n    const { html } = this.state;\r\n    if (!html.__html || !markdown) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={this.container}\r\n        style={style}\r\n        className={cn(\"markdown-container\", className)}\r\n        dangerouslySetInnerHTML={html}\r\n      />\r\n    );\r\n  }\r\n\r\n  private updateLinks = () => {\r\n    const { history } = this.props;\r\n    if (!this.container.current) {\r\n      return;\r\n    }\r\n\r\n    const links = Array.from(this.container.current.querySelectorAll(\".rmd-link\") as NodeListOf<\r\n      HTMLAnchorElement\r\n    >);\r\n    for (const link of links) {\r\n      if (/^https?:\\/\\/(localhost|react-md|mlaursen\\.github\\.io\\/react-md\\/)/.test(link.href)) {\r\n        // update internal links to use browser history instead of native behavior\r\n        link.onclick = function handleClick(event: MouseEvent) {\r\n          event.preventDefault();\r\n          history.push(link.href.replace(window.location.origin, \"\"));\r\n        };\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default withRouter(Markdown);\r\n","import * as React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport Markdown from \"./Markdown\";\r\n\r\nexport interface IMarkdownPageProps {\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  markdown: string;\r\n}\r\n\r\nconst MarkdownPage: React.SFC<IMarkdownPageProps> = ({ className, ...props }) => (\r\n  <Markdown {...props} className={cn(\"markdown-page rmd-text-container\", className)} />\r\n);\r\n\r\nexport default MarkdownPage;\r\n","import Markdown from \"./Markdown\";\r\n\r\nexport default Markdown;\r\nexport { Markdown };\r\n\r\nexport { default as MarkdownPage } from \"./MarkdownPage\";\r\n","import * as React from \"react\";\r\n\r\nimport { default as ExamplesPage, ExampleList } from \"components/ExamplesPage\";\r\n\r\nimport SimpleLinks from \"./SimpleLinks\";\r\nimport LinkTarget from \"./LinkTarget\";\r\n\r\nconst examples: ExampleList = [\r\n  {\r\n    title: \"Simple Links\",\r\n    children: <SimpleLinks />,\r\n  },\r\n  {\r\n    title: \"Link Target\",\r\n    children: <LinkTarget />,\r\n  },\r\n];\r\n\r\nconst Examples = () => <ExamplesPage title=\"Link\" examples={examples} />;\r\n\r\nexport default Examples;\r\n","import * as React from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\nimport { Link } from \"@react-md/link\";\r\n\r\nconst LinkTarget = () => (\r\n  <Text type=\"body-2\">\r\n    This link to{\" \"}\r\n    <Link href=\"https://google.com\" target=\"_blank\">\r\n      google.com\r\n    </Link>{\" \"}\r\n    will be updated to prevent malicious scripts from Google, while this link to{\" \"}\r\n    <Link href=\"https://www.w3.org/\" target=\"_blank\" preventMaliciousTarget={false}>\r\n      w3.org\r\n    </Link>{\" \"}\r\n    will not.\r\n  </Text>\r\n);\r\n\r\nexport default LinkTarget;\r\n","/* tslint:disable:max-line-length */\r\nimport * as React from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\nimport { Link } from \"@react-md/link\";\r\nimport { FontIcon, SVGIcon, TextIconSpacing } from \"@react-md/icon\";\r\n\r\nconst TwitterIcon: React.SFC<{ className?: string }> = ({ className }) => (\r\n  <SVGIcon\r\n    style={{ fill: \"#1DA1F2\" }}\r\n    viewBox=\"0 0 400 400\"\r\n    className={className}\r\n    role=\"presentation\"\r\n  >\r\n    <path d=\"M400,200c0,110.5-89.5,200-200,200S0,310.5,0,200S89.5,0,200,0S400,89.5,400,200z M163.4,305.5 c88.7,0,137.2-73.5,137.2-137.2c0-2.1,0-4.2-0.1-6.2c9.4-6.8,17.6-15.3,24.1-25c-8.6,3.8-17.9,6.4-27.7,7.6 c10-6,17.6-15.4,21.2-26.7c-9.3,5.5-19.6,9.5-30.6,11.7c-8.8-9.4-21.3-15.2-35.2-15.2c-26.6,0-48.2,21.6-48.2,48.2 c0,3.8,0.4,7.5,1.3,11c-40.1-2-75.6-21.2-99.4-50.4c-4.1,7.1-6.5,15.4-6.5,24.2c0,16.7,8.5,31.5,21.5,40.1c-7.9-0.2-15.3-2.4-21.8-6 c0,0.2,0,0.4,0,0.6c0,23.4,16.6,42.8,38.7,47.3c-4,1.1-8.3,1.7-12.7,1.7c-3.1,0-6.1-0.3-9.1-0.9c6.1,19.2,23.9,33.1,45,33.5 c-16.5,12.9-37.3,20.6-59.9,20.6c-3.9,0-7.7-0.2-11.5-0.7C110.8,297.5,136.2,305.5,163.4,305.5\" />\r\n  </SVGIcon>\r\n);\r\n\r\nconst SimpleLinks: React.SFC<{}> = () => (\r\n  <React.Fragment>\r\n    <Text type=\"headline-6\">Direct links</Text>\r\n    <Link className=\"example-group__example\" href=\"https://google.com\">\r\n      google.com\r\n    </Link>\r\n    <Link className=\"example-group__example\" href=\"https://www.w3.org/\">\r\n      w3.org\r\n    </Link>\r\n    <Text type=\"headline-6\">Link with Icons</Text>\r\n    <Link className=\"example-group__example\" href=\"https://github.com\" flexCentered={true}>\r\n      <TextIconSpacing icon={<FontIcon iconClassName=\"fa fa-github\" role=\"presentation\" />}>\r\n        GitHub\r\n      </TextIconSpacing>\r\n    </Link>\r\n    <Link className=\"example-group__example\" href=\"https://twitter.com\" flexCentered={true}>\r\n      <TextIconSpacing icon={<TwitterIcon />}>twitter</TextIconSpacing>\r\n    </Link>\r\n    <Text type=\"headline-6\">Disabled Link</Text>\r\n    <Link className=\"example-group__example\" href=\"\">\r\n      Disabled link\r\n    </Link>\r\n    <Text type=\"headline-6\">In a paragraph</Text>\r\n    <Text type=\"body-2\">\r\n      This example shows how you can create a link within any text. The <code>Text</code> component\r\n      is not required, but it helps add default typography styles when needed. You can read more\r\n      about typography from the material design website's{\" \"}\r\n      <Link href=\"https://material.io/design/typography/understanding-typography.html\">\r\n        understanding typography\r\n      </Link>{\" \"}\r\n      page.\r\n    </Text>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default SimpleLinks;\r\n","import Examples from \"./Examples\";\r\n\r\nexport default Examples;\r\n","import * as marked from \"marked\";\r\nimport * as Prism from \"prismjs\";\r\n\r\nimport \"prismjs/components/prism-bash\";\r\nimport \"prismjs/components/prism-css-extras\";\r\nimport \"prismjs/components/prism-scss\";\r\nimport \"prismjs/components/prism-jsx\";\r\nimport \"prismjs/components/prism-typescript\";\r\nimport \"prismjs/components/prism-git\";\r\n\r\nexport function getLanguage(s: string) {\r\n  if (!s) {\r\n    return \"markup\";\r\n  } else if (s === \"tsx\") {\r\n    return \"typescript\";\r\n  } else if (s === \"sh\") {\r\n    return \"bash\";\r\n  } else if (s === \"diff\") {\r\n    return \"git\";\r\n  }\r\n\r\n  return s;\r\n}\r\n\r\nmarked.setOptions({\r\n  renderer: new marked.Renderer(),\r\n  highlight: (code, lang) => Prism.highlight(code, Prism.languages[getLanguage(lang)]),\r\n  gfm: true,\r\n  tables: true,\r\n  breaks: false,\r\n  pedantic: false,\r\n  sanitize: false,\r\n  smartLists: true,\r\n  smartypants: false,\r\n  headerIds: true,\r\n});\r\n\r\nexport interface IMarkdownOptions {\r\n  showToolbar?: boolean;\r\n  showLineNumbers?: boolean;\r\n}\r\n\r\nexport type MarkdownTransformation = (markdown: string, options?: IMarkdownOptions) => string;\r\nexport type MarkdownTransformationList = MarkdownTransformation[];\r\n\r\nconst preTransforms: MarkdownTransformationList = [];\r\nconst postTransforms: MarkdownTransformationList = [\r\n  markdown => markdown.replace(/<a href/g, '<a class=\"rmd-link\" href'),\r\n  markdown =>\r\n    markdown.replace(\r\n      /(<h2 id=\"table-of-contents\")(>Table of Contents<\\/h2>\\r?\\n<ul)/,\r\n      (_, s1, s2) => `${s1} class=\"markdown-toc\"${s2} class=\"markdown-toc__list\"`\r\n    ),\r\n  markdown =>\r\n    markdown.replace(\r\n      /yarn add/g,\r\n      '<span class=\"token function\">yarn</span> <span class=\"token function\">add</span>'\r\n    ),\r\n];\r\n\r\nexport function transform(\r\n  markdown: string,\r\n  transforms: MarkdownTransformation[],\r\n  options?: IMarkdownOptions\r\n) {\r\n  return transforms.reduce((s, t) => t(s, options), markdown);\r\n}\r\n\r\nexport function markdownToHTML(markdown: string, options?: IMarkdownOptions) {\r\n  return transform(\r\n    marked.parse(transform(markdown, preTransforms, options)),\r\n    postTransforms,\r\n    options\r\n  );\r\n}\r\n"],"sourceRoot":""}