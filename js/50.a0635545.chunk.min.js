(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{"./src/components/packages/TreeView/TreeViewSassDoc.tsx":function(e,t,i){"use strict";i.r(t),function(e){var r,n=i("./node_modules/react/index.js"),s=i("./src/components/PackageSassDoc/index.ts");(r=i("./node_modules/react-hot-loader/index.js").enterModule)&&r(e);var a=i("./src/components/packages/TreeView/sassdoc.json"),d=function(){return n.createElement(s.a,{name:"TreeView",sassdoc:a})};const o=d;var m,l;t.default=o,m=i("./node_modules/react-hot-loader/index.js").default,l=i("./node_modules/react-hot-loader/index.js").leaveModule,m&&(m.register(d,"TreeViewSassDoc","/Users/mlaursen/code/react-md/packages/documentation/src/components/packages/TreeView/TreeViewSassDoc.tsx"),m.register(o,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/packages/TreeView/TreeViewSassDoc.tsx"),l(e))}.call(this,i("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/TreeView/sassdoc.json":function(e){e.exports={functions:[],mixins:[{name:"rmd-tree-item-at-depth",type:"mixin",description:"Creates styles to add additional padding to tree items based on depth. This will only work\nif you correctly apply the `aria-level` attributes to the list items.\n\nThe formula used for creating padding is:\n```scss\n$padding: (($depth - 1) * $incrementor) + $base;\n```\n\n",file:"tree-view/src/_mixins.scss",group:"tree-view",links:[],see:[],usedBy:[{name:"rmd-tree-view-depths",type:"mixin",description:"Creates the styles for all the depths from the provided min and max values for a tree.\n\n",group:"tree-view"}],requires:[{name:"rmd-list-item-horizontal-padding",type:"variable",description:"",group:"list"}],code:"@mixin rmd-tree-item-at-depth($depth, $selector-prefix: '', $incrementor: $rmd-tree-view-item-padding-incrementor, $base: $rmd-tree-view-item-padding-base) {\n  $selector: '#{$selector-prefix}[aria-level=\"#{$depth + 1}\"].rmd-tree-item__content, #{$selector-prefix}[aria-level=\"#{$depth + 1}\"] > .rmd-tree-item__content';\n  $padding: (($depth - 1) * $incrementor) + $base;\n\n  #{$selector} {\n    padding-left: $padding;\n\n    // sass-lint:disable mixins-before-declarations\n    @include rmd-utils-rtl {\n      padding-left: $rmd-list-item-horizontal-padding;\n      padding-right: $padding;\n    }\n  }\n}",throws:[],examples:[],parameters:[{type:"Number",name:"depth",description:"The depth to create styles for."},{type:"String",name:"selector-prefix",default:"''",description:"An optional selector prefix to add before the `aria-level`."},{type:"Number",name:"incrementor",default:"rmd-tree-view-item-padding-incrementor",description:"The amount of padding to be used for each level of depth."},{type:"Number",name:"base",default:"rmd-tree-view-item-padding-base",description:"The base amount of padding that should be added to a tree item."}]},{name:"rmd-tree-view-depths",type:"mixin",description:"Creates the styles for all the depths from the provided min and max values for a tree.\n\n",file:"tree-view/src/_mixins.scss",group:"tree-view",links:[],see:[],usedBy:[{name:"react-md-tree-view",type:"mixin",description:"Creates all tree-view specific styles. This really requires the `@react-md/list` styles to be created\nbeforehand since these styles just prevent the outline when focused to work with the `@react-md/states`\npackage.\n",group:"tree-view"}],requires:[{name:"rmd-tree-item-at-depth",type:"mixin",description:"",group:"tree-view"}],code:"@mixin rmd-tree-view-depths($selector-prefix: '', $min: 1, $max: $rmd-tree-view-max-depth, $incrementor: $rmd-tree-view-item-padding-incrementor, $base: $rmd-tree-view-item-padding-base) {\n  @if $min < 1 {\n    @error 'Invalid min value: \\'#{$min}\\'! The min must be a number greater than 0.';\n  }\n\n  @if $max < $min {\n    @error 'Invalid max value: \\'#{$max}\\'! The max must be a number greater than the min value: \\'#{$min}\\'';\n  }\n\n  $index: $min;\n  @while $index < $max {\n    @include rmd-tree-item-at-depth($index, $selector-prefix, $incrementor, $base-padding);\n\n    $index: $index + 1;\n  }\n}",throws:["Invalid min value: \\","Invalid max value: \\"],examples:[],parameters:[{type:"String",name:"selector-prefix",default:"''",description:"An optional prefix to apply before the `aria-level` selector."},{type:"Number",name:"min",default:"1",description:"The min level to use. This needs to be a number greater than 0."},{type:"Number",name:"max",default:"rmd-tree-view-max-depth",description:"The max number of levels to create styles for."},{type:"Number",name:"incrementor",default:"rmd-tree-view-item-padding-incrementor",description:"The amount of padding to be used for each level of depth."},{type:"Number",name:"base",default:"rmd-tree-view-item-padding-base",description:"The base amount of padding that should be added to a tree item."}]},{name:"rmd-tree-item",type:"mixin",description:"Creates the styles for a tree item. This really requires the `@react-md/list` styles to be created\nbeforehand since these styles just prevent the outline when focused to work with the `@react-md/states`\npackage.\n\n",file:"tree-view/src/_mixins.scss",group:"tree-view",links:[],see:[],usedBy:[{name:"react-md-tree-view",type:"mixin",description:"Creates all tree-view specific styles. This really requires the `@react-md/list` styles to be created\nbeforehand since these styles just prevent the outline when focused to work with the `@react-md/states`\npackage.\n",group:"tree-view"}],requires:[{name:"rmd-utils-hide-focus-outline",type:"mixin",description:"",group:"utils"}],code:"@mixin rmd-tree-item {\n  @include rmd-utils-hide-focus-outline;\n\n  // added again just-in-case so that dnd libraries don't do a bad drag image\n  list-style: none;\n\n  &__content--link {\n    color: inherit;\n    text-decoration: none;\n  }\n}",throws:[],examples:[{type:"scss",code:".rmd-tree-item {\n  @include rmd-tree-item;\n}",description:"Example Usage SCSS"}],parameters:[]},{name:"rmd-tree-group",type:"mixin",description:"Creates the styles for the tree group.\n\n",file:"tree-view/src/_mixins.scss",group:"tree-view",links:[],see:[],usedBy:[{name:"react-md-tree-view",type:"mixin",description:"Creates all tree-view specific styles. This really requires the `@react-md/list` styles to be created\nbeforehand since these styles just prevent the outline when focused to work with the `@react-md/states`\npackage.\n",group:"tree-view"}],requires:[],code:"@mixin rmd-tree-group {\n  background-color: inherit;\n  color: inherit;\n  font-size: inherit;\n  line-height: inherit;\n\n  // remove the list padding to make it more condensed\n  padding-bottom: 0;\n  padding-top: 0;\n}",throws:[],examples:[{type:"scss",code:".rmd-tree-group {\n  @include rmd-tree-group;\n}",description:"Example Usage SCSS"}],parameters:[]},{name:"react-md-tree-view",type:"mixin",description:"Creates all tree-view specific styles. This really requires the `@react-md/list` styles to be created\nbeforehand since these styles just prevent the outline when focused to work with the `@react-md/states`\npackage.\n",file:"tree-view/src/_mixins.scss",group:"tree-view",links:[],see:[],usedBy:[],requires:[{name:"rmd-tree-view-depths",type:"mixin",description:"",group:"tree-view"},{name:"rmd-tree-item",type:"mixin",description:"",group:"tree-view"},{name:"rmd-tree-group",type:"mixin",description:"",group:"tree-view"}],code:"@mixin react-md-tree-view {\n  .rmd-tree-view {\n    @include rmd-tree-view-depths;\n\n    width: 100%;\n  }\n\n  .rmd-tree-item {\n    @include rmd-tree-item;\n  }\n\n  .rmd-tree-group {\n    @include rmd-tree-group;\n  }\n}",throws:[],examples:[],parameters:[]}],variables:[{name:"rmd-tree-view-max-depth",type:"Number",description:"The default max-depth to create for the tree view depths. This is used in the `rmd-tree-view-depths` mixin\nto generate offsets in css based on how deep a tree item is. If this value is less than or equal to 1, no\ndepth styles will be created.\n\n",file:"tree-view/src/_variables.scss",group:"tree-view",links:[],see:[],usedBy:[],requires:[],code:"$rmd-tree-view-max-depth: 3 !default;",value:"3"},{name:"rmd-tree-view-item-padding-incrementor",type:"Number",description:"The amount of padding that should be multiplied by the current depth and added to the `rmd-tree-view-item-padding-base`.\n\n",file:"tree-view/src/_variables.scss",group:"tree-view",links:[],see:[{name:"rmd-tree-view-depths",type:"mixin",description:"Creates the styles for all the depths from the provided min and max values for a tree.\n\n",group:"tree-view"},{name:"rmd-tree-item-at-depth",type:"mixin",description:"Creates styles to add additional padding to tree items based on depth. This will only work\nif you correctly apply the `aria-level` attributes to the list items.\n\nThe formula used for creating padding is:\n```scss\n$padding: (($depth - 1) * $incrementor) + $base;\n```\n\n",group:"tree-view"}],usedBy:[],requires:[],code:"$rmd-tree-view-item-padding-incrementor: $rmd-list-item-horizontal-padding * 1.5 !default;",value:""},{name:"rmd-tree-view-item-padding-base",type:"Number",description:"The base amout of padding to apply to a tree item that has a depth greater than 1. This is set to a value\nthat assumes you have icons to the left of the items at the base level. If you do not, it would be better to\nset this value to something smaller or `$rmd-list-item-horizontal-padding * 2.5`.\n\n",file:"tree-view/src/_variables.scss",group:"tree-view",links:[],see:[{name:"rmd-tree-view-depths",type:"mixin",description:"Creates the styles for all the depths from the provided min and max values for a tree.\n\n",group:"tree-view"},{name:"rmd-tree-item-at-depth",type:"mixin",description:"Creates styles to add additional padding to tree items based on depth. This will only work\nif you correctly apply the `aria-level` attributes to the list items.\n\nThe formula used for creating padding is:\n```scss\n$padding: (($depth - 1) * $incrementor) + $base;\n```\n\n",group:"tree-view"}],usedBy:[],requires:[],code:"$rmd-tree-view-item-padding-base: $rmd-list-item-text-keyline !default;",value:""}]}}}]);
//# sourceMappingURL=50.a0635545.chunk.min.js.map