{"version":3,"sources":["components/ExamplesPage/Example.tsx","components/ExamplesPage/ExampleTitle.tsx","components/ExamplesPage/ExamplesPage.tsx","components/ExamplesPage/index.ts","components/Markdown/Markdown.tsx","components/Markdown/MarkdownPage.tsx","components/Markdown/index.ts","components/packages/Sheet/Examples/Examples.tsx","components/packages/Sheet/Examples/SimpleSheets.tsx","components/packages/Sheet/Examples/index.ts","utils/markdown/index.ts"],"names":["Example","_a","title","children","className","contentClassName","description","exampleGroup","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_react_md_typography__WEBPACK_IMPORTED_MODULE_2__","type","components_Markdown__WEBPACK_IMPORTED_MODULE_3__","markdown","example-group","defaultProps","__webpack_exports__","ExampleTitle","_react_md_typography__WEBPACK_IMPORTED_MODULE_1__","ExamplesPage","examples","react__WEBPACK_IMPORTED_MODULE_1__","map","example","key","_Example__WEBPACK_IMPORTED_MODULE_5__","tslib__WEBPACK_IMPORTED_MODULE_0__","_ExamplesPage__WEBPACK_IMPORTED_MODULE_0__","Markdown","_super","props","_this","call","this","updateLinks","history","container","current","link","test","href","onclick","event","preventDefault","push","replace","window","location","origin","_i","links_1","Array","from","querySelectorAll","length","state","html","__html","Object","utils_markdown__WEBPACK_IMPORTED_MODULE_4__","prevMarkdown","getDerivedStateFromProps","nextProps","prevState","prototype","componentDidMount","componentDidUpdate","prevProps","render","style","ref","classnames__WEBPACK_IMPORTED_MODULE_2___default","dangerouslySetInnerHTML","react_router__WEBPACK_IMPORTED_MODULE_3__","MarkdownPage","_Markdown__WEBPACK_IMPORTED_MODULE_3__","_Markdown__WEBPACK_IMPORTED_MODULE_0__","_SimpleSheets__WEBPACK_IMPORTED_MODULE_2__","Examples","components_ExamplesPage__WEBPACK_IMPORTED_MODULE_1__","SimpleSheets","showTop","setState","visible","position","showRight","showBottom","showLeft","close","_react_md_button__WEBPACK_IMPORTED_MODULE_2__","onClick","_react_md_sheet__WEBPACK_IMPORTED_MODULE_3__","onRequestClose","_react_md_list__WEBPACK_IMPORTED_MODULE_4__","leftIcon","_react_md_material_icons__WEBPACK_IMPORTED_MODULE_5__","_Examples__WEBPACK_IMPORTED_MODULE_0__","getLanguage","s","marked__WEBPACK_IMPORTED_MODULE_0__","renderer","highlight","code","lang","prismjs__WEBPACK_IMPORTED_MODULE_1__","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","preTransforms","postTransforms","_","s1","s2","transform","transforms","options","reduce","t","markdownToHTML"],"mappings":"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","file":"js/33.0185dca6.chunk.min.js","sourcesContent":["import * as React from \"react\";\nimport cn from \"classnames\";\nimport { Text } from \"@react-md/typography\";\n\nimport Markdown from \"components/Markdown\";\n\nexport interface IExampleProps {\n  exampleGroup?: boolean;\n  title: string;\n  children?: React.ReactNode;\n  className?: string;\n  description?: string;\n  contentClassName?: string;\n}\n\nconst Example: React.SFC<IExampleProps> = ({\n  title,\n  children,\n  className,\n  contentClassName,\n  description,\n  exampleGroup,\n}) => (\n  <section className={cn(\"examples-page__example\", className)}>\n    <Text type=\"headline-4\" className=\"examples-page__example-title\">\n      {title}\n    </Text>\n    {description && <Markdown markdown={description} />}\n    <div className={cn(\"examples-page__example-content\", { \"example-group\": exampleGroup }, contentClassName)}>\n      {children}\n    </div>\n  </section>\n);\n\nExample.defaultProps = {\n  exampleGroup: true,\n};\n\nexport default Example;\n","import * as React from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nexport interface IExampleTitleProps {\n  children: React.ReactNode;\n}\n\nconst ExampleTitle: React.SFC<IExampleTitleProps> = ({ children }) => <Text type=\"headline-6\">{children}</Text>;\n\nexport default ExampleTitle;\n","import * as React from \"react\";\nimport { Text } from \"@react-md/typography\";\n\nimport Markdown from \"components/Markdown\";\n\nimport \"./examples-page.scss\";\nimport { default as Example, IExampleProps } from \"./Example\";\n\nexport type ExampleList = IExampleProps[];\n\nexport interface IExamplesPageProps {\n  title: string;\n  description?: string;\n  examples: ExampleList;\n}\n\nconst ExamplesPage: React.SFC<IExamplesPageProps> = ({ title, description, examples }) => (\n  <section className=\"examples-page\">\n    <header className=\"rmd-text-container\">\n      <Text type=\"headline-2\" className=\"examples-page__title\">\n        {title}\n      </Text>\n    </header>\n    {description && <Markdown markdown={description} className=\"rmd-text-container\" />}\n    {examples.map((example, key) => (\n      <Example key={key} {...example} />\n    ))}\n  </section>\n);\n\nexport default ExamplesPage;\n","import ExamplesPage from \"./ExamplesPage\";\n\nexport default ExamplesPage;\n\nexport { default as ExamplesPage } from \"./ExamplesPage\"\nexport * from \"./ExamplesPage\"\nexport { default as ExampleTitle } from \"./ExampleTitle\";\n","import * as React from \"react\";\nimport cn from \"classnames\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\n\nimport { markdownToHTML } from \"utils/markdown\";\n\nimport \"./markdown.scss\";\n\nexport interface IMarkdownProps extends RouteComponentProps<any> {\n  style?: React.CSSProperties;\n  className?: string;\n  markdown: string;\n}\n\ninterface IInnerHTML {\n  __html: string;\n}\n\nexport interface IMarkdownState {\n  html: IInnerHTML;\n  prevMarkdown: string;\n}\n\nclass Markdown extends React.Component<IMarkdownProps, IMarkdownState> {\n  public static getDerivedStateFromProps(nextProps: IMarkdownProps, prevState: IMarkdownState) {\n    const { markdown } = nextProps;\n    if (prevState.prevMarkdown !== markdown) {\n      return {\n        html: { __html: markdownToHTML(nextProps.markdown) },\n        prevMarkdown: markdown,\n      };\n    }\n\n    return null;\n  }\n\n  private container: React.RefObject<HTMLDivElement>;\n  constructor(props: IMarkdownProps) {\n    super(props);\n\n    this.state = {\n      html: { __html: markdownToHTML(props.markdown) },\n      prevMarkdown: props.markdown,\n    };\n\n    this.container = React.createRef();\n  }\n\n  public componentDidMount() {\n    this.updateLinks();\n  }\n\n  public componentDidUpdate(prevProps: IMarkdownProps, prevState: IMarkdownState) {\n    if (this.state.html !== prevState.html) {\n      this.updateLinks();\n    }\n  }\n\n  public render() {\n    const { style, className, markdown } = this.props;\n    const { html } = this.state;\n    if (!html.__html || !markdown) {\n      return null;\n    }\n\n    return (\n      <div\n        ref={this.container}\n        style={style}\n        className={cn(\"markdown-container\", className)}\n        dangerouslySetInnerHTML={html}\n      />\n    );\n  }\n\n  private updateLinks = () => {\n    const { history } = this.props;\n    if (!this.container.current) {\n      return;\n    }\n\n    const links = Array.from(this.container.current.querySelectorAll(\".rmd-link\") as NodeListOf<HTMLAnchorElement>);\n    for (const link of links) {\n      if (/^https?:\\/\\/(localhost|react-md)/.test(link.href)) {\n        // update internal links to use browser history instead of native behavior\n        link.onclick = function handleClick(event: MouseEvent) {\n          event.preventDefault();\n          history.push(link.href.replace(window.location.origin, \"\"));\n        };\n      }\n    }\n  };\n}\n\nexport default withRouter(Markdown);\n","import * as React from \"react\";\nimport cn from \"classnames\";\n\nimport Markdown from \"./Markdown\";\n\nexport interface IMarkdownPageProps {\n  style?: React.CSSProperties;\n  className?: string;\n  markdown: string;\n}\n\nconst MarkdownPage: React.SFC<IMarkdownPageProps> = ({ className, ...props }) => (\n  <Markdown {...props} className={cn(\"markdown-page rmd-text-container\", className)} />\n);\n\nexport default MarkdownPage;\n","import Markdown from \"./Markdown\";\n\nexport default Markdown;\nexport { Markdown };\n\nexport { default as MarkdownPage } from \"./MarkdownPage\";\n","import * as React from \"react\";\n\nimport { default as ExamplesPage, ExampleList } from \"components/ExamplesPage\";\n\nimport SimpleSheets from \"./SimpleSheets\";\n\nconst examples: ExampleList = [\n  {\n    title: \"Simple Sheets\",\n    children: <SimpleSheets />,\n  },\n];\n\nconst Examples = () => <ExamplesPage title=\"Sheet\" examples={examples} />;\n\nexport default Examples;\n","import * as React from \"react\";\nimport { Button } from \"@react-md/button\";\nimport { Sheet, SheetPosition } from \"@react-md/sheet\";\nimport { List, ListItem } from \"@react-md/list\";\nimport { ShareSVGIcon, EditSVGIcon, LinkSVGIcon, DeleteSVGIcon } from \"@react-md/material-icons\";\n\nexport interface ISimpleSheetsProps {}\n\nexport interface ISimpleSheetsState {\n  position: SheetPosition;\n  visible: boolean;\n}\n\nexport default class SimpleSheets extends React.Component<ISimpleSheetsProps, ISimpleSheetsState> {\n  constructor(props: ISimpleSheetsProps) {\n    super(props);\n\n    this.state = { visible: false, position: \"bottom\" };\n  }\n\n  public render() {\n    const { visible, position } = this.state;\n    return (\n      <React.Fragment>\n        <Button className=\"example-group__example\" onClick={this.showTop}>\n          Show Top\n        </Button>\n        <Button className=\"example-group__example\" onClick={this.showRight}>\n          Show Right\n        </Button>\n        <Button className=\"example-group__example\" onClick={this.showBottom}>\n          Show Bottom\n        </Button>\n        <Button className=\"example-group__example\" onClick={this.showLeft}>\n          Show Left\n        </Button>\n        <Sheet visible={visible} onRequestClose={this.close} position={position}>\n          <List>\n            <ListItem onClick={this.close} leftIcon={<ShareSVGIcon />}>\n              Share\n            </ListItem>\n            <ListItem onClick={this.close} leftIcon={<LinkSVGIcon />}>\n              Get Link\n            </ListItem>\n            <ListItem onClick={this.close} leftIcon={<EditSVGIcon />}>\n              Edit Name\n            </ListItem>\n            <ListItem onClick={this.close} leftIcon={<DeleteSVGIcon />}>\n              Delete Collection\n            </ListItem>\n          </List>\n        </Sheet>\n      </React.Fragment>\n    );\n  }\n\n  private showTop = () => {\n    this.setState({ visible: true, position: \"top\" });\n  };\n\n  private showRight = () => {\n    this.setState({ visible: true, position: \"right\" });\n  };\n\n  private showBottom = () => {\n    this.setState({ visible: true, position: \"bottom\" });\n  };\n\n  private showLeft = () => {\n    this.setState({ visible: true, position: \"left\" });\n  };\n\n  private close = () => {\n    this.setState({ visible: false });\n  };\n}\n","import Examples from \"./Examples\";\n\nexport default Examples;\n","import * as marked from \"marked\";\nimport * as Prism from \"prismjs\";\n\nimport \"prismjs/components/prism-bash\";\nimport \"prismjs/components/prism-css-extras\";\nimport \"prismjs/components/prism-scss\";\nimport \"prismjs/components/prism-jsx\";\nimport \"prismjs/components/prism-typescript\";\nimport \"prismjs/components/prism-git\";\n\nexport function getLanguage(s: string) {\n  if (!s) {\n    return \"markup\";\n  } else if (s === \"tsx\") {\n    return \"typescript\";\n  } else if (s === \"sh\") {\n    return \"bash\";\n  } else if (s === \"diff\") {\n    return \"git\";\n  }\n\n  return s;\n}\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  highlight: (code, lang) => Prism.highlight(code, Prism.languages[getLanguage(lang)]),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n});\n\nexport interface IMarkdownOptions {\n  showToolbar?: boolean;\n  showLineNumbers?: boolean;\n}\n\nexport type MarkdownTransformation = (markdown: string, options?: IMarkdownOptions) => string;\nexport type MarkdownTransformationList = MarkdownTransformation[];\n\nconst preTransforms: MarkdownTransformationList = [];\nconst postTransforms: MarkdownTransformationList = [\n  markdown => markdown.replace(/<a href/g, '<a class=\"rmd-link\" href'),\n  markdown =>\n    markdown.replace(\n      /(<h2 id=\"table-of-contents\")(>Table of Contents<\\/h2>\\r?\\n<ul)/,\n      (_, s1, s2) => `${s1} class=\"markdown-toc\"${s2} class=\"markdown-toc__list\"`\n    ),\n  markdown =>\n    markdown.replace(/yarn add/g, '<span class=\"token function\">yarn</span> <span class=\"token function\">add</span>'),\n];\n\nexport function transform(markdown: string, transforms: MarkdownTransformation[], options?: IMarkdownOptions) {\n  return transforms.reduce((s, t) => t(s, options), markdown);\n}\n\nexport function markdownToHTML(markdown: string, options?: IMarkdownOptions) {\n  return transform(marked.parse(transform(markdown, preTransforms, options)), postTransforms, options);\n}\n"],"sourceRoot":""}