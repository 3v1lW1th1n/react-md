(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{"./src/components/packages/Typography/TypographySassDoc.tsx":function(e,o,t){"use strict";t.r(o),function(e){var n,r=t("./node_modules/react/index.js"),a=t("./src/components/PackageSassDoc/index.ts");(n=t("./node_modules/react-hot-loader/index.js").enterModule)&&n(e);var i=t("./src/components/packages/Typography/sassdoc.json"),s=function(){return r.createElement(a.a,{name:"Typography",sassdoc:i})};const l=s;var p,f;o.default=l,p=t("./node_modules/react-hot-loader/index.js").default,f=t("./node_modules/react-hot-loader/index.js").leaveModule,p&&(p.register(s,"TypographySassDoc","/Users/mlaursen/code/react-md/packages/documentation/src/components/packages/Typography/TypographySassDoc.tsx"),p.register(l,"default","/Users/mlaursen/code/react-md/packages/documentation/src/components/packages/Typography/TypographySassDoc.tsx"),f(e))}.call(this,t("./node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/sassdoc.json":function(e){e.exports={functions:[{name:"rmd-typography-google-font-suffix",type:"function",description:"Gets the Google font suffix for the provided font weight.\n\n",file:"typography/src/_functions.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-typography-google-font-face",type:"mixin",description:"Creates the font face declaration for a Google font with a provided font weight. This will\nneed to be called multiple times if you are including multiple font weights.\n\nThis should only be used if you are hosting the Google font locally instead of through the\nGoogle fonts service.\n\n",group:"typography"}],requires:[{name:"rmd-typography-google-font-weight-suffixes",type:"variable",description:"",group:"typography"}],code:"@function rmd-typography-google-font-suffix($weight) {\n  @if not map-has-key($rmd-typography-google-font-weight-suffixes, $weight) {\n    @error 'Invalid weight specified! \\'#{$weight}\\' doesn\\'t exist. Choose one of #{$map-keys($rmd-typography-google-font-weight-suffixes)}.';\n  }\n\n  @return map-get($rmd-typography-google-font-weight-suffixes, $weight);\n}",throws:["Invalid weight specified! \\"],examples:[],parameters:[{type:"String",name:"weight",description:"The font weight to get a font suffix string for. This should be one of the\n  `$rmd-typography-google-font-weight-suffixes` keys."}],returns:{type:"String",description:"the suffix for the provided font weight."}}],mixins:[{name:"rmd-typography-base",type:"mixin",description:"Applies the base typography styles to an element.\n\n",file:"typography/src/_mixins.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-tooltip-base",type:"mixin",description:"Creates the base tooltip styles only.\n\n",group:"tooltip"},{name:"react-md-typography",type:"mixin",description:"Creates all the typography styles from the react-md typography variables.\n",group:"typography"}],requires:[{name:"rmd-typography-base",type:"variable",description:"",group:"typography"}],code:"@mixin rmd-typography-base {\n  @each $key, $value in $rmd-typography-base {\n    #{$key}: $value;\n  }\n}",throws:[],examples:[{type:"scss",code:" .custom-class-name {\n   @include rmd-typography-base;\n\n   font-size: 1.3rem;\n}",description:"Example Usage SCSS",compiledCode:".custom-class-name {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.3rem;\n}\n"}],parameters:[]},{name:"rmd-typography",type:"mixin",description:"Applies one of the provided material design styles to an element.\n",file:"typography/src/_mixins.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-app-bar-title",type:"mixin",description:"Creates the styles for the `AppBarTitle` component.\n\n",group:"app-bar"},{name:"rmd-btn-text",type:"mixin",description:"Creates the base styles for a text button.\n",group:"button"},{name:"react-md-link",type:"mixin",description:"Creates the styles for links within react-md. Please note that there are **no disabled styles** unless you\nset the href to an empty string. This is intentional. If you want to disable a link, you should remove set\nthe href to an empty string instead.\n",group:"link"},{name:"rmd-list",type:"mixin",description:"Creates the styles for a list.\n",group:"list"},{name:"react-md-typography",type:"mixin",description:"Creates all the typography styles from the react-md typography variables.\n",group:"typography"}],requires:[{name:"rmd-typography-styles",type:"variable",description:"",group:"typography"}],code:"@mixin rmd-typography($style) {\n  $style-props: map-get($rmd-typography-styles, $style);\n\n  @if not map-has-key($rmd-typography-styles, $style) {\n    @error 'Invalid style specified! \\'#{$style}\\' doesn\\'t exist. Choose one of #{map-keys($rmd-typography-styles)}';\n  }\n\n  @each $key, $value in $style-props {\n    #{$key}: $value;\n  }\n}",throws:["Invalid style specified! \\"],examples:[],parameters:[{type:"String",name:"style",description:"One of the typography styles from `$rmd-typography-styles`."}]},{name:"rmd-text-container",type:"mixin",description:"A small util that will create a text container with the provided max width.\n",file:"typography/src/_mixins.scss",group:"typography",links:[],see:[],usedBy:[{name:"react-md-typography",type:"mixin",description:"Creates all the typography styles from the react-md typography variables.\n",group:"typography"}],requires:[],code:"@mixin rmd-text-container($max-width: $rmd-typography-desktop-max-line-length) {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: $max-width;\n  padding: $padding;\n  width: 100%;\n}",throws:[],examples:[],parameters:[{type:"Number",name:"max-width",default:"rmd-typography-desktop-max-line-length",description:"The max width for a line of text.\n  this number should be between 38em-42em on desktop and 17em-18em on mobile devices."}]},{name:"react-md-typography",type:"mixin",description:"Creates all the typography styles from the react-md typography variables.\n",file:"typography/src/_mixins.scss",group:"typography",links:[],see:[],usedBy:[],requires:[{name:"rmd-typography-base",type:"mixin",description:"",group:"typography"},{name:"rmd-typography",type:"mixin",description:"",group:"typography"},{name:"rmd-text-container",type:"mixin",description:"",group:"typography"},{name:"rmd-typography-styles",type:"variable",description:"",group:"typography"},{name:"rmd-typography-mobile-max-line-length",type:"variable",description:"",group:"typography"},{name:"rmd-typography-desktop-max-line-length",type:"variable",description:"",group:"typography"}],code:"@mixin react-md-typography {\n  .rmd-typography {\n    @include rmd-typography-base;\n\n    @each $suffix in map-keys($rmd-typography-styles) {\n      &--#{$suffix} {\n        @include rmd-typography($suffix);\n      }\n    }\n  }\n\n  .rmd-text-container {\n    @include rmd-text-container;\n  }\n\n  .rmd-mobile-text-container {\n    @include rmd-text-container($rmd-typography-mobile-max-line-length);\n  }\n\n  .rmd-desktop-text-container {\n    @include rmd-text-container($rmd-typography-desktop-max-line-length);\n  }\n}",throws:[],examples:[],parameters:[]},{name:"rmd-typography-text-overflow-ellipsis",type:"mixin",description:"A simple mixin that can be used to update an element to ellipsis text when it is too long.\n",file:"typography/src/_mixins.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-list-item",type:"mixin",description:"Creates the styles for a list item.\n",group:"list"}],requires:[],code:"@mixin rmd-typography-text-overflow-ellipsis {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}",throws:[],examples:[],parameters:[]},{name:"rmd-typography-google-font-face",type:"mixin",description:"Creates the font face declaration for a Google font with a provided font weight. This will\nneed to be called multiple times if you are including multiple font weights.\n\nThis should only be used if you are hosting the Google font locally instead of through the\nGoogle fonts service.\n\n",file:"typography/src/_mixins.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-typography-host-google-font",type:"mixin",description:"Generates all the font faces (with font weights) for a Google font. This should only be used if you are hosting the Google font\non your own servers instead of through the Google fonts service.\n\nIf you are using create-react-app, you must provide the `$font-url-prefix-or-url-map` as a Map of urls to have the font files\ncorrectly included and bundled during your build. See the examples for more details.\n\n",group:"typography"}],requires:[{name:"rmd-typography-google-font-suffix",type:"function",description:"",group:"typography"}],code:"@mixin rmd-typography-google-font-face($font-name: Roboto, $font-weight: map-get($rmd-typography-font-weights, regular), $font-url-or-prefix: null) {\n  $full-font-name: str-replace($font-name, ' ', '') + rmd-typography-google-font-suffix($font-weight);\n\n  $font-url-prefix: '';\n  $font-url: null;\n  @if $font-url-or-prefix == null pr type-of($font-url-or-prefix) == 'string' {\n    $font-url: if($font-url == null, '/fonts/' + to-lower-case(str-replace($font-name, ' ', '-')), $font-url);\n    $font-url: if(char-at($font-url) != '/', $font-url + '/', $font-url);\n    $font-url: url($font-url + $full-font-name + '.ttf');\n  } @else {\n    $font-url: $font-url-or-prefix;\n  }\n\n  @font-face {\n    font-family: quote($font-name);\n    font-style: normal;\n    font-weight: $font-weight;\n    src: local(#{quote($font-name)}), local(#{quote($full-font-name)}), #{$font-url} format('truetype');\n  }\n}",throws:[],examples:[{type:"scss",code:"@include rmd-typography-google-font-face(Roboto, regular, null);\n@include rmd-typography-google-font-face('Source Code Pro', regular, null);",description:"Example Usage SCSS",compiledCode:'@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: regular;\n  src: local(Roboto), local(Roboto-Regular), url("/fonts/roboto/Roboto-Regular.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Source Code Pro";\n  font-style: normal;\n  font-weight: regular;\n  src: local(Source Code Pro), local(SourceCodePro-Regular), url("/fonts/source-code-pro/SourceCodePro-Regular.ttf") format("truetype");\n}\n'},{type:"css",code:"@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Roboto'),\n    local('Roboto-Regular'),\n    url('/fonts/roboto/Roboto-Regular.ttf') format('truetype');\n}\n\n@font-face {\n  font-family: 'Source Code Pro';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Source Code Pro'),\n    local('SourceCodePro-Regular'),\n    url('/fonts/source-code-pro/SourceCodePro-Regular.ttf') format('truetype');\n}",description:"Example Usage Generated SCSS",compiledCode:null}],parameters:[{type:"String",name:"font-name",default:"Roboto",description:"The font name to use."},{type:"String",name:"font-weight",default:"map-get($rmd-typography-font-weights, regular)",description:"The font weight to use."},{type:"String",name:"font-url-or-prefix",default:"null",description:"This is either a font url prefix for the folder containing the font on your\n  server or a url string to the font icon file on your server. If you are using create-react-app, you **must** use the\n  url string approach for it to be correctly included in the build process. If this value is null, it will default to have\n  '/fonts/' prefix and then a caterpillar-cased string. See the examples above for more details."}]},{name:"rmd-typography-host-google-font",type:"mixin",description:"Generates all the font faces (with font weights) for a Google font. This should only be used if you are hosting the Google font\non your own servers instead of through the Google fonts service.\n\nIf you are using create-react-app, you must provide the `$font-url-prefix-or-url-map` as a Map of urls to have the font files\ncorrectly included and bundled during your build. See the examples for more details.\n\n",file:"typography/src/_mixins.scss",group:"typography",links:[{url:"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-images-fonts-and-files",caption:"Adding Images, Fonts, and Files"}],see:[{name:"rmd-typography-google-font-face",type:"mixin",description:"Creates the font face declaration for a Google font with a provided font weight. This will\nneed to be called multiple times if you are including multiple font weights.\n\nThis should only be used if you are hosting the Google font locally instead of through the\nGoogle fonts service.\n\n",group:"typography"}],usedBy:[],requires:[{name:"rmd-typography-google-font-face",type:"mixin",description:"",group:"typography"}],code:"@mixin rmd-typography-host-google-font($font-name: Roboto, $weights: $rmd-typography-default-font-weights, $font-url-prefix-or-url-map: null) {\n  @each $weight in $weights {\n    @if type-of($font-url-prefix-or-url-map) == 'string' or $font-url-prefix-or-url-map == null {\n      @include rmd-typography-google-font-face($font-name, $weight, $font-url-prefix-or-url-map);\n    } @else {\n      @if not map-has-key($font-url-prefix-or-url-map, $weight) {\n        @error 'The provided font-weight: \\'#{$weight}\\' doesn\\'t exist in the url map. Provided keys: '#{map-keys($font-url-prefix-or-url-map)}'.';\n      }\n\n      @include rmd-typography-google-font-face($font-name, $weight, map-get($font-url-prefix-or-url-map, $weight));\n    }\n  }\n}",throws:["The provided font-weight: \\"],examples:[{type:"scss",code:"// This is going to assume you have downloaded the material-icons zip with all the icon font files and copied it into\n// `src/fonts/material-icons` and you are including the fonts in `src/index.scss`\n@include rmd-typography-host-google-font(Roboto, $rmd-typography-default-font-weights, (\n  light: url(./fonts/roboto/Roboto-Light.ttf),\n  regular: url(./fonts/roboto/Roboto-Regular.ttf),\n  medium: url(./fonts/roboto/Roboto-Medium.ttf),\n  bold: url(./fonts/roboto/Roboto-Bold.ttf),\n));\n\n@include rmd-typography-host-google-font(SourceCodePro, $rmd-typography-default-font-weights, (\n  light: url(./fonts/source-code-pro/SourceCodePro-Light.ttf),\n  regular: url(./fonts/source-code-pro/SourceCodePro-Regular.ttf),\n  medium: url(./fonts/source-code-pro/SourceCodePro-Medium.ttf),\n  bold: url(./fonts/source-code-pro/SourceCodePro-Bold.ttf),\n));",description:"create-react-app Example Usage",compiledCode:'@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: light;\n  src: local(Roboto), local(Roboto-Light), url("/fonts/roboto/Roboto-Light.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: regular;\n  src: local(Roboto), local(Roboto-Regular), url("/fonts/roboto/Roboto-Regular.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: medium;\n  src: local(Roboto), local(Roboto-Medium), url("/fonts/roboto/Roboto-Medium.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: bold;\n  src: local(Roboto), local(Roboto-Bold), url("/fonts/roboto/Roboto-Bold.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "SourceCodePro";\n  font-style: normal;\n  font-weight: light;\n  src: local(SourceCodePro), local(SourceCodePro-Light), url("/fonts/sourcecodepro/SourceCodePro-Light.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "SourceCodePro";\n  font-style: normal;\n  font-weight: regular;\n  src: local(SourceCodePro), local(SourceCodePro-Regular), url("/fonts/sourcecodepro/SourceCodePro-Regular.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "SourceCodePro";\n  font-style: normal;\n  font-weight: medium;\n  src: local(SourceCodePro), local(SourceCodePro-Medium), url("/fonts/sourcecodepro/SourceCodePro-Medium.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "SourceCodePro";\n  font-style: normal;\n  font-weight: bold;\n  src: local(SourceCodePro), local(SourceCodePro-Bold), url("/fonts/sourcecodepro/SourceCodePro-Bold.ttf") format("truetype");\n}\n'},{type:"scss",code:"// The next 3 lines are equivalent\n@include rmd-typography-host-google-font;\n@include rmd-typography-host-google-font(Roboto, $rmd-typography-default-font-weights, null);\n@include rmd-typography-host-google-font(Roboto, $rmd-typography-default-font-weights, '/fonts/roboto');\n@include rmd-typography-host-google-font('Source Code Pro');",description:"Example Usage SCSS",compiledCode:'@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: light;\n  src: local(Roboto), local(Roboto-Light), url("/fonts/roboto/Roboto-Light.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: regular;\n  src: local(Roboto), local(Roboto-Regular), url("/fonts/roboto/Roboto-Regular.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: medium;\n  src: local(Roboto), local(Roboto-Medium), url("/fonts/roboto/Roboto-Medium.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: bold;\n  src: local(Roboto), local(Roboto-Bold), url("/fonts/roboto/Roboto-Bold.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: light;\n  src: local(Roboto), local(Roboto-Light), url("/fonts/roboto/Roboto-Light.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: regular;\n  src: local(Roboto), local(Roboto-Regular), url("/fonts/roboto/Roboto-Regular.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: medium;\n  src: local(Roboto), local(Roboto-Medium), url("/fonts/roboto/Roboto-Medium.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: bold;\n  src: local(Roboto), local(Roboto-Bold), url("/fonts/roboto/Roboto-Bold.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: light;\n  src: local(Roboto), local(Roboto-Light), url("/fonts/roboto/Roboto-Light.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: regular;\n  src: local(Roboto), local(Roboto-Regular), url("/fonts/roboto/Roboto-Regular.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: medium;\n  src: local(Roboto), local(Roboto-Medium), url("/fonts/roboto/Roboto-Medium.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Roboto";\n  font-style: normal;\n  font-weight: bold;\n  src: local(Roboto), local(Roboto-Bold), url("/fonts/roboto/Roboto-Bold.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Source Code Pro";\n  font-style: normal;\n  font-weight: light;\n  src: local(Source Code Pro), local(SourceCodePro-Light), url("/fonts/source-code-pro/SourceCodePro-Light.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Source Code Pro";\n  font-style: normal;\n  font-weight: regular;\n  src: local(Source Code Pro), local(SourceCodePro-Regular), url("/fonts/source-code-pro/SourceCodePro-Regular.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Source Code Pro";\n  font-style: normal;\n  font-weight: medium;\n  src: local(Source Code Pro), local(SourceCodePro-Medium), url("/fonts/source-code-pro/SourceCodePro-Medium.ttf") format("truetype");\n}\n\n@font-face {\n  font-family: "Source Code Pro";\n  font-style: normal;\n  font-weight: bold;\n  src: local(Source Code Pro), local(SourceCodePro-Bold), url("/fonts/source-code-pro/SourceCodePro-Bold.ttf") format("truetype");\n}\n'}],parameters:[{type:"String",name:"font-name",default:"Roboto",description:"The font name to use."},{type:"List",name:"weights",default:"$rmd-typography-default-font-weights",description:"A list of font weights to use. These should be\n  one of the `$rmd-typography-font-weights` keys."},{type:"String | Map",name:"font-url-prefix-or-url-map",default:"null",description:"This is either a font url prefix for the folder containing the font on your\n  server or a url string to the font icon file on your server. If you are using create-react-app, you **must** use the\n  url string approach for it to be correctly included in the build process. If this value is null, it will default to have\n  '/fonts/' prefix and then a caterpillar-cased string. See the `rmd-typography-google-font-face` mixin for more details."}]}],variables:[{name:"rmd-typography-font-family",type:"String",description:"The font family to use throughout the entire application.\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[],requires:[],code:"$rmd-typography-font-family: Roboto, sans-serif !default;",value:"Roboto, sans-serif"},{name:"rmd-typography-mobile-max-line-length",type:"Number",description:"The max length a line of text can be on mobile devices.\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[{name:"react-md-typography",type:"mixin",description:"Creates all the typography styles from the react-md typography variables.\n",group:"typography"}],requires:[],code:"$rmd-typography-mobile-max-line-length: 17em !default;",value:"17em"},{name:"rmd-typography-desktop-max-line-length",type:"Number",description:"The max length a line of text can be on larger screens (mostly desktops or landscape tablets).\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[{name:"react-md-typography",type:"mixin",description:"Creates all the typography styles from the react-md typography variables.\n",group:"typography"}],requires:[],code:"$rmd-typography-desktop-max-line-length: 40em !default;",value:"40em"},{name:"rmd-typography-text-container-padding",type:"Number",description:"The amount of padding to use on text containers.\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[],requires:[],code:"$rmd-typography-text-container-padding: 0 1rem !default;",value:"0 1rem"},{name:"rmd-typography-base",type:"Map",description:"The base styles for typography.\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-typography-base",type:"mixin",description:"Applies the base typography styles to an element.\n\n",group:"typography"}],requires:[],code:"$rmd-typography-base: (\n  font-family: $rmd-typography-font-family,\n  -moz-osx-font-smoothing: grayscale, // sass-lint:disable-line no-vendor-prefixes\n  -webkit-font-smoothing: antialiased, // sass-lint:disable-line no-vendor-prefixes\n);",value:""},{name:"rmd-typography-font-weights",type:"Map",description:"A Map of all the font weights.\n\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-icon-material-icons-font-face",type:"mixin",description:"Creates the font face for material icons. This takes either a font url prefix string or a map of urls for each required\nfont file. If you are using create-react-app, you **must** use the Map version so the fonts can be\ncorrectly included by the build process.\n\n",group:"icon"}],requires:[],code:"$rmd-typography-font-weights: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  semi-bold: 800,\n  black: 900, // sass-lint:disable-line no-color-keywords\n) !default;",value:"(\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  semi-bold: 800,\n  black: 900, // sass-lint:disable-line no-color-keywords\n)"},{name:"rmd-typography-default-font-weights",type:"List",description:'A list of the "default" font weights that are normally included within an app.\nThis is really only used for hosting fonts on your own server.\n\nEach value in this should be one of the keys in `$rmd-typography-font-weights`.\n\n',file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[],requires:[],code:"$rmd-typography-default-font-weights: light regular medium bold !default;",value:"light regular medium bold"},{name:"rmd-typography-google-font-weight-suffixes",type:"Map",description:"A Map of font weights to a font file suffix for a Google font.\n\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-typography-google-font-suffix",type:"function",description:"Gets the Google font suffix for the provided font weight.\n\n",group:"typography"}],requires:[],code:"$rmd-typography-google-font-weight-suffixes: (\n  thin: '-Thin',\n  light: '-Light',\n  regular: '-Regular',\n  medium: '-Medium',\n  bold: '-Bold',\n  semi-bold: '-SemiBold',\n  black: '-Black', // sass-lint:disable-line no-color-keywords\n) !default;",value:"(\n  thin: '-Thin',\n  light: '-Light',\n  regular: '-Regular',\n  medium: '-Medium',\n  bold: '-Bold',\n  semi-bold: '-SemiBold',\n  black: '-Black', // sass-lint:disable-line no-color-keywords\n)"},{name:"rmd-typography-styles",type:"Map",description:"A Map of all the typography styles in react-md\n\n",file:"typography/src/_variables.scss",group:"typography",links:[],see:[],usedBy:[{name:"rmd-typography",type:"mixin",description:"Applies one of the provided material design styles to an element.\n",group:"typography"},{name:"react-md-typography",type:"mixin",description:"Creates all the typography styles from the react-md typography variables.\n",group:"typography"}],requires:[],code:"$rmd-typography-styles: rmd-typography-set-styles($rmd-typography-base, (\n    headline-1: (\n      font-size: 6rem, // 96sp\n      line-height: 6rem,\n      font-weight: map-get($rmd-typography-font-weights, light),\n      letter-spacing: rmd-typography-get-letter-spacing(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline-2: (\n      font-size: 3.75rem, // 60sp\n      line-height: 3.75rem,\n      font-weight: map-get($rmd-typography-font-weights, light),\n      letter-spacing: rmd-typography-get-letter-spacing(-.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline-3: (\n      font-size: 3rem, // 48sp\n      line-height: 3.125rem, // 50sp\n      font-weight: map-get($rmd-typography-font-weights, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline-4: (\n      font-size: 2.125rem, // 34sp\n      line-height: 2.5rem, // 40sp\n      font-weight: map-get($rmd-typography-font-weights, regular),\n      letter-spacing: rmd-typography-get-letter-spacing(.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline-5: (\n      font-size: 1.5rem, // 24sp\n      line-height: 2rem, // 32sp\n      font-weight: map-get($rmd-typography-font-weights, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline-6: (\n      font-size: 1.25rem, // 20sp\n      line-height: 2rem, // 32sp\n      font-weight: map-get($rmd-typography-font-weights, medium),\n      letter-spacing: rmd-typography-get-letter-spacing(.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle-1: (\n      font-size: 1rem, // 16sp\n      line-height: 1.75rem, // 28sp\n      font-weight: map-get($rmd-typography-font-weights, regular),\n      letter-spacing: rmd-typography-get-letter-spacing(.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle-2: (\n      font-size: .875rem, // 14sp\n      line-height: 1.375rem, // 22sp\n      font-weight: map-get($rmd-typography-font-weights, medium),\n      letter-spacing: rmd-typography-get-letter-spacing(.1, .875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body-1: (\n      font-size: 1rem, // 16sp\n      line-height: 1.5rem, // 24sp,\n      font-weight: map-get($rmd-typography-font-weights, regular),\n      letter-spacing: rmd-typography-get-letter-spacing(.5, .875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body-2: (\n      font-size: .875rem, // 14sp\n      line-height: 1.25rem, // 20sp\n      font-weight: map-get($rmd-typography-font-weights, regular),\n      letter-spacing: rmd-typography-get-letter-spacing(.25, .875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: .75rem, // 12sp\n      line-height: 1.25rem, // 20sp\n      font-weight: map-get($rmd-typography-font-weights, regular),\n      letter-spacing: rmd-typography-get-letter-spacing(.4, .75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: .875rem, // 14sp\n      line-height: 2.25rem, // 36sp\n      font-weight: map-get($rmd-typography-font-weights, medium),\n      letter-spacing: rmd-typography-get-letter-spacing(1.25, .875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: .75rem, // 12sp\n      line-height: 2rem, // 32sp\n      font-weight: map-get($rmd-typography-font-weights, medium),\n      letter-spacing: rmd-typography-get-letter-spacing(2, .75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n));",value:""}]}}}]);
//# sourceMappingURL=73.f7fc5386.chunk.min.js.map