(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"../link/es/index.js":function(e,n,a){"use strict";var t=a("../../node_modules/react/index.js"),o=a("../../node_modules/prop-types/index.js"),r=a("../../node_modules/classnames/index.js"),m=a.n(r),l=function(e,n){var a={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&n.indexOf(t)<0&&(a[t]=e[t]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var o=0;for(t=Object.getOwnPropertySymbols(e);o<t.length;o++)n.indexOf(t[o])<0&&(a[t[o]]=e[t[o]])}return a};class i extends t.Component{render(){const e=this.props,{className:n,component:a,href:o,children:r,rel:i,flexCentered:u,preventMaliciousTarget:c}=e,s=l(e,["className","component","href","children","rel","flexCentered","preventMaliciousTarget"]),{target:d}=s,v=""===o?void 0:o,h=m()("rmd-link",{"rmd-link--flex-centered":u},n);let p=i;return"string"!==typeof p&&"_blank"===d&&(p="noopener noreferrer"),a?t.createElement(a,Object.assign({},s,{rel:p,href:v,className:h}),r):t.createElement("a",Object.assign({className:h},s,{href:v,rel:p}),r)}}i.propTypes={className:o.string,href:o.string,component:o.func,target:o.string,rel:o.string,preventMaliciousTarget:o.bool,flexCentered:o.bool},i.defaultProps={preventMaliciousTarget:!0,flexCentered:!1},a.d(n,"a",function(){return i})},"./src/components/Anchor/Anchor.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../../node_modules/classnames/index.js"),l=a.n(m),i=a("./src/components/Link.tsx");a("./src/components/Anchor/anchor.scss");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var u=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.keyboardClicked=!1,n.copyLinkToClipboard=function(){var e=document.createElement("textarea");e.value=""+window.location.origin+window.location.pathname+"#"+n.props.id,document.body.appendChild(e),e.select();try{document.execCommand("copy")}catch(e){}finally{document.body.removeChild(e)}},n.handleClick=function(e){n.copyLinkToClipboard(),n.keyboardClicked?n.keyboardClicked=!1:e.currentTarget.blur()},n.handleKeyDown=function(){n.keyboardClicked=!0},n}return o.c(n,e),n.prototype.render=function(){var e=this.props,n=e.id,a=e.className,t=e.after,o=this.props.title;return o&&(o="Quick shareable link to "+o),r.createElement(i.a,{to:"#"+n,title:o,className:l()("anchor",{"anchor--before":!t,"anchor--after":t},a),onKeyDown:this.handleKeyDown,onClick:this.handleClick},"#")},n.anchorTargetClassName="anchor-target",n.defaultProps={after:!1},n}(r.Component);const c=u;var s,d;n.a=c,s=a("../../node_modules/react-hot-loader/index.js").default,d=a("../../node_modules/react-hot-loader/index.js").leaveModule,s&&(s.register(u,"Anchor","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Anchor/Anchor.tsx"),s.register(c,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Anchor/Anchor.tsx"),d(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Anchor/TextAnchor.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../../node_modules/classnames/index.js"),l=a.n(m),i=a("../typography/es/index.js"),u=a("../../node_modules/lodash/lodash.js"),c=a("./src/components/Anchor/Anchor.tsx");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var s=function(e){var n=e.id,a=e.title,t=e.className,m=e.linkClassName,s=e.after,d=e.children,v=o.e(e,["id","title","className","linkClassName","after","children"]),h=Object(u.kebabCase)(n);return r.createElement(i.a,o.a({id:h},v,{className:l()(c.a.anchorTargetClassName,t)}),d,r.createElement(c.a,{id:h,title:a,className:m,after:s}))};s.defaultProps={after:!0};const d=s;var v,h;n.a=d,v=a("../../node_modules/react-hot-loader/index.js").default,h=a("../../node_modules/react-hot-loader/index.js").leaveModule,v&&(v.register(s,"TextAnchor","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Anchor/TextAnchor.tsx"),v.register(d,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Anchor/TextAnchor.tsx"),h(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Anchor/index.ts":function(e,n,a){"use strict";a("./src/components/Anchor/Anchor.tsx");var t=a("./src/components/Anchor/TextAnchor.tsx");a.d(n,"a",function(){return t.a})},"./src/components/DocumentationPage/Banner.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../typography/es/index.js"),l=a("./src/components/DocumentationPage/BannerSource.tsx");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var i=function(e){var n=e.children,a=(e.className,e.source),t=e.sourceLine,i=o.e(e,["children","className","source","sourceLine"]);return r.createElement(m.a,o.a({},i,{className:"documentation-page__banner"}),n,a&&t&&r.createElement(l.a,{source:a,sourceLine:t}))};i.defaultProps={type:"headline-2"};const u=i;var c,s;n.a=u,c=a("../../node_modules/react-hot-loader/index.js").default,s=a("../../node_modules/react-hot-loader/index.js").leaveModule,c&&(c.register(i,"Banner","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/Banner.tsx"),c.register(u,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/Banner.tsx"),s(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/DocumentationPage/BannerSource.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/react/index.js"),r=a("../icon/es/index.js");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var m=Object({NODE_ENV:"production",PUBLIC_URL:"/react-md"}).GITHUB_URL||"https://github.com/mlaursen/react-md/tree/next/",l=function(e){var n=e.source,a=e.sourceLine,t=""+m+n+"#L"+a,l=t;return window.matchMedia("max-width: 600px").matches&&(l=o.createElement(r.a,{iconClassName:"fa fa-github"})),o.createElement("a",{href:t,className:"documentation-page__banner-source"},l)};const i=l;var u,c;n.a=i,u=a("../../node_modules/react-hot-loader/index.js").default,c=a("../../node_modules/react-hot-loader/index.js").leaveModule,u&&(u.register(m,"SOURCE_PREFIX","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/BannerSource.tsx"),u.register(l,"BannerSource","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/BannerSource.tsx"),u.register(i,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/BannerSource.tsx"),c(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/DocumentationPage/DocumentationPage.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/react/index.js"),r=a("../../node_modules/classnames/index.js"),m=a.n(r);a("./src/components/DocumentationPage/documentation-page.scss");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var l=function(e){var n=e.className,a=e.children;return o.createElement("div",{className:m()("documentation-page",n)},a)};const i=l;var u,c;n.a=i,u=a("../../node_modules/react-hot-loader/index.js").default,c=a("../../node_modules/react-hot-loader/index.js").leaveModule,u&&(u.register(l,"DocumentationPage","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/DocumentationPage.tsx"),u.register(i,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/DocumentationPage.tsx"),c(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/DocumentationPage/SectionTitle.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../../node_modules/classnames/index.js"),l=a.n(m),i=a("./src/components/Anchor/index.ts");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var u=function(e){var n=e.className,a=e.children,t=o.e(e,["className","children"]);return r.createElement(i.a,o.a({},t,{className:l()("documentation-page__section-title",n)}),a)};u.defaultProps={type:"headline-3"};const c=u;var s,d;n.a=c,s=a("../../node_modules/react-hot-loader/index.js").default,d=a("../../node_modules/react-hot-loader/index.js").leaveModule,s&&(s.register(u,"SectionTitle","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/SectionTitle.tsx"),s.register(c,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/DocumentationPage/SectionTitle.tsx"),d(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/DocumentationPage/index.ts":function(e,n,a){"use strict";var t=a("./src/components/DocumentationPage/DocumentationPage.tsx");a.d(n,"b",function(){return t.a});var o=a("./src/components/DocumentationPage/Banner.tsx");a.d(n,"a",function(){return o.a});var r=a("./src/components/DocumentationPage/SectionTitle.tsx");a.d(n,"c",function(){return r.a})},"./src/components/Link.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../../node_modules/react-router-dom/es/Link.js"),l=a("../link/es/index.js");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var i=function(e){return r.createElement(l.a,o.a({},e,{component:m.a}))};const u=i;var c,s;n.a=u,c=a("../../node_modules/react-hot-loader/index.js").default,s=a("../../node_modules/react-hot-loader/index.js").leaveModule,c&&(c.register(i,"Link","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Link.tsx"),c.register(u,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Link.tsx"),s(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Markdown/Markdown.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../../node_modules/classnames/index.js"),l=a.n(m),i=a("../../node_modules/react-router/es/withRouter.js"),u=a("./src/utils/markdown/index.ts");a("./src/components/Markdown/markdown.scss");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var c=function(e){function n(n){var a=e.call(this,n)||this;return a.updateLinks=function(){var e=a.props.history;if(a.container.current)for(var n=function(n){/^https?:\/\/(localhost|react-md|mlaursen\.github\.io\/react-md\/)/.test(n.href)&&(n.onclick=function(a){a.preventDefault(),e.push(n.href.replace(window.location.origin,""))})},t=0,o=Array.from(a.container.current.querySelectorAll(".rmd-link"));t<o.length;t++){n(o[t])}},a.state={html:{__html:Object(u.a)(n.markdown)},prevMarkdown:n.markdown},a.container=r.createRef(),a}return o.c(n,e),n.getDerivedStateFromProps=function(e,n){var a=e.markdown;return n.prevMarkdown!==a?{html:{__html:Object(u.a)(e.markdown)},prevMarkdown:a}:null},n.prototype.componentDidMount=function(){this.updateLinks()},n.prototype.componentDidUpdate=function(e,n){this.state.html!==n.html&&this.updateLinks()},n.prototype.render=function(){var e=this.props,n=e.style,a=e.className,t=e.markdown,o=this.state.html;return o.__html&&t?r.createElement("div",{ref:this.container,style:n,className:l()("markdown-container",a),dangerouslySetInnerHTML:o}):null},n}(r.Component);const s=Object(i.a)(c);var d,v;n.a=s,d=a("../../node_modules/react-hot-loader/index.js").default,v=a("../../node_modules/react-hot-loader/index.js").leaveModule,d&&(d.register(c,"Markdown","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Markdown/Markdown.tsx"),d.register(s,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Markdown/Markdown.tsx"),v(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Markdown/MarkdownPage.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../../node_modules/classnames/index.js"),l=a.n(m),i=a("./src/components/Markdown/Markdown.tsx");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var u=function(e){var n=e.className,a=o.e(e,["className"]);return r.createElement(i.a,o.a({},a,{className:l()("markdown-page rmd-text-container",n)}))};const c=u;var s,d;n.a=c,s=a("../../node_modules/react-hot-loader/index.js").default,d=a("../../node_modules/react-hot-loader/index.js").leaveModule,s&&(s.register(u,"MarkdownPage","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Markdown/MarkdownPage.tsx"),s.register(c,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Markdown/MarkdownPage.tsx"),d(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/Markdown/index.ts":function(e,n,a){"use strict";(function(e){var t=a("./src/components/Markdown/Markdown.tsx");a.d(n,"a",function(){return t.a});var o,r=a("./src/components/Markdown/MarkdownPage.tsx");a.d(n,"b",function(){return r.a}),(o=a("../../node_modules/react-hot-loader/index.js").enterModule)&&o(e);const m=t.a;var l,i;n.c=m,l=a("../../node_modules/react-hot-loader/index.js").default,i=a("../../node_modules/react-hot-loader/index.js").leaveModule,l&&(l.register(m,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/Markdown/index.ts"),i(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/Exports/Exports.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/react/index.js"),r=a("../../node_modules/react-router-dom/es/Switch.js"),m=a("../../node_modules/react-router-dom/es/Redirect.js"),l=a("../../node_modules/react-router-dom/es/Route.js"),i=a("./src/components/Loadable/index.ts"),u=a("./src/components/NotFound/index.ts"),c=a("./src/components/packages/Typography/Exports/Text.tsx");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var s=Object(i.a)(function(){return Promise.all([a.e(0),a.e(45)]).then(a.bind(null,"./src/components/Exports/DerivedDefinitionsPage.tsx"))}),d=function(e){var n=e.match;return o.createElement(r.a,null,o.createElement(m.a,{exact:!0,from:n.path,to:n.path+"/text"}),o.createElement(l.a,{path:n.path+"/typescript-definitions",component:s}),o.createElement(l.a,{path:n.path+"/text",component:c.a}),o.createElement(l.a,{component:u.a}))};const v=d;var h,p;n.a=v,h=a("../../node_modules/react-hot-loader/index.js").default,p=a("../../node_modules/react-hot-loader/index.js").leaveModule,h&&(h.register(s,"TypescriptDefinitions","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/Exports.tsx"),h.register(d,"Exports","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/Exports.tsx"),h.register(v,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/Exports.tsx"),p(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/Exports/PropTable.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("../../node_modules/classnames/index.js"),l=a.n(m),i=a("./src/components/Markdown/index.ts");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var u=function(e){var n=e.children;return r.createElement("th",{className:"prop-table__cell prop-table__cell--header"},n)},c=function(e){var n=e.children,a=e.className;return r.createElement("td",{className:l()("prop-table__cell",a)},n)},s=function(e){var n=e.children,a=e.className;return r.createElement("tr",{className:l()("prop-table__row",a)},n)},d=a("./src/components/packages/Typography/Exports/libraryTypedoc.json");function v(e){if(e.find(function(e){return/HTMLDivElement/.test(e)})){var n=["style","class","onClick"],a=d.HTMLAttributes.attributes.filter(function(e){var a=e.name;return n.includes(a)});return console.log("attributes:",a),a}return[]}function h(e,n){if(e.startsWith("React"))return e;var a=d[e]||n[e];return a&&"type"===a.type?/^(union|function reflection)$/.test(a.tsType)?a.value:(console.log("IUNN"),console.log("type:",a),e):(console.log("type:",a),e)}function p(e,n){return e.typeReferences.reduce(function(e,a){var t=h(a,n);return/\r?\n/.test(t)&&(e.multiline=!0),e.children=e.children.replace(a,t),e},{children:e.type,multiline:!1})}var g=function(e){function n(n){var a=e.call(this,n)||this;return a.state={recommendedExternal:!0,allExternal:!1},a}return o.c(n,e),n.prototype.render=function(){var e=this.props,n=e.attributes,a=e.file,t=(e.typeParameters,e.references),o=a[t[0]],m=null;return o&&o.typeReferences.find(function(e){return"HTMLAttributes"===e})&&(m=v(o.typeReferences.filter(function(e){return"HTMLAttributes"!==e})).map(function(e){return console.log("attribute:",e),null})),r.createElement("div",{className:"scroll-wrapper"},r.createElement("table",{className:"prop-table"},r.createElement("thead",null,r.createElement(s,null,r.createElement(u,null,"Name"),r.createElement(u,null,"Type"),r.createElement(u,null,"Default Value"),r.createElement(u,null,"Description"))),r.createElement("tbody",null,n.map(function(e){var n=e.name,t=e.required,o=e.defaultValue,m=e.description,u=p(e,a);return r.createElement(s,{key:n},r.createElement(c,null,n+(t?" *":"")),r.createElement(c,null,r.createElement("code",{className:l()("prop-table__code",{"prop-table__code--multiline":u.multiline})},u.children)),r.createElement(c,null,o&&r.createElement("code",{className:"prop-table__code"},o)),r.createElement(c,{className:"prop-table__description"},r.createElement(i.a,{markdown:m})))}),m)))},n}(r.Component);const b=g;var E,H;n.a=b,E=a("../../node_modules/react-hot-loader/index.js").default,H=a("../../node_modules/react-hot-loader/index.js").leaveModule,E&&(E.register(u,"Header","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),E.register(c,"Cell","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),E.register(s,"Row","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),E.register(v,"getRecommendedExternalProps","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),E.register(h,"getTypeReferenceValue","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),E.register(p,"getPrettyType","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),E.register(g,"PropTable","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),E.register(b,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/PropTable.tsx"),H(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/Exports/Props.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/react/index.js"),r=a("../../node_modules/lodash/lodash.js"),m=a("./src/components/DocumentationPage/index.ts"),l=a("./src/components/packages/Typography/Exports/PropTable.tsx");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var i=function(e){var n=e.file,a=e.component,t=Object(r.uniq)(Object(r.flatten)(a.typeParameters.map(function(e){return e.typeReferences}))),i=n[a.props];return i&&"interface"===i.type?o.createElement(o.Fragment,null,o.createElement(m.c,{id:"props"},"Props"),o.createElement(l.a,{attributes:i.attributes,file:n,typeParameters:i.typeParameters,references:t})):null};const u=i;var c,s;n.a=u,c=a("../../node_modules/react-hot-loader/index.js").default,s=a("../../node_modules/react-hot-loader/index.js").leaveModule,c&&(c.register(i,"Props","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/Props.tsx"),c.register(u,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/Props.tsx"),s(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/Exports/Text.tsx":function(e,n,a){"use strict";(function(e){var t,o=a("../../node_modules/tslib/tslib.es6.js"),r=a("../../node_modules/react/index.js"),m=a("./src/components/Markdown/index.ts"),l=a("./src/components/DocumentationPage/index.ts"),i=(a("./src/components/packages/Typography/Exports/text.scss"),a("./src/components/packages/Typography/Exports/dummyData.ts")),u=a("./src/components/packages/Typography/Exports/Props.tsx");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var c=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return o.c(n,e),n.prototype.render=function(){var e=this.props.file,n=Object.keys(e).map(function(n){return e[n]}).find(function(e){return"component"===e.type}),a=n.name,t=n.description,o=n.source,i=n.sourceLine;return r.createElement(l.b,null,r.createElement(l.a,{source:o,sourceLine:i},a),r.createElement(m.a,{markdown:t,className:"elevated"}),r.createElement(u.a,{component:n,file:e}))},n.defaultProps={file:i.a},n}(r.Component);const s=c;var d,v;n.a=s,d=a("../../node_modules/react-hot-loader/index.js").default,v=a("../../node_modules/react-hot-loader/index.js").leaveModule,d&&(d.register(c,"TextDocumentation","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/Text.tsx"),d.register(s,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/Text.tsx"),v(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/Exports/dummyData.ts":function(e,n,a){"use strict";(function(e){var t;a.d(n,"a",function(){return l}),(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);var o,r,m={typography:{components:{Text:{name:"Text",type:"component",source:"packages/typography/src/Text.tsx",sourceLine:133,description:'The `Text` component is used to render text with te material design typography styles applied. By\ndefault, everything will be rendered in a `<p>` tag with the normal paragraphy styles.\n\nWhen the `type` prop is changed to another typography style, this component will determine the "best"\nelement to render the text in *unless* the `component` prop is provided. The default mapping is:\n- `"headline-1" -> <h1>`\n- `"headline-2" -> <h2>`\n- `"headline-3" -> <h3>`\n- `"headline-4" -> <h4>`\n- `"headline-5" -> <h5>`\n- `"headline-6" -> <h6>`\n- `"subtitle-1" -> <h5>`\n- `"subtitle-2" -> <h6>`\n- `"body-1"     -> <p>`\n- `"body-2"     -> <p>`\n- `"caption"    -> <caption>`\n- `"overline"   -> <span>`\n- `"button"     -> <button>`\nNOTE: if the `component` prop is not `null`, this logic will be ignored and the provided `component`\nwill be used instead.',typeParameters:[{name:"P",description:'Any additional props that are valid when using the `component` prop or the built-in\n"auto-component" logic. By default, this will just allow any HTMLElement props for each the default\nelements in the "auto-component" logic.',defaultValue:"DefaultTextProps",type:"object",typeReferences:["DefaultTextProps"]}],typeReferences:[],props:"ITextProps",links:[]},TextContainer:{name:"TextContainer",type:"component",source:"packages/typography/src/TextContainer.tsx",sourceLine:74,description:"The `TextContainer` component is a simple wrapper around a `<div>`, `<section>`, `<article>`, or `<aside>` element that applies the text container styles.",typeParameters:[{name:"P",description:'Any additional props that are valid when using the `component` prop or the built-in\n            "auto-component" logic. By default, this will just allow any HTMLElement props for each the default\nelements in the "auto-component" logic.',defaultValue:"DefaultTextProps",type:"object",typeReferences:["DefaultTextProps"]}],typeReferences:[],props:"ITextContainerProps",links:[]}}}},l={TextTypes:{name:"TextTypes",type:"type",tsType:"union",source:"packages/typography/src/Text.tsx",sourceLine:10,description:"A union of all the material design provided typography styles. When used with the Text component, this will generate the correct typography className to apply and determine what component to be rendered as if none was provided.",value:'"headline-1"\n | "headline-2"\n | "headline-3"\n | "headline-4"\n | "headline-5"\n | "headline-6"\n | "subtitle-1"\n | "subtitle-2"\n | "body-1"\n | "body-2"\n | "caption"\n | "overline"\n | "button"',typeParameters:[],typeReferences:[],links:[]},DefaultTextProps:{name:"DefaultTextProps",type:"type",tsType:"union",source:"packages/typography/src/Text.tsx",sourceLine:29,description:'The default additional props that can be applied to the Text component. This mostly just covers all the elements that can be rendered "natively".',value:"HTMLAttributes<HTMLHeadingElement | HTMLParagraphElement | HTMLSpanElement | HTMLDivElement | HTMLButtonElement | HTMLTableCaptionElement | HTMLAnchorElement | HTMLBodyElement | HTMLHtmlElement>",typeParameters:[],typeReferences:["HTMLAttributes","HTMLHeadingElement","HTMLParagraphElement","HTMLSpanElement","HTMLDivElement","HTMLButtonElement","HTMLTableCaptionElement","HTMLAnchorElement","HTMLBodyElement","HTMLHtmlElement"],links:[]},TextRenderFunction:{name:"TextRenderFunction",type:"type",tsType:"function reflection",source:"packages/typography/src/Text.tsx",sourceLine:45,description:"A type describing the text component's children render function. It provides an object containing the correct (and merged) className and exects a renderable element to be returned.",value:"(props: { className: string }) => ReactNode",typeParameters:[],typeReferences:["ReactNode"],links:[]},ITextProps:{name:"ITextProps",type:"interface",source:"packages/typography/src/Text.tsx",sourceLine:52,description:"The base props for rendering the text component.",extends:["DefaultTextProps"],attributes:[{name:"className",description:"An optiona className to merge into typography styles.",defaultValue:"",required:!1,type:"string",typeReferences:[],typeParameterReferences:[]},{name:"component",description:'The component to render as when the children are not a render function. If this prop is omitted, the component will be determined by the `type` prop where:\n- `"headline-1" -> <h1>`\n- `"headline-2" -> <h2>`\n- `"headline-3" -> <h3>`\n- `"headline-4" -> <h4>`\n- `"headline-5" -> <h5>`\n- `"headline-6" -> <h6>`\n- `"subtitle-1" -> <h5>`\n- `"subtitle-2" -> <h6>`\n- `"body-1"     -> <p>`\n- `"body-2"     -> <p>`\n- `"caption"    -> <caption>`\n- `"overline"   -> <span>`\n- `"button"     -> <button>`\n',defaultValue:"null",required:!1,type:"ReactType<P> | null",typeReferences:["ReactType"],typeParameterReferences:["P"]},{name:"type",description:"One of the material design typography text styles. This is used to generate a className that can be applied to any element and have the correct typography.",defaultValue:'"body-1"',required:!1,type:"TextTypes",typeReferences:["TextTypes"],typeParameterReferences:["P"]},{name:"children",description:"Either a child render function or a react node. If this is not the child render function, a different wrapper component can be provided using the `component` prop.",required:!1,defaultValue:"",type:"ReactNode | TextRenderFunction",typeReferences:["ReactNode","TextRenderFunction"],typeParameterReferences:[]}],typeParameters:[{name:"P",type:"any",description:"Any additional props that are available based on the component prop.",defaultValue:"DefaultTextProps",typeReferences:["DefaultTextProps"]}],typeReferences:[],links:[]},ITextDefaultProps:{name:"ITextDefaultProps",type:"default-props",extends:[],source:"packages/typography/src/Text.tsx",sourceLine:94,description:"The default defined props for the text component.",attributes:[{name:"type",type:"TextTypes",typeReferences:["TextTypes"],typeParameterReferences:[]}],typeParameters:[],typeReferences:[],links:[]},Text:{name:"Text",type:"component",source:"packages/typography/src/Text.tsx",sourceLine:133,description:'The `Text` component is used to render text with te material design typography styles applied. By\ndefault, everything will be rendered in a `<p>` tag with the normal paragraphy styles. When the `type` prop is\nchanged to another typography style, this component will determine the "best" element to render the text in *unless*\nthe `component` prop is provided. The default mapping is:\n- `"headline-1" -> <h1>`\n- `"headline-2" -> <h2>`\n- `"headline-3" -> <h3>`\n- `"headline-4" -> <h4>`\n- `"headline-5" -> <h5>`\n- `"headline-6" -> <h6>`\n- `"subtitle-1" -> <h5>`\n- `"subtitle-2" -> <h6>`\n- `"body-1"     -> <p>`\n- `"body-2"     -> <p>`\n- `"caption"    -> <caption>`\n- `"overline"   -> <span>`\n- `"button"     -> <button>`\n\n> NOTE: if the `component` prop is not `null`, this logic will be ignored and the provided `component`\nwill be used instead.',typeParameters:[{name:"P",description:'Any additional props that are valid when using the `component` prop or the built-in\n"auto-component" logic. By default, this will just allow any HTMLElement props for each the default\nelements in the "auto-component" logic.',defaultValue:"DefaultTextProps",type:"object",typeReferences:["DefaultTextProps"]}],typeReferences:[],props:"ITextProps",links:[]}},i={TextContainerSize:{name:"TextContainerSize",type:"type",tsType:"union",source:"packages/typography/src/TextContainer.tsx",sourceLine:9,description:"A union of the available text container sizes. One of these values must be chosen to help set the max width for text.",value:'"auto" | "mobile" | "desktop"',typeParameters:[],typeReferences:[],links:[]},DefaultTextContainerProps:{name:"DefaultTextContainerProps",type:"type",tsType:"union",source:"packages/typography/src/TextContainer.tsx",sourceLine:15,description:"The default additional props that can be provided to the `TextContainer`. By default, it is just all the div element attributes.",value:'"auto" | "mobile" | "desktop"',typeParameters:[],typeReferences:[],links:[]}},u={Text:l,TextContainer:i};o=a("../../node_modules/react-hot-loader/index.js").default,r=a("../../node_modules/react-hot-loader/index.js").leaveModule,o&&(o.register(m,"db","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/dummyData.ts"),o.register(l,"textFile","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/dummyData.ts"),o.register(i,"textContainerFile","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/dummyData.ts"),o.register(u,"TYPOGRAPHY_PACKAGE","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/dummyData.ts"),r(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/Exports/index.ts":function(e,n,a){"use strict";a.r(n),function(e){var t,o=a("./src/components/packages/Typography/Exports/Exports.tsx");(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e);const r=o.a;var m,l;n.default=r,m=a("../../node_modules/react-hot-loader/index.js").default,l=a("../../node_modules/react-hot-loader/index.js").leaveModule,m&&(m.register(r,"default","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/components/packages/Typography/Exports/index.ts"),l(e))}.call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))},"./src/components/packages/Typography/Exports/libraryTypedoc.json":function(e){e.exports={AllHTMLAttributes:{name:"AllHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accept",comment:"",value:"string"},{name:"acceptCharset",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"action",comment:"",value:"string"},{name:"allowFullScreen",comment:"",value:"false | true"},{name:"allowTransparency",comment:"",value:"false | true"},{name:"alt",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"as",comment:"",value:"string"},{name:"async",comment:"",value:"false | true"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoComplete",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoFocus",comment:"",value:"false | true"},{name:"autoPlay",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"capture",comment:"",value:"boolean | string"},{name:"cellPadding",comment:"",value:"number | string"},{name:"cellSpacing",comment:"",value:"number | string"},{name:"challenge",comment:"",value:"string"},{name:"charSet",comment:"",value:"string"},{name:"checked",comment:"",value:"false | true"},{name:"children",comment:"",value:"ReactNode"},{name:"cite",comment:"",value:"string"},{name:"classID",comment:"",value:"string"},{name:"className",comment:"",value:"string"},{name:"colSpan",comment:"",value:"number"},{name:"color",comment:"",value:"string"},{name:"cols",comment:"",value:"number"},{name:"content",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"controls",comment:"",value:"false | true"},{name:"coords",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"data",comment:"",value:"string"},{name:"datatype",comment:"",value:"string"},{name:"dateTime",comment:"",value:"string"},{name:"default",comment:"",value:"false | true"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"defer",comment:"",value:"false | true"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"download",comment:"",value:"any"},{name:"draggable",comment:"",value:"false | true"},{name:"encType",comment:"",value:"string"},{name:"form",comment:"",value:"string"},{name:"formAction",comment:"",value:"string"},{name:"formEncType",comment:"",value:"string"},{name:"formMethod",comment:"",value:"string"},{name:"formNoValidate",comment:"",value:"false | true"},{name:"formTarget",comment:"",value:"string"},{name:"frameBorder",comment:"",value:"number | string"},{name:"headers",comment:"",value:"string"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"high",comment:"",value:"number"},{name:"href",comment:"",value:"string"},{name:"hrefLang",comment:"",value:"string"},{name:"htmlFor",comment:"",value:"string"},{name:"httpEquiv",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"integrity",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"keyParams",comment:"",value:"string"},{name:"keyType",comment:"",value:"string"},{name:"kind",comment:"",value:"string"},{name:"label",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"list",comment:"",value:"string"},{name:"loop",comment:"",value:"false | true"},{name:"low",comment:"",value:"number"},{name:"manifest",comment:"",value:"string"},{name:"marginHeight",comment:"",value:"number"},{name:"marginWidth",comment:"",value:"number"},{name:"max",comment:"",value:"number | string"},{name:"maxLength",comment:"",value:"number"},{name:"media",comment:"",value:"string"},{name:"mediaGroup",comment:"",value:"string"},{name:"method",comment:"",value:"string"},{name:"min",comment:"",value:"number | string"},{name:"minLength",comment:"",value:"number"},{name:"multiple",comment:"",value:"false | true"},{name:"muted",comment:"",value:"false | true"},{name:"name",comment:"",value:"string"},{name:"noValidate",comment:"",value:"false | true"},{name:"nonce",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"open",comment:"",value:"false | true"},{name:"optimum",comment:"",value:"number"},{name:"pattern",comment:"",value:"string"},{name:"placeholder",comment:"",value:"string"},{name:"playsInline",comment:"",value:"false | true"},{name:"poster",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"preload",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"readOnly",comment:"",value:"false | true"},{name:"rel",comment:"",value:"string"},{name:"required",comment:"",value:"false | true"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"reversed",comment:"",value:"false | true"},{name:"role",comment:"",value:"string"},{name:"rowSpan",comment:"",value:"number"},{name:"rows",comment:"",value:"number"},{name:"sandbox",comment:"",value:"string"},{name:"scope",comment:"",value:"string"},{name:"scoped",comment:"",value:"false | true"},{name:"scrolling",comment:"",value:"string"},{name:"seamless",comment:"",value:"false | true"},{name:"security",comment:"",value:"string"},{name:"selected",comment:"",value:"false | true"},{name:"shape",comment:"",value:"string"},{name:"size",comment:"",value:"number"},{name:"sizes",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"span",comment:"",value:"number"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"srcDoc",comment:"",value:"string"},{name:"srcLang",comment:"",value:"string"},{name:"srcSet",comment:"",value:"string"},{name:"start",comment:"",value:"number"},{name:"step",comment:"",value:"number | string"},{name:"style",comment:"",value:"CSSProperties"},{name:"summary",comment:"",value:"string"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"target",comment:"",value:"string"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"useMap",comment:"",value:"string"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"},{name:"wmode",comment:"",value:"string"},{name:"wrap",comment:"",value:"string"}]},AnchorHTMLAttributes:{name:"AnchorHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"download",comment:"",value:"any"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"href",comment:"",value:"string"},{name:"hrefLang",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"media",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"rel",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"target",comment:"",value:"string"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},AreaHTMLAttributes:{name:"AreaHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"alt",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"coords",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"download",comment:"",value:"any"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"href",comment:"",value:"string"},{name:"hrefLang",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"media",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"rel",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"shape",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"target",comment:"",value:"string"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},AudioHTMLAttributes:{name:"AudioHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoPlay",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"controls",comment:"",value:"false | true"},{name:"controlsList",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"loop",comment:"",value:"false | true"},{name:"mediaGroup",comment:"",value:"string"},{name:"muted",comment:"",value:"false | true"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"playsinline",comment:"",value:"false | true"},{name:"prefix",comment:"",value:"string"},{name:"preload",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},BaseHTMLAttributes:{name:"BaseHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"href",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"target",comment:"",value:"string"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},BlockquoteHTMLAttributes:{name:"BlockquoteHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"cite",comment:"",value:"string"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},ButtonHTMLAttributes:{name:"ButtonHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoFocus",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"formAction",comment:"",value:"string"},{name:"formEncType",comment:"",value:"string"},{name:"formMethod",comment:"",value:"string"},{name:"formNoValidate",comment:"",value:"false | true"},{name:"formTarget",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"}]},CanvasHTMLAttributes:{name:"CanvasHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"}]},ColHTMLAttributes:{name:"ColHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"span",comment:"",value:"number"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"}]},ColgroupHTMLAttributes:{name:"ColgroupHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"span",comment:"",value:"number"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},DelHTMLAttributes:{name:"DelHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"cite",comment:"",value:"string"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"dateTime",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},DetailsHTMLAttributes:{name:"DetailsHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"open",comment:"",value:"false | true"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},DialogHTMLAttributes:{name:"DialogHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"open",comment:"",value:"false | true"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},EmbedHTMLAttributes:{name:"EmbedHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"}]},FieldsetHTMLAttributes:{name:"FieldsetHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},FormHTMLAttributes:{name:"FormHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"acceptCharset",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"action",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoComplete",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"encType",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"method",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"noValidate",comment:"",value:"false | true"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"target",comment:"",value:"string"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},HTMLAttributes:{name:"HTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},HtmlHTMLAttributes:{name:"HtmlHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"manifest",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},IframeHTMLAttributes:{name:"IframeHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"allow",comment:"",value:"string"},{name:"allowFullScreen",comment:"",value:"false | true"},{name:"allowTransparency",comment:"",value:"false | true"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"frameBorder",comment:"",value:"number | string"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"marginHeight",comment:"",value:"number"},{name:"marginWidth",comment:"",value:"number"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"sandbox",comment:"",value:"string"},{name:"scrolling",comment:"",value:"string"},{name:"seamless",comment:"",value:"false | true"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"srcDoc",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"}]},ImgHTMLAttributes:{name:"ImgHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"alt",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"anonymous | use-credentials"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"decoding",comment:"",value:"async | auto | sync"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"sizes",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"srcSet",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"useMap",comment:"",value:"string"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"}]},InputHTMLAttributes:{name:"InputHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accept",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"alt",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoComplete",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoFocus",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"capture",comment:"",value:"boolean | string"},{name:"checked",comment:"",value:"false | true"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"formAction",comment:"",value:"string"},{name:"formEncType",comment:"",value:"string"},{name:"formMethod",comment:"",value:"string"},{name:"formNoValidate",comment:"",value:"false | true"},{name:"formTarget",comment:"",value:"string"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"list",comment:"",value:"string"},{name:"max",comment:"",value:"number | string"},{name:"maxLength",comment:"",value:"number"},{name:"min",comment:"",value:"number | string"},{name:"minLength",comment:"",value:"number"},{name:"multiple",comment:"",value:"false | true"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"ChangeEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"pattern",comment:"",value:"string"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"readOnly",comment:"",value:"false | true"},{name:"required",comment:"",value:"false | true"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"size",comment:"",value:"number"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"step",comment:"",value:"number | string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"}]},InsHTMLAttributes:{name:"InsHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"cite",comment:"",value:"string"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"dateTime",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},KeygenHTMLAttributes:{name:"KeygenHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoFocus",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"challenge",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"keyParams",comment:"",value:"string"},{name:"keyType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},LabelHTMLAttributes:{name:"LabelHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"htmlFor",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},LiHTMLAttributes:{name:"LiHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"}]},LinkHTMLAttributes:{name:"LinkHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"as",comment:"",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"href",comment:"",value:"string"},{name:"hrefLang",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"integrity",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"media",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"rel",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"sizes",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},MapHTMLAttributes:{name:"MapHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},MediaHTMLAttributes:{name:"MediaHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoPlay",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"controls",comment:"",value:"false | true"},{name:"controlsList",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"loop",comment:"",value:"false | true"},{name:"mediaGroup",comment:"",value:"string"},{name:"muted",comment:"",value:"false | true"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"playsinline",comment:"",value:"false | true"},{name:"prefix",comment:"",value:"string"},{name:"preload",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},MenuHTMLAttributes:{name:"MenuHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},MetaHTMLAttributes:{name:"MetaHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"charSet",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"content",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"httpEquiv",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},MeterHTMLAttributes:{name:"MeterHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"high",comment:"",value:"number"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"low",comment:"",value:"number"},{name:"max",comment:"",value:"number | string"},{name:"min",comment:"",value:"number | string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"optimum",comment:"",value:"number"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"}]},ObjectHTMLAttributes:{name:"ObjectHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"classID",comment:"",value:"string"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"data",comment:"",value:"string"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"useMap",comment:"",value:"string"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"},{name:"wmode",comment:"",value:"string"}]},OlHTMLAttributes:{name:"OlHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"reversed",comment:"",value:"false | true"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"start",comment:"",value:"number"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"1 | a | A | i | I"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},OptgroupHTMLAttributes:{name:"OptgroupHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"label",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},OptionHTMLAttributes:{name:"OptionHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"label",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"selected",comment:"",value:"false | true"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"}]},OutputHTMLAttributes:{name:"OutputHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"htmlFor",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},ParamHTMLAttributes:{name:"ParamHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"}]},ProgressHTMLAttributes:{name:"ProgressHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"max",comment:"",value:"number | string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"}]},QuoteHTMLAttributes:{name:"QuoteHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"cite",comment:"",value:"string"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},ScriptHTMLAttributes:{name:"ScriptHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"async",comment:"",value:"false | true"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"charSet",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"defer",comment:"",value:"false | true"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"integrity",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"noModule",comment:"",value:"false | true"},{name:"nonce",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},SelectHTMLAttributes:{name:"SelectHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoComplete",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoFocus",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"multiple",comment:"",value:"false | true"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"ChangeEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"required",comment:"",value:"false | true"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"size",comment:"",value:"number"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"}]},SourceHTMLAttributes:{name:"SourceHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"media",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"sizes",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"srcSet",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},StyleHTMLAttributes:{name:"StyleHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"media",comment:"",value:"string"},{name:"nonce",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"scoped",comment:"",value:"false | true"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"type",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},TableHTMLAttributes:{name:"TableHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"cellPadding",comment:"",value:"number | string"},{name:"cellSpacing",comment:"",value:"number | string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"summary",comment:"",value:"string"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},TdHTMLAttributes:{name:"TdHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"align",comment:"",value:"left | center | right | justify | char"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"colSpan",comment:"",value:"number"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"headers",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"rowSpan",comment:"",value:"number"},{name:"scope",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},TextareaHTMLAttributes:{name:"TextareaHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoComplete",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoFocus",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"cols",comment:"",value:"number"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"dirName",comment:"",value:"string"},{name:"disabled",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"form",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"maxLength",comment:"",value:"number"},{name:"minLength",comment:"",value:"number"},{name:"name",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"ChangeEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"readOnly",comment:"",value:"false | true"},{name:"required",comment:"",value:"false | true"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"rows",comment:"",value:"number"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"value",comment:"",value:"string | string | number"},{name:"vocab",comment:"",value:"string"},{name:"wrap",comment:"",value:"string"}]},ThHTMLAttributes:{name:"ThHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"align",comment:"",value:"left | center | right | justify | char"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"colSpan",comment:"",value:"number"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"headers",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"rowSpan",comment:"",value:"number"},{name:"scope",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},TimeHTMLAttributes:{name:"TimeHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"dateTime",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},TrackHTMLAttributes:{name:"TrackHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"default",comment:"",value:"false | true"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"kind",comment:"",value:"string"},{name:"label",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"srcLang",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"}]},VideoHTMLAttributes:{name:"VideoHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoPlay",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"controls",comment:"",value:"false | true"},{name:"controlsList",comment:"",value:"string"},{name:"crossOrigin",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"draggable",comment:"",value:"false | true"},{name:"height",comment:"",value:"number | string"},{name:"hidden",comment:"",value:"false | true"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"loop",comment:"",value:"false | true"},{name:"mediaGroup",comment:"",value:"string"},{name:"muted",comment:"",value:"false | true"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"placeholder",comment:"",value:"string"},{name:"playsInline",comment:"",value:"false | true"},{name:"playsinline",comment:"",value:"false | true"},{name:"poster",comment:"",value:"string"},{name:"prefix",comment:"",value:"string"},{name:"preload",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"vocab",comment:"",value:"string"},{name:"width",comment:"",value:"number | string"}]},WebViewHTMLAttributes:{name:"WebViewHTMLAttributes",attributes:[{name:"about",comment:"",value:"string"},{name:"accessKey",comment:"",value:"string"},{name:"allowFullScreen",comment:"",value:"false | true"},{name:"allowpopups",comment:"",value:"false | true"},{name:"aria-activedescendant",comment:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",value:"string"},{name:"aria-atomic",comment:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",value:"boolean | false | true"},{name:"aria-autocomplete",comment:"Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made.",value:"none | inline | list | both"},{name:"aria-busy",comment:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",value:"boolean | false | true"},{name:"aria-checked",comment:'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.',value:"boolean | false | mixed | true"},{name:"aria-colcount",comment:"Defines the total number of columns in a table, grid, or treegrid.",value:"number"},{name:"aria-colindex",comment:"Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",value:"number"},{name:"aria-colspan",comment:"Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-controls",comment:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",value:"string"},{name:"aria-current",comment:"Indicates the element that represents the current item within a container or set of related elements.",value:"boolean | false | true | page | step | location | date | time"},{name:"aria-describedby",comment:"Identifies the element (or elements) that describes the object.",value:"string"},{name:"aria-details",comment:"Identifies the element that provides a detailed, extended description for the object.",value:"string"},{name:"aria-disabled",comment:"Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",value:"boolean | false | true"},{name:"aria-dropeffect",comment:"Indicates what functions can be performed when a dragged object is released on the drop target.",value:"none | copy | execute | link | move | popup"},{name:"aria-errormessage",comment:"Identifies the element that provides an error message for the object.",value:"string"},{name:"aria-expanded",comment:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",value:"boolean | false | true"},{name:"aria-flowto",comment:"Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",value:"string"},{name:"aria-grabbed",comment:'Indicates an element\'s "grabbed" state in a drag-and-drop operation.',value:"boolean | false | true"},{name:"aria-haspopup",comment:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",value:"boolean | false | true | menu | listbox | tree | grid | dialog"},{name:"aria-hidden",comment:"Indicates whether the element is exposed to an accessibility API.",value:"boolean | false | true"},{name:"aria-invalid",comment:"Indicates the entered value does not conform to the format expected by the application.",value:"boolean | false | true | grammar | spelling"},{name:"aria-keyshortcuts",comment:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",value:"string"},{name:"aria-label",comment:"Defines a string value that labels the current element.",value:"string"},{name:"aria-labelledby",comment:"Identifies the element (or elements) that labels the current element.",value:"string"},{name:"aria-level",comment:"Defines the hierarchical level of an element within a structure.",value:"number"},{name:"aria-live",comment:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",value:"off | assertive | polite"},{name:"aria-modal",comment:"Indicates whether an element is modal when displayed.",value:"boolean | false | true"},{name:"aria-multiline",comment:"Indicates whether a text box accepts multiple lines of input or only a single line.",value:"boolean | false | true"},{name:"aria-multiselectable",comment:"Indicates that the user may select more than one item from the current selectable descendants.",value:"boolean | false | true"},{name:"aria-orientation",comment:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",value:"horizontal | vertical"},{name:"aria-owns",comment:"Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",value:"string"},{name:"aria-placeholder",comment:"Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",value:"string"},{name:"aria-posinset",comment:"Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-pressed",comment:'Indicates the current "pressed" state of toggle buttons.',value:"boolean | false | mixed | true"},{name:"aria-readonly",comment:"Indicates that the element is not editable, but is otherwise operable.",value:"boolean | false | true"},{name:"aria-relevant",comment:"Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",value:"additions | additions text | all | removals | text"},{name:"aria-required",comment:"Indicates that user input is required on the element before a form may be submitted.",value:"boolean | false | true"},{name:"aria-roledescription",comment:"Defines a human-readable, author-localized description for the role of an element.",value:"string"},{name:"aria-rowcount",comment:"Defines the total number of rows in a table, grid, or treegrid.",value:"number"},{name:"aria-rowindex",comment:"Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",value:"number"},{name:"aria-rowspan",comment:"Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",value:"number"},{name:"aria-selected",comment:'Indicates the current "selected" state of various widgets.',value:"boolean | false | true"},{name:"aria-setsize",comment:"Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",value:"number"},{name:"aria-sort",comment:"Indicates if items in a table or grid are sorted in ascending or descending order.",value:"none | ascending | descending | other"},{name:"aria-valuemax",comment:"Defines the maximum allowed value for a range widget.",value:"number"},{name:"aria-valuemin",comment:"Defines the minimum allowed value for a range widget.",value:"number"},{name:"aria-valuenow",comment:"Defines the current value for a range widget.",value:"number"},{name:"aria-valuetext",comment:"Defines the human readable text alternative of aria-valuenow for a range widget.",value:"string"},{name:"autoCapitalize",comment:"",value:"string"},{name:"autoCorrect",comment:"",value:"string"},{name:"autoFocus",comment:"",value:"false | true"},{name:"autoSave",comment:"",value:"string"},{name:"autosize",comment:"",value:"false | true"},{name:"blinkfeatures",comment:"",value:"string"},{name:"children",comment:"",value:"ReactNode"},{name:"className",comment:"",value:"string"},{name:"color",comment:"",value:"string"},{name:"contentEditable",comment:"",value:"false | true"},{name:"contextMenu",comment:"",value:"string"},{name:"dangerouslySetInnerHTML",comment:"",value:"[object Object]"},{name:"datatype",comment:"",value:"string"},{name:"defaultChecked",comment:"",value:"false | true"},{name:"defaultValue",comment:"",value:"string | string"},{name:"dir",comment:"",value:"string"},{name:"disableblinkfeatures",comment:"",value:"string"},{name:"disableguestresize",comment:"",value:"false | true"},{name:"disablewebsecurity",comment:"",value:"false | true"},{name:"draggable",comment:"",value:"false | true"},{name:"guestinstance",comment:"",value:"string"},{name:"hidden",comment:"",value:"false | true"},{name:"httpreferrer",comment:"",value:"string"},{name:"id",comment:"",value:"string"},{name:"inlist",comment:"",value:"any"},{name:"inputMode",comment:"",value:"string"},{name:"is",comment:"",value:"string"},{name:"itemID",comment:"",value:"string"},{name:"itemProp",comment:"",value:"string"},{name:"itemRef",comment:"",value:"string"},{name:"itemScope",comment:"",value:"false | true"},{name:"itemType",comment:"",value:"string"},{name:"lang",comment:"",value:"string"},{name:"nodeintegration",comment:"",value:"false | true"},{name:"onAbort",comment:"Fires when the user aborts the download.",value:"ReactEventHandler<>"},{name:"onAbortCapture",comment:"",value:"ReactEventHandler<>"},{name:"onAnimationEnd",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationEndCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIteration",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationIterationCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStart",comment:"",value:"AnimationEventHandler<>"},{name:"onAnimationStartCapture",comment:"",value:"AnimationEventHandler<>"},{name:"onBlur",comment:"Fires when the object loses the input focus.",value:"FocusEventHandler<>"},{name:"onBlurCapture",comment:"",value:"FocusEventHandler<>"},{name:"onCanPlay",comment:"Occurs when playback is possible, but would require further buffering.",value:"ReactEventHandler<>"},{name:"onCanPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThrough",comment:"",value:"ReactEventHandler<>"},{name:"onCanPlayThroughCapture",comment:"",value:"ReactEventHandler<>"},{name:"onChange",comment:"Fires when the contents of the object or selection have changed.",value:"FormEventHandler<>"},{name:"onChangeCapture",comment:"",value:"FormEventHandler<>"},{name:"onClick",comment:"Fires when the user clicks the left mouse button on the object",value:"MouseEventHandler<>"},{name:"onClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCompositionEnd",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionEndCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStart",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionStartCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdate",comment:"",value:"CompositionEventHandler<>"},{name:"onCompositionUpdateCapture",comment:"",value:"CompositionEventHandler<>"},{name:"onContextMenu",comment:"Fires when the user clicks the right mouse button in the client area, opening the context menu.",value:"MouseEventHandler<>"},{name:"onContextMenuCapture",comment:"",value:"MouseEventHandler<>"},{name:"onCopy",comment:"",value:"ClipboardEventHandler<>"},{name:"onCopyCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onCut",comment:"",value:"ClipboardEventHandler<>"},{name:"onCutCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onDoubleClick",comment:"",value:"MouseEventHandler<>"},{name:"onDoubleClickCapture",comment:"",value:"MouseEventHandler<>"},{name:"onDrag",comment:"Fires on the source object continuously during a drag operation.",value:"DragEventHandler<>"},{name:"onDragCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnd",comment:"Fires on the source object when the user releases the mouse at the close of a drag operation.",value:"DragEventHandler<>"},{name:"onDragEndCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragEnter",comment:"Fires on the target element when the user drags the object to a valid drop target.",value:"DragEventHandler<>"},{name:"onDragEnterCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragExit",comment:"",value:"DragEventHandler<>"},{name:"onDragExitCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragLeave",comment:"Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",value:"DragEventHandler<>"},{name:"onDragLeaveCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragOver",comment:"Fires on the target element continuously while the user drags the object over a valid drop target.",value:"DragEventHandler<>"},{name:"onDragOverCapture",comment:"",value:"DragEventHandler<>"},{name:"onDragStart",comment:"Fires on the source object when the user starts to drag a text selection or selected object.",value:"DragEventHandler<>"},{name:"onDragStartCapture",comment:"",value:"DragEventHandler<>"},{name:"onDrop",comment:"",value:"DragEventHandler<>"},{name:"onDropCapture",comment:"",value:"DragEventHandler<>"},{name:"onDurationChange",comment:"Occurs when the duration attribute is updated.",value:"ReactEventHandler<>"},{name:"onDurationChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEmptied",comment:"Occurs when the media element is reset to its initial state.",value:"ReactEventHandler<>"},{name:"onEmptiedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEncrypted",comment:"",value:"ReactEventHandler<>"},{name:"onEncryptedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onEnded",comment:"Occurs when the end of playback is reached.",value:"ReactEventHandler<>"},{name:"onEndedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onError",comment:"Fires when an error occurs during object loading.",value:"ReactEventHandler<>"},{name:"onErrorCapture",comment:"",value:"ReactEventHandler<>"},{name:"onFocus",comment:"Fires when the object receives focus.",value:"FocusEventHandler<>"},{name:"onFocusCapture",comment:"",value:"FocusEventHandler<>"},{name:"onGotPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onGotPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onInput",comment:"",value:"FormEventHandler<>"},{name:"onInputCapture",comment:"",value:"FormEventHandler<>"},{name:"onInvalid",comment:"",value:"FormEventHandler<>"},{name:"onInvalidCapture",comment:"",value:"FormEventHandler<>"},{name:"onKeyDown",comment:"Fires when the user presses a key.",value:"KeyboardEventHandler<>"},{name:"onKeyDownCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyPress",comment:"Fires when the user presses an alphanumeric key.",value:"KeyboardEventHandler<>"},{name:"onKeyPressCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onKeyUp",comment:"Fires when the user releases a key.",value:"KeyboardEventHandler<>"},{name:"onKeyUpCapture",comment:"",value:"KeyboardEventHandler<>"},{name:"onLoad",comment:"Fires immediately after the browser loads the object.",value:"ReactEventHandler<>"},{name:"onLoadCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadStart",comment:"Occurs when Internet Explorer begins looking for media data.",value:"ReactEventHandler<>"},{name:"onLoadStartCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedData",comment:"Occurs when media data is loaded at the current playback position.",value:"ReactEventHandler<>"},{name:"onLoadedDataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLoadedMetadata",comment:"Occurs when the duration and dimensions of the media have been determined.",value:"ReactEventHandler<>"},{name:"onLoadedMetadataCapture",comment:"",value:"ReactEventHandler<>"},{name:"onLostPointerCapture",comment:"",value:"PointerEventHandler<>"},{name:"onLostPointerCaptureCapture",comment:"",value:"PointerEventHandler<>"},{name:"onMouseDown",comment:"Fires when the user clicks the object with either mouse button.",value:"MouseEventHandler<>"},{name:"onMouseDownCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseEnter",comment:"",value:"MouseEventHandler<>"},{name:"onMouseLeave",comment:"",value:"MouseEventHandler<>"},{name:"onMouseMove",comment:"Fires when the user moves the mouse over the object.",value:"MouseEventHandler<>"},{name:"onMouseMoveCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOut",comment:"Fires when the user moves the mouse pointer outside the boundaries of the object.",value:"MouseEventHandler<>"},{name:"onMouseOutCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseOver",comment:"Fires when the user moves the mouse pointer into the object.",value:"MouseEventHandler<>"},{name:"onMouseOverCapture",comment:"",value:"MouseEventHandler<>"},{name:"onMouseUp",comment:"Fires when the user releases a mouse button while the mouse is over the object.",value:"MouseEventHandler<>"},{name:"onMouseUpCapture",comment:"",value:"MouseEventHandler<>"},{name:"onPaste",comment:"",value:"ClipboardEventHandler<>"},{name:"onPasteCapture",comment:"",value:"ClipboardEventHandler<>"},{name:"onPause",comment:"Occurs when playback is paused.",value:"ReactEventHandler<>"},{name:"onPauseCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlay",comment:"Occurs when the play method is requested.",value:"ReactEventHandler<>"},{name:"onPlayCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPlaying",comment:"Occurs when the audio or video has started playing.",value:"ReactEventHandler<>"},{name:"onPlayingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onPointerCancel",comment:"",value:"PointerEventHandler<>"},{name:"onPointerCancelCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDown",comment:"",value:"PointerEventHandler<>"},{name:"onPointerDownCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnter",comment:"",value:"PointerEventHandler<>"},{name:"onPointerEnterCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeave",comment:"",value:"PointerEventHandler<>"},{name:"onPointerLeaveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMove",comment:"",value:"PointerEventHandler<>"},{name:"onPointerMoveCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOut",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOutCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOver",comment:"",value:"PointerEventHandler<>"},{name:"onPointerOverCapture",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUp",comment:"",value:"PointerEventHandler<>"},{name:"onPointerUpCapture",comment:"",value:"PointerEventHandler<>"},{name:"onProgress",comment:"Occurs to indicate progress while downloading media data.",value:"ReactEventHandler<>"},{name:"onProgressCapture",comment:"",value:"ReactEventHandler<>"},{name:"onRateChange",comment:"Occurs when the playback rate is increased or decreased.",value:"ReactEventHandler<>"},{name:"onRateChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onReset",comment:"Fires when the user resets a form.",value:"FormEventHandler<>"},{name:"onResetCapture",comment:"",value:"FormEventHandler<>"},{name:"onScroll",comment:"Fires when the user repositions the scroll box in the scroll bar on the object.",value:"UIEventHandler<>"},{name:"onScrollCapture",comment:"",value:"UIEventHandler<>"},{name:"onSeeked",comment:"Occurs when the seek operation ends.",value:"ReactEventHandler<>"},{name:"onSeekedCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSeeking",comment:"Occurs when the current playback position is moved.",value:"ReactEventHandler<>"},{name:"onSeekingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSelect",comment:"Fires when the current selection changes.",value:"ReactEventHandler<>"},{name:"onSelectCapture",comment:"",value:"ReactEventHandler<>"},{name:"onStalled",comment:"Occurs when the download has stopped.",value:"ReactEventHandler<>"},{name:"onStalledCapture",comment:"",value:"ReactEventHandler<>"},{name:"onSubmit",comment:"",value:"FormEventHandler<>"},{name:"onSubmitCapture",comment:"",value:"FormEventHandler<>"},{name:"onSuspend",comment:"Occurs if the load operation has been intentionally halted.",value:"ReactEventHandler<>"},{name:"onSuspendCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTimeUpdate",comment:"Occurs to indicate the current playback position.",value:"ReactEventHandler<>"},{name:"onTimeUpdateCapture",comment:"",value:"ReactEventHandler<>"},{name:"onTouchCancel",comment:"",value:"TouchEventHandler<>"},{name:"onTouchCancelCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEnd",comment:"",value:"TouchEventHandler<>"},{name:"onTouchEndCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMove",comment:"",value:"TouchEventHandler<>"},{name:"onTouchMoveCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStart",comment:"",value:"TouchEventHandler<>"},{name:"onTouchStartCapture",comment:"",value:"TouchEventHandler<>"},{name:"onTransitionEnd",comment:"",value:"TransitionEventHandler<>"},{name:"onTransitionEndCapture",comment:"",value:"TransitionEventHandler<>"},{name:"onVolumeChange",comment:"Occurs when the volume is changed, or playback is muted or unmuted.",value:"ReactEventHandler<>"},{name:"onVolumeChangeCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWaiting",comment:"Occurs when playback stops because the next frame of a video resource is not available.",value:"ReactEventHandler<>"},{name:"onWaitingCapture",comment:"",value:"ReactEventHandler<>"},{name:"onWheel",comment:"",value:"WheelEventHandler<>"},{name:"onWheelCapture",comment:"",value:"WheelEventHandler<>"},{name:"partition",comment:"",value:"string"},{name:"placeholder",comment:"",value:"string"},{name:"plugins",comment:"",value:"false | true"},{name:"prefix",comment:"",value:"string"},{name:"preload",comment:"",value:"string"},{name:"property",comment:"",value:"string"},{name:"radioGroup",comment:"",value:"string"},{name:"resource",comment:"",value:"string"},{name:"results",comment:"",value:"number"},{name:"role",comment:"",value:"string"},{name:"security",comment:"",value:"string"},{name:"slot",comment:"",value:"string"},{name:"spellCheck",comment:"",value:"false | true"},{name:"src",comment:"",value:"string"},{name:"style",comment:"",value:"CSSProperties"},{name:"suppressContentEditableWarning",comment:"",value:"false | true"},{name:"suppressHydrationWarning",comment:"",value:"false | true"},{name:"tabIndex",comment:"",value:"number"},{name:"title",comment:"",value:"string"},{name:"typeof",comment:"",value:"string"},{name:"unselectable",comment:"",value:"on | off"},{name:"useragent",comment:"",value:"string"},{name:"vocab",comment:"",value:"string"},{name:"webpreferences",comment:"",value:"string"}]}}},"./src/utils/markdown/index.ts":function(e,n,a){"use strict";(function(e){a.d(n,"a",function(){return d});var t,o=a("../../node_modules/marked/lib/marked.js"),r=a("../../node_modules/prismjs/prism.js");a("../../node_modules/prismjs/components/prism-bash.js"),a("../../node_modules/prismjs/components/prism-css-extras.js"),a("../../node_modules/prismjs/components/prism-scss.js"),a("../../node_modules/prismjs/components/prism-jsx.js"),a("../../node_modules/prismjs/components/prism-typescript.js"),a("../../node_modules/prismjs/components/prism-git.js");function m(e){return e?"tsx"===e?"typescript":"sh"===e?"bash":"diff"===e?"git":e:"markup"}(t=a("../../node_modules/react-hot-loader/index.js").enterModule)&&t(e),o.setOptions({renderer:new o.Renderer,highlight:function(e,n){return r.highlight(e,r.languages[m(n)])},gfm:!0,tables:!0,breaks:!1,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!1,headerIds:!0});var l,i,u=[],c=[function(e){return e.replace(/<a href/g,'<a class="rmd-link" href')},function(e){return e.replace(/(<h2 id="table-of-contents")(>Table of Contents<\/h2>\r?\n<ul)/,function(e,n,a){return n+' class="markdown-toc"'+a+' class="markdown-toc__list"'})},function(e){return e.replace(/yarn add/g,'<span class="token function">yarn</span> <span class="token function">add</span>')}];function s(e,n,a){return n.reduce(function(e,n){return n(e,a)},e)}function d(e,n){return s(o.parse(s(e,u,n)),c,n)}l=a("../../node_modules/react-hot-loader/index.js").default,i=a("../../node_modules/react-hot-loader/index.js").leaveModule,l&&(l.register(m,"getLanguage","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/utils/markdown/index.ts"),l.register(u,"preTransforms","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/utils/markdown/index.ts"),l.register(c,"postTransforms","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/utils/markdown/index.ts"),l.register(s,"transform","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/utils/markdown/index.ts"),l.register(d,"markdownToHTML","C:/Users/Mikkel Laursen/Documents/code/react-md/packages/documentation/src/utils/markdown/index.ts"),i(e))}).call(this,a("../../node_modules/webpack/buildin/harmony-module.js")(e))}}]);
//# sourceMappingURL=8.ad6802b0.chunk.min.js.map